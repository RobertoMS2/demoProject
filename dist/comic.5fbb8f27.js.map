{"version":3,"sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/process/browser.js","../node_modules/randombytes/browser.js","../node_modules/inherits/inherits_browser.js","../node_modules/hash-base/node_modules/safe-buffer/index.js","../node_modules/events/events.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/hash-base/node_modules/readable-stream/errors-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/util-deprecate/browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/string_decoder/lib/string_decoder.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/hash-base/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/hash-base/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/hash-base/node_modules/readable-stream/readable-browser.js","../node_modules/hash-base/index.js","../node_modules/md5.js/index.js","../node_modules/ripemd160/index.js","../node_modules/sha.js/hash.js","../node_modules/sha.js/sha.js","../node_modules/sha.js/sha1.js","../node_modules/sha.js/sha256.js","../node_modules/sha.js/sha224.js","../node_modules/sha.js/sha512.js","../node_modules/sha.js/sha384.js","../node_modules/sha.js/index.js","../node_modules/process-nextick-args/index.js","../node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/core-util-is/lib/util.js","../node_modules/readable-stream/lib/internal/streams/BufferList.js","../node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/readable-stream/lib/_stream_writable.js","../node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/readable-stream/lib/_stream_readable.js","../node_modules/readable-stream/lib/_stream_transform.js","../node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/readable-stream/readable-browser.js","../node_modules/readable-stream/writable-browser.js","../node_modules/readable-stream/duplex-browser.js","../node_modules/readable-stream/transform.js","../node_modules/readable-stream/passthrough.js","../node_modules/stream-browserify/index.js","../node_modules/cipher-base/index.js","../node_modules/create-hash/browser.js","../node_modules/create-hmac/legacy.js","../node_modules/create-hash/md5.js","../node_modules/create-hmac/browser.js","../node_modules/browserify-sign/browser/algorithms.json","../node_modules/browserify-sign/algos.js","../node_modules/pbkdf2/lib/precondition.js","../node_modules/pbkdf2/lib/default-encoding.js","../node_modules/pbkdf2/lib/to-buffer.js","../node_modules/pbkdf2/lib/sync-browser.js","../node_modules/pbkdf2/lib/async.js","../node_modules/pbkdf2/browser.js","../node_modules/des.js/lib/des/utils.js","../node_modules/minimalistic-assert/index.js","../node_modules/des.js/lib/des/cipher.js","../node_modules/des.js/lib/des/des.js","../node_modules/des.js/lib/des/cbc.js","../node_modules/des.js/lib/des/ede.js","../node_modules/des.js/lib/des.js","../node_modules/browserify-des/index.js","../node_modules/browserify-aes/modes/ecb.js","../node_modules/buffer-xor/index.js","../node_modules/browserify-aes/modes/cbc.js","../node_modules/browserify-aes/modes/cfb.js","../node_modules/browserify-aes/modes/cfb8.js","../node_modules/browserify-aes/modes/cfb1.js","../node_modules/browserify-aes/modes/ofb.js","../node_modules/browserify-aes/incr32.js","../node_modules/browserify-aes/modes/ctr.js","../node_modules/browserify-aes/modes/list.json","../node_modules/browserify-aes/modes/index.js","../node_modules/browserify-aes/aes.js","../node_modules/browserify-aes/ghash.js","../node_modules/browserify-aes/authCipher.js","../node_modules/browserify-aes/streamCipher.js","../node_modules/evp_bytestokey/index.js","../node_modules/browserify-aes/encrypter.js","../node_modules/browserify-aes/decrypter.js","../node_modules/browserify-aes/browser.js","../node_modules/browserify-des/modes.js","../node_modules/browserify-cipher/browser.js","../node_modules/diffie-hellman/node_modules/bn.js/lib/bn.js","../node_modules/miller-rabin/node_modules/bn.js/lib/bn.js","../node_modules/brorand/index.js","../node_modules/miller-rabin/lib/mr.js","../node_modules/diffie-hellman/lib/generatePrime.js","../node_modules/diffie-hellman/lib/primes.json","../node_modules/diffie-hellman/lib/dh.js","../node_modules/diffie-hellman/browser.js","../node_modules/browserify-sign/node_modules/safe-buffer/index.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/browserify-sign/node_modules/readable-stream/errors-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/browserify-sign/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/browserify-sign/node_modules/readable-stream/readable-browser.js","../node_modules/browserify-rsa/node_modules/bn.js/lib/bn.js","../node_modules/browserify-rsa/index.js","../node_modules/elliptic/package.json","../node_modules/elliptic/node_modules/bn.js/lib/bn.js","../node_modules/minimalistic-crypto-utils/lib/utils.js","../node_modules/elliptic/lib/elliptic/utils.js","../node_modules/elliptic/lib/elliptic/curve/base.js","../node_modules/elliptic/lib/elliptic/curve/short.js","../node_modules/elliptic/lib/elliptic/curve/mont.js","../node_modules/elliptic/lib/elliptic/curve/edwards.js","../node_modules/elliptic/lib/elliptic/curve/index.js","../node_modules/hash.js/lib/hash/utils.js","../node_modules/hash.js/lib/hash/common.js","../node_modules/hash.js/lib/hash/sha/common.js","../node_modules/hash.js/lib/hash/sha/1.js","../node_modules/hash.js/lib/hash/sha/256.js","../node_modules/hash.js/lib/hash/sha/224.js","../node_modules/hash.js/lib/hash/sha/512.js","../node_modules/hash.js/lib/hash/sha/384.js","../node_modules/hash.js/lib/hash/sha.js","../node_modules/hash.js/lib/hash/ripemd.js","../node_modules/hash.js/lib/hash/hmac.js","../node_modules/hash.js/lib/hash.js","../node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","../node_modules/elliptic/lib/elliptic/curves.js","../node_modules/hmac-drbg/lib/hmac-drbg.js","../node_modules/elliptic/lib/elliptic/ec/key.js","../node_modules/elliptic/lib/elliptic/ec/signature.js","../node_modules/elliptic/lib/elliptic/ec/index.js","../node_modules/elliptic/lib/elliptic/eddsa/key.js","../node_modules/elliptic/lib/elliptic/eddsa/signature.js","../node_modules/elliptic/lib/elliptic/eddsa/index.js","../node_modules/elliptic/lib/elliptic.js","../node_modules/bn.js/lib/bn.js","../node_modules/asn1.js/node_modules/bn.js/lib/bn.js","../node_modules/safer-buffer/safer.js","../node_modules/asn1.js/lib/asn1/base/reporter.js","../node_modules/asn1.js/lib/asn1/base/buffer.js","../node_modules/asn1.js/lib/asn1/base/node.js","../node_modules/asn1.js/lib/asn1/constants/der.js","../node_modules/asn1.js/lib/asn1/encoders/der.js","../node_modules/asn1.js/lib/asn1/encoders/pem.js","../node_modules/asn1.js/lib/asn1/encoders/index.js","../node_modules/asn1.js/lib/asn1/decoders/der.js","../node_modules/asn1.js/lib/asn1/decoders/pem.js","../node_modules/asn1.js/lib/asn1/decoders/index.js","../node_modules/asn1.js/lib/asn1/api.js","../node_modules/asn1.js/lib/asn1/base/index.js","../node_modules/asn1.js/lib/asn1/constants/index.js","../node_modules/asn1.js/lib/asn1.js","../node_modules/parse-asn1/certificate.js","../node_modules/parse-asn1/asn1.js","../node_modules/parse-asn1/aesid.json","../node_modules/parse-asn1/fixProc.js","../node_modules/parse-asn1/index.js","../node_modules/browserify-sign/browser/curves.json","../node_modules/browserify-sign/browser/sign.js","../node_modules/browserify-sign/browser/verify.js","../node_modules/browserify-sign/browser/index.js","../node_modules/create-ecdh/node_modules/bn.js/lib/bn.js","../node_modules/create-ecdh/browser.js","../node_modules/public-encrypt/mgf.js","../node_modules/public-encrypt/xor.js","../node_modules/public-encrypt/node_modules/bn.js/lib/bn.js","../node_modules/public-encrypt/withPublic.js","../node_modules/public-encrypt/publicEncrypt.js","../node_modules/public-encrypt/privateDecrypt.js","../node_modules/public-encrypt/browser.js","../node_modules/randomfill/browser.js","../node_modules/crypto-browserify/index.js","../node_modules/crypto-js/core.js","../node_modules/crypto-js/md5.js","js/utils/consts.js","js/comics/comicUtils.js","js/comics/comic.js"],"names":["process","module","exports","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","setTimeout","e","clearTimeout","runTimeout","fun","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","nextTick","args","Array","arguments","i","push","Item","array","prototype","apply","title","env","argv","version","versions","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","R","Reflect","ReflectApply","target","receiver","Function","ReflectOwnKeys","ownKeys","Object","getOwnPropertySymbols","getOwnPropertyNames","ProcessEmitWarning","warning","console","warn","NumberIsNaN","Number","isNaN","value","EventEmitter","init","_events","undefined","_eventsCount","_maxListeners","defaultMaxListeners","checkListener","listener","TypeError","defineProperty","enumerable","get","set","arg","RangeError","getPrototypeOf","create","setMaxListeners","n","_getMaxListeners","that","getMaxListeners","type","doError","events","error","er","err","message","context","handler","arrayClone","_addListener","prepend","m","existing","newListener","unshift","warned","w","String","emitter","count","onceWrapper","fired","wrapFn","_onceWrap","state","wrapped","bind","list","position","originalListener","shift","spliceOne","keys","key","_listeners","unwrap","evlistener","unwrapListeners","rawListeners","listenerCount","eventNames","arr","copy","index","pop","ret","Promise","resolve","reject","eventListener","errorListener","slice","require","object","enumerableOnly","symbols","filter","sym","getOwnPropertyDescriptor","_objectSpread","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","obj","configurable","writable","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","_require","Buffer","_require2","inspect","custom","copyBuffer","src","offset","BufferList","head","tail","v","entry","data","next","clear","join","s","p","alloc","allocUnsafe","consume","hasStrings","_getString","_getBuffer","first","c","str","nb","buf","_","options","depth","customInspect","destroy","cb","_this","readableDestroyed","_readableState","destroyed","writableDestroyed","_writableState","emitErrorNT","errorEmitted","_destroy","emitErrorAndCloseNT","emitCloseNT","self","emitClose","undestroy","reading","ended","endEmitted","ending","finalCalled","prefinished","finished","errorOrDestroy","stream","rState","wState","autoDestroy","_inheritsLoose","subClass","superClass","constructor","__proto__","codes","createErrorType","code","Base","getMessage","arg1","arg2","arg3","NodeError","_Base","oneOf","expected","thing","isArray","map","startsWith","search","pos","substr","endsWith","this_len","substring","includes","start","indexOf","actual","determiner","replace","msg","ERR_INVALID_OPT_VALUE","highWaterMarkFrom","isDuplex","duplexKey","highWaterMark","getHighWaterMark","hwm","isFinite","Math","floor","objectMode","Writable","WriteReq","chunk","encoding","callback","CorkedRequest","finish","onCorkedFinish","Duplex","WritableState","internalUtil","deprecate","Stream","OurUint8Array","global","Uint8Array","_uint8ArrayToBuffer","from","_isUint8Array","isBuffer","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","needDrain","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","bufferedRequest","lastBufferedRequest","pendingcb","bufferedRequestCount","corkedRequestsFree","getBuffer","current","out","writableStateBufferGetter","realHasInstance","Symbol","hasInstance","write","_write","writev","_writev","final","_final","pipe","writeAfterEnd","validChunk","isBuf","writeOrBuffer","cork","uncork","clearBuffer","setDefaultEncoding","toLowerCase","decodeChunk","newChunk","last","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","afterWrite","onwriteDrain","l","buffer","holder","allBuffers","end","endWritable","callFinal","prefinish","need","corkReq","_undestroy","objectKeys","Readable","method","allowHalfOpen","readable","onend","onEndNT","ERR_STREAM_PREMATURE_CLOSE","called","_len","_key","isRequest","setHeader","abort","eos","opts","onlegacyfinish","onfinish","writableEnded","readableEnded","onerror","onclose","onrequest","req","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","done","readAndResolve","iter","read","onReadable","wrapForNext","lastPromise","then","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","setPrototypeOf","promise","asyncIterator","_return","_this2","createReadableStreamAsyncIterator","_Object$create","iterator","ReadableState","EE","EElistenerCount","debugUtil","debug","debuglog","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","StringDecoder","kProxyEvents","event","fn","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","paused","awaitDrain","readingMore","decoder","_read","skipChunkCheck","readableAddChunk","addToFront","onEofChunk","chunkInvalid","addChunk","maybeReadMore","emitReadable","isPaused","setEncoding","enc","content","MAX_HWM","computeNewHighWaterMark","howMuchToRead","parseInt","nOrig","endReadable","doRead","fromList","emitReadable_","flow","maybeReadMore_","dest","pipeOpts","doEnd","stdout","stderr","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","ondrain","pipeOnDrain","cleanedUp","ondata","pause","resume","pipeOnDrainFunctionResult","dests","splice","ev","res","nReadingNextTick","updateReadableListening","resume_","wrap","methodWrap","methodWrapReturnFunction","_fromList","endReadableNT","iterable","xs","x","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writechunk","rs","needTransform","writeencoding","transform","_transform","flush","_flush","err2","PassThrough","ERR_MISSING_ARGS","destroyer","closed","to","popCallback","streams","pipeline","destroys","reduce","inherits","throwIfNotStringOrBuffer","val","prefix","HashBase","blockSize","_block","_blockSize","_blockOffset","_length","_finalized","update","digest","block","_update","j","carry","_digest","toString","fill","pna","asyncWrite","setImmediate","util","writableHwm","writableHighWaterMark","defaultHwm","valid","MAX_ALLOC","pow","iterations","keylen","pVersionMajor","split","ArrayBuffer","isView","md5","RIPEMD160","sha","checkParameters","toBuffer","ZEROS","sizes","sha1","sha224","sha256","sha384","sha512","rmd160","ripemd160","Hmac","alg","saltLen","hash","getDigest","blocksize","ipad","opad","ipad1","ipad2","size","h","shaFunc","rmd160Func","pbkdf2","password","salt","hmac","DK","block1","destPos","hLen","ceil","writeUInt32BE","T","U","k","ZERO_BUF","subtle","crypto","toBrowser","checks","checkNative","algo","browser","importKey","deriveBits","prom","browserPbkdf2","catch","resolvePromise","resp","pbkdf2Sync","oldBrowser","safeBuffer","randombytes","kBufferMaxLength","kMaxLength","msCrypto","kMaxUint32","assertOffset","assertSize","getRandomValues","randomFill","randomFillSync","actualFill","ourBuf","uint","bytes","public_key","private_key","constants","url_comic","url_comics","detail","document","querySelector","title_wrapper","breadcrumbs","outputComic","item","createElement","setAttribute","thumbnail","path","extension","innerHTML","description","isbn","dates","date","prices","price","priceName","series","creators","available","items","element","role","characters","character","stories","story","appendChild","outputComics","id","getComic","Date","getTime","md","url","fetch","response","json","characterLi","currentLi","results","JSON","stringify","getComicsExtended","comicUtils","queryString","window","location","urlParams","URLSearchParams"],"mappings":"AyKAA,AHAA,ACAA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,AHAA,ADAA,AjKAA,AkGAA,ALAA,AXAA,ALAA,AFAA,AUAA,ADAA,AWAA,ADAA,AlCAA,ADAA,AoHAA,AnEAA,ASAA,ADAA,AJAA,AEAAC,AIAA,ATAA,AJAAA,AcAAC,AhEAA,AEAA,AoIAA,ApHAA,AFAA,AFAA,ACAA,AEAA,ALAA,AiCAA,ACAA,AmDAA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AHAA,AjHAA,AIAA,AWAA,ADAA,AJAA,AEAAD,AIAA,AXAA,AJAAA,AgBAAC,AoHAA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,AiGAA,A/BAA,AwDAA,AgDAA,ADAA,ADAA,AxGAAA,ALAA,A8HAA,ALAA,ApIAA,ANAA,AGAA,ADAA,AJAA,AHAA,AaAA,AJAA,AGAA,AFAA,AZAA,AgBAA,A6IAA,ADAA,ADAAD,InIAImjB,AqIAEqI,ADAA7H,E/EAA,ATAA,ApFAA,AXAA,AsLAA,C9EAC1jB,ATAAA,AcAA,AlGAAA,AXAAA,AgBAA,AwCAA,A+HAE,ADAFA,C9HACslB,EqDAEvlB,A7FAAA,AuKAEyJ,GpIAC,CqDAb,ATAA,ApFAA,AXAA,AwDAA,AgIAgB,AFAhB,EzEAgB,A7FAA,AmCAAiI,CqDAC,ATAAjI,AcAAxJ,AlGAA,AXAAwJ,AgBAAxJ,AwCAAwJ,AgIAEA,ADAA,ADAF,CCAG,EpIAA,CAAC2Z,G4CAG,AcAd,A7GAc,AgBAd,AwCAc,ALAR,AqIAU,CzFAD,A/FAA,AwDAA,ALAA,AqIAE,CrIAX,C0DAW3Z,A7FAAA,CmCAC,CqDAC,A7FAA,CwCAb,G4CAQ,A/FAA,AuLAL,CxFAF,AcAiB,A7GAjB,AgBAiB,AmCAA,AoIAlC,CxFAmC5E,AcAA,A7GAAA,AgBAA,AmCAnC,EAAoC,CKAZ,CAAxB,AgIA0B,CAA1B,OzFAA,A/FAA,e6GAkC,A7FAA,C6FAlC,A7FAA;A+ICA,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A5DCA,ADAA,AoHAA,AGDA,AFAA,ACAA,AlEAA,AMCA,ADAA,AHDA,APAA,ACAA,AKCA,AEAE,AIAF,ACAA5E,AfDA,A5BAA,AtBAA,AdAA,A4IAA,ADAA,A5HCA,AEAA,ACDA,AFAA,AqICA,AEDA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DAA,AVAA,AOCA,ADAA,AHDA,ATAA,ACAA,AOCA,AEAE,AIAF,ACAAA,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,A0BDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A5GCAA,AJDA,AEAA,ADAA,AzBAA,AjCAA,AsLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,ApIAA,ANAA,AGAA,ADAA,ALDA,ACCA,AHAA,AaAA,AJAA,AGAA,AFAA,ApBDA,AzBAA,A0BAA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AiLCImoB,EAAAA,ElIDApU,AEAA2P,ADAAxY,GwDCG,A7FAA,AwCAA,AFDA,CkDCC,AKAAsH,AlGAA,AKAAA,AwCAA0U,EFDE1d,ADAA,EmDCEpJ,A7FAAA,A2KAE,CjIDDoJ,C4CAC,AYCd,A3GDc,AcCd,AsKAiB,G9EAT,AKASxJ,AlGAT,AKASA,AsCDA,CkDCC,A7FAA,A6CAlB,AFDkB,CFAlB,CCAoB,CGCCwJ,AHDA,GwDCrB,A7FAA,IwCA4B,CAAC,KHDT,CCAH,ADAJ,CCAb,ADAoC0B,KGCR,CAA5B,AHDA,MiIAiB,iB9ECT,A7FAA,C6FAN,A7FAA;AoJCF,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,AlEAA,AMCA,ADAA,AJAA,AEAC,AIAD,ATAA,AUAAlL,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AEAA,ACDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,AzEAA,AOCA,ADAA,AJAA,AEAC,AIAD,AXAA,AYAAA,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,A0BDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,AhHAA,ADCAD,AvBDA,AjCAA,AsLCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,A1IAA,AGAA,ADAA,ALDA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCA,ADDA,ADCIqoB,C9EFJ,A7FAA,C2KEIA,EnFAAnX,A/FAAA,ATDAnR,A6LCE0rB,ADDAnD,EpICA,C0DAC,A7FAA,AmCAAroB,C0DACyX,A7FAAA,GrBDG,E4LAI,ADCA,CnIAf,AxDDc1X,C6LCG,AFAC,CzEAlB,A7FAA,AuKDkByJ,CpICD,CqIAGiiB,C3EADzrB,A7FAAA,CrBDC,CAACA,E4LAI,CCCC,ADDA,CpFCD,A/FAA,AoLAE0rB,C3EA3B,A7FAA,CmCA2BtI,CgDAC5Z,A/FAAA,ATDd,GAAiB,EAA/B,A6LCoB,CAAgB4G,CrFAD,A/FAA,ATCnC,CwGDoC,A/FAA,C+CAnB,EAAsBiT,CqIAvC,CDDyB,CAAzB,GpICiB,EAA8B,MgDAZ,A/FAA,C+FAP,A/FAA,C+FA2BjU,A/FAAA,K+FA3B,A/FAA,C+FAiC6B,A/FAAA,qB+FA7D,A/FAA;A2JCA,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,AlEAA,AMCA,AFHA,ACGA,ANHA,AGEA,APAA,ACAA,AYCAjR,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AEAA,ACDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DDA,AVCA,AOCA,AFHA,ACGA,APHA,AIEA,ATAA,ACAA,AcCAA,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,A0BDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A7GFA,AJGE,AGFF,ADCAD,AzBAA,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsLAA,AhJGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCA,AFHiB,CAAjB,G/EEIiZ,AtFDA9N,APCA8N,A6CFA9N,ADCAyY,AkIEEgI,ErIAA,AEDA,CwDCC,A7FAA,AqCDA3rB,CwDCC4R,A7FAAA,CgFDC5N,ACAAmJ,AhGAAnJ,ACAAmJ,CeDC,AsCDA,GtCCG3D,AsCDAA,AJGA4Z,AGFA,AkIEE,CnIDf,E2CAA,ACAA,AYCA,A5GDA,ACAA,AcCA,AsCFgB5Z,AkIEE,CxFDDC,ACAAjD,AhGAAiD,ACAAjD,AmDAA,EwDCEgD,A7FAAA,CiFDnB,AhFDoB,AfCpB,AqDFoB,AiIGEoiB,CvKFD,AsCDA,C0CECxe,A/FAAA,C8FAtB,A/FAA,AkDCM,AGFiB,C2CCvB,A/FAA,AoDDwB,CiDCxB,APAyB1D,AtFAzB,ATAyBA,CgGAC,AYCA,A3GDA,AcCA,C6FAC,A7FAA,AqCDAsG,CFCC,IEDX,EpCDG,AsCDA,AFEc+B,CpCDrB,AsCDA,ADCU,AkIEL,CvKFkB7G,AsCDAA,AJGlC,AGFF,AkIEsCsgB,ErIAA,C6CDtC,A/FAA,E+FAyC,A/FAA,CgBDzC,AsCDA,AFEiB,EAA2BroB,GmIC1B,CnIDD,AmICjB,EnIDkD,IwDCxB,A7FAA,C6FA1B,A7FAA;A+ICA,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,ArEDA,AGCA,AMCA,AFHA,ACGA,ANHA,AJC2C,ACCzC,AKCF,AMAA,ATAA,AUAAnD,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AEAA,ACDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A7EDA,AICA,AOCA,AFHA,ACGA,APHA,ALC2C,ACCzC,AOCF,AMAA,AXAA,AYAAA,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,A0BDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,AhHDA,ADEI,AEDF,AzBAF,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsCGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCA,ADDA,IjFCI+X,AMAAO,AnGAAP,AMAAO,AyKAEkS,ADDAlC,EvFDyClgB,ACCzCiF,AhGDyCjF,ACCzCiF,AmDAAnC,AmICE,C5EAR,ACAO,A9FAP,ACAO,C6FACkH,A7FAAA,CkFFCrD,ACEAmC,AhGFAnC,ACEAmC,AoLAEya,CxFFwC,A/FAA,AmDA9B,ADEX,C8CDC,A/FAA,CmDAC,C2CD0C1nB,A/FAAA,AoDCzC8O,AkIAE,CtFAD,AYCd,A3GDc,AcCd,AmCAc1N,EoIDI,C1ECDmE,A7FAAA,CiFDf,A/FAA,AsLCkB,CxFFwC,A/FAA,AuLEvChE,CxFFwC4C,A/FAAA,CoDCvD,CAAgB4H,AmICX,CtFFX,A/FAA,AgDEU,AqIAe,CtFFDhB,AFA8B,AaE9B,A1GFAA,AFA8B,AeE9B,AmCAA,C6CF0CvF,AaEzC,A5GFyCA,AeEzC,CmFAzB,A/FAA,C+FA2BuD,A/FAAA,AiDDrB,AmICK,CnIDT,AmICF,ElFA8B,A7FAA,A4CDA,C2CDwB,A/FAA,CiGAtD,AFA2C,A7FA3C,AFA2C,CqGEVxD,A7FAAA,CyFFCyF,ACElC,AhGFkCA,ACElC,E+FAoCkC,A/FAAA,IkGAI,A7FAA,C6FAC,A7FAA,GyFFzC,ACEA,AhGFA,ACEA,E8FF8C,ACEAC,AhGFA,ACEAA,G+CApC,C0DAc,A7FAA,AmCApB,C0DAJ,A7FAA,ImFAA,A/FAA,E+FAyD,A/FAA,CkGAjB,A7FAA,C6FAP,A7FAA,C6FA2BhC,A7FAAA,K6FA3B,A7FAA,C6FAiC2I,A7FAAA,A8KDlE,0BjFCA,A7FAA;AsJCA,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,ArEFgD/I,AGEhD,AMCA,AFHA,ACGA,ANHA,AGEA,AJCE,AUAFhP,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AEAA,ACDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DFA,AdAgDgP,AIEhD,AOCA,AFHA,ACGA,APHA,AIEA,ANCE,AYAFhP,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,ALAA,A0BDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A7GFA,AHCE+T,ADEC,AGHH,ADEI,AzBAJ,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsLAA,AhJGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLAA,ErFFgD/E,A/FAAA,AiDC9C+E,EnCDE6L,AsCAAiE,ADAAD,AiIEE2E,G1ECC,A7FAA,AsCHA,CuDGC3I,A7FAAA,CuFDC1V,AJCA8C,AzFDA9C,ANCA8C,A8KHAma,ChFA+C,A/FAA,AmDA9C3d,C4CA+CvH,A/FAAA,AkDE9C+N,EpCFE,CsKEG,EpFCA,AlFHAxG,AbGA,AiDDZ,C8CCa6H,AUAjB,AzGAiBA,AYAjB,AoCFiB,AEDA,AiIEE,CjIFD,CCAC,A2HAnB,ChFAgD,AWG5B7H,A1GH4B,AaG5BA,AoCFA,EGDEA,A2HAC,ChFA8CvF,AjFA9C,AdA8CA,CoGErE,AtFFwB,APExB,C6FAyBoG,A7FAAA,C4CFR,CuDGU,A7FAA,AoCFzB,AEDF,CiDEA,AMC4B,AnGD5B,AMC4B,CkFH+C,A/FAA,AoDA9C,C2CA+CxE,AKE9CwC,AJCrB,AhGHmExC,AOE9CwC,ANCrB,AmDHqB,GgDE9B,A7FAA,CyFCkC,A/FAA,CmGDC1D,A7FAAA,CwFFkC,A/FAA,C+FAcsK,A/FAAA,CgGG1E,A/FAA,EmGDT,A7FAA,CyFCyCjC,AlFHlB,AbGkBA,CmGDC,AtFF1B,APE0B,COFC4S,GsCAd,C2CAgE,A/FAA,AoDA7F,C2CA8F3d,ACG9C,AhGH8CA,ACG9C,C+FACoP,A/FAAA,GaHjD,I4FG2B,A7FAA,CkFH0C,AWGrE,A1GHqE,AaGrE,CkFHgD,A/FAA,IgGGvC,A/FAA,G+FAwDF,A/FAAA,Q+FAQ,A/FAA,G+FAGnE,A/FAAA,O+FAO,A/FAA,C+FACoE,A/FAAA,S+FAD,A/FAA,C+FAV,A/FAA,G+FAwB,A/FAA,I+FA/F,A/FAA,KmLD0GiX,SAAS,CAACF,UAAtH;AxBEA,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,AEAA,ADDA,AJAA,AECA,ADAA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,ArEH0GnZ,AGG1G,AMCA,AFHA,ACGA,ANHA,AGC4C,APF+B,ACGzE,AKCF,AMAA,ATAC,AUADhP,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A7EH0GgP,AIG1G,AOCA,AFHA,ACGA,APHA,AIC4C,ATF+B,ACGzE,AOCF,AMAA,AXAC,AYADhP,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,AhHDC,ACCE,AzBAH,AqJCA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsLAE,AhJGF,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCA,ADAA,CnIJA,C8CA0GgP,A/FAAA,CkDCxG,CmIGEwb,ADAEhC,EhFF0CngB,APF+BpE,ACGzEqJ,AvFD0CjF,ATF+BpE,ACGzEqJ,AsLCA,C3EAC,A7FAA,AoCFA,CyDECsT,A7FAAA,AkKHA,C3EC2C,ADE1Cje,AMAAA,AlGF0C,ADE1CA,AMAAA,AsCDA,C6CHyG,A/FAA,AoLItG,CrFJuGV,A/FAAA,AiDExGnC,AoIEA,CxFJ0E,A/FAA,AiLCzEM,C3EC2CiK,APF+BnG,AMItF,AMAA,AlGFuDmG,ATF+BnG,AQItF,AMAA,AsCDa,AkICEukB,CjFADzW,AMAAA,AnGAAA,AMAAA,CyKAV,CjFFwC,A7FAA,CwKDpC,C3ECoD,A7FAA,A0CA1C,A8HDA,CrEGlB,A7FAA,AoCFmB1P,AoIEAkoB,CtFJuF,A/FAA,AkDGtFxa,C6CHyGd,A/FAAA,AqLIxG,ADAE,CjFAvB,AMAA,ACAsB1F,ApGAtB,AMAA,ACAsBA,AuKAEkf,CtFDD,A/FAA,CoGCC,AMAA,AnGAA,AMAA,CsCDX,C4CAa,A/FAA,AkDDnB,AoIEmB,EpIFE,AoIE5B,C3EA6B,A7FAA,C6FAC,A7FAA,AqCDA,AmICA,CvFDCnb,A/FAAA,CgGH2E,A/FAA,E6FA/B,A/FAA,CiGAgEyB,A/FAAA,AoLI5H,CvFJ8F,A/FAA,AsLIvE,ElID7B,EAA+B,G6CHkE,A/FAA,E8FGhF,A/FAA,CqLCX,CAAf,EtFDiD,A/FAA,K+FAKzB,A/FAAA,M2GCzB,A7FAA,C6FA7B,A7FAA,OiFDiD,A/FAA,C+FAoBC,A/FAAA,S+FAnE,A/FAA,gDgLFM,CAAN;AnBIF,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,ARCA,AUAA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,ArEJqJwB,AGIrJ,AMCA,AFHA,ACGA,ANHA,AGA8D/K,APFiD,ACI7G,AKCA,AMAA,ACAFjE,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AtHCA,AFAA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHA,AdDqJgP,AIIrJ,AOCA,AFHA,ACGA,APHA,AIA8D/K,ATFiD,ACI7G,AOCA,AMAA,ACAFjE,AlBDA,AsICA,AVAA,ASAA,ADAA,ADAA,ALAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A7GHA,AHEE,ADEA,AGJF,ADGI,AzBAJ,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsLAC,AhJGD,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AMAA,AnBDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCIurB,ADAJ,ErFLqJvc,A/FAAA,AqLKjJuc,EjFH0DtnB,AtFD1Dqd,APC0Drd,A6CD1D8P,ADAA7I,A3DKAjL,A4LDE0oB,EtFDAlb,AKCAuK,AMAAA,A1GDAvK,AOCAuK,AMAAA,AqCFAsL,ADEAF,C0DAC,A7FAA,CgFL4GzZ,AaK3G8E,A5GL2G9E,AeK3G8E,EkFLqJ,AKEzF,ApGFyF,AOEzF,A4CD1D,C4CDoJU,AKEzF7J,ApGFyF6J,AOEzF7J,A2CE1D4F,CiDCC,AMAA,A3FJA,ARIA,AMAA,AyKAE,ClIJD1B,AkIIEihB,ExFL2G,AMK3G,AMAA,A3FJAjhB,AhBD2G,AQK3G,AMAA,C8FAf,A7FAA,AmCAgB,CEDC,AkICE,CvFL0GvF,A/FAAA,AoDI3G4O,CwDCCrJ,A7FAAA,AuCJA,AHEA,ADEA,C+CLkI,AIKnJ,AMAA,AzGLmJ,AMKnJ,AMAA,AoCAA,AGJkB,A3DKpB,A4LDsBif,CjIJD,AkIIjB,CvKJkB,AsCAAjf,AHEA2T,ADEA,AEDX,AmICaqN,CtFLkJvb,ADInJ,AhFHA,AdDmJA,ADInJ,AmDAAe,C2CJ4G,A/FAA,AuLK/H,CjFH0D,APFsE9L,AtFEtE,ATFsEA,CsGEhDmG,ANE1D,AYCA,AnGH0DA,ARE1D,AcCA,C6FAC,A7FAA,CqCDhB,AkICmB,ChFHgC,A7FAA,A6CDjC,AgIIEqe,ChIJD,AHEA,ACCA3W,CkDF2D1J,ANE1DqF,AvFF0DrF,ARE1DqF,AkDDA5N,E8CHsH,AjFC/H,AdD+H,CoGEvF,AtFD9D,APC8D,A4CD1C,CAAP,CiDCiF,A7FAA,A4CD1DoL,EFEE,ACC3B,CDD4B5I,ACCnC,GCHJ,AiIIsB,CAAuB,EtFDnB,A/FAA,C8FJmG,A/FAA,AmDG9F,C4CH2HmH,A/FAAA,AmDG3G8Z,E6CCE,A/FAA,CqDHpB,CAA7B,CHE+B,C4CH8F,A/FAA,AmDGxE,C4CH0D,ACIzD7V,AhGJyD,ACIzDA,EkDDvB,EAA2B,CAA3B,AmIET,CAAtB,CnIF6DnE,KAA9B,CAAoC,C6CClB,AYCvB,A3GDuB,AcCvB,AoCFK,C6CCsCiE,AYCrE,A3GDqEA,AcCrE,AoCF8B,EAAyC,EAAzC,CAA5B,I6CCA,A/FAA;A6JEF,AHAA,ATDA,AUCA,ATAA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AoHAA,AGDA,AFAA,ACAA,ArELuL,AGKvL,AMCA,AFHA,ACGA,ANHA,AGDgG7I,APFmE,AMMjK,AMAA,ATAF,AUAA3E,AfDA,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ACAA,AFAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A7ELuL,AIKvL,AOCA,AFHA,ACGA,APHA,AIDgG2E,ATFmE,AQMjK,AMAA,AXAF,AYAA3E,AlBDA,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,AhHAE+T,ADCE,AEDD,AzBAH,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AFCA,AhLHA,AsCGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCC,ADAD,CCFA,CpICEA,CCFO,C1DIL7T,A4LDE0oB,EhFJ0FjkB,A7FAAA,CmGIzF,A7FAA,AwKAA,CxFNgK+E,AaM/JyX,A5GN+JzX,AeM/JyX,CsFAC,AMAA,ATAA7P,A1FAA,AMAA,AXAAA,AiDDA,CFCC,CoDJ2F,A7FAA,E6FAE3M,A7FAAA,A2CG1F6e,CFCCne,CoIAG,C1EAjB,A7FAA,CoCDiB,CmDH6E,A7FAA,A6KI1EojB,C1EADjf,A7FAAA,CoCDC8Z,CkDCC,AMAA,AnGAA,AMAA,CiFN8I,A/FAA,ANOnK,CwDDU,C6CN6K3Z,A/FAAA,AkDM/J,AEDA,C8CCxB,A/FAA,AiDDyB8Z,C8CCC7b,AUAA,AzGAAA,AYAA,AuKAE,C1EAD,A7FAA,AuKAE8gB,IvFNiK,AGM9L,AlGN8L,AGM9L,AiDDa,CAAmB1Y,C8CCChD,A/FAAA,AgDDA,C4CLgKrD,A/FAAA,GmDK5J,ACAxB,CDAO,ACAX,E8CCT,A/FAA,A+CAU,AED8B,AkICpB,CvFNoL,A/FAA,AmDK/J,ADCrC,AoIAuC,CvFN8JC,AGM/JwH,AlGN+JxH,AGM/JwH,M4FNuJ,A/FAA,AmDK7K,C4CL4L,A/FAA,EkGMhN,A/FAA,AgDDmD,E+CCED,A/FAAA,KmLAjC,CvFNsMtH,A/FAAA,AmDKxN,AmICF,EpFAA,A/FAA,C4FNgN,A/FAA,CkGMjJ,AUArC,AzGAqC,AYArC,CgFNqM,AaM/N,A5GN+N,AeM/N;A+ICA,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAA,AMCA,AFHA,ACGA,ANHA,AGF8GtE,APFmH,ACM/N,AKCE,AMAA,ATAF,ALDF,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHA,AVGA,AOCA,AFHA,ACGA,APHA,AIF8GA,ATFmH,ACM/N,AOCE,AMAA,AXAF,ANDF,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A7GJA,AHIC,ADCE,AGJH,ADGI,AzBAJ,AqJCA,ANDA,AEAA,AGAA,ADAA,ADAA,AlLFA,AsLDA,AhJIA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCIgmB,CpILG,CoIKHA,EjILArX,ADCA2P,A4HAAuD,E3ED0G7hB,ANIxG+H,AECAiE,AzFLwGhM,ARIxG+H,AECAiE,CgDDC,CkDCCyG,AMAAA,AnGAAA,AMAAA,AwCLA,C4CKC,AlFJAuJ,AbIA,EmDLE/X,AFIA0B,C8CCCgG,A/FAAA,AoLAE,CxFP0NjN,A/FAAA,AuLOzNqnB,ClFAX,AMAA,AnGAA,AMAA,AmKJU,E3ED0G,ADKxG,AMAA,AlGLwG,ADKxG,AMAA,CsCDC,A6HHA9hB,C3EDyG,A7FAA,A6CAxG,AFIAqJ,C2CN4N,A/FAA,AsDE3N,ADCA,C0CH4N/I,A/FAAA,EsGEjJ,A7FAA,A4CCxEN,ADGX,C4CAY,A/FAA,AmDAAwG,C6HHC,CAAC,EjFGEvC,A/FAAA,AqDJT,CAAlB,AFI4B,C8CCC,A/FAA,AkDJA,ADGAqJ,C8CCC9J,A/FAAA,AkDJA,AkII1B,GvKJJ,CAAmCwU,CoCGxB,CAAP,C8CCyB,AlFJ7B,AbI6B,C8KJL,C/EIerQ,AlFJCsQ,AbIDtQ,A8KJvC,KlFHwO,ACMtO,AhGNsO,ACMtO,C8FNsQ1H,A/EGxQ,AhBHwQA,CgGM1N,A/FAA,AoDHjB,C6CIA,AlFJmB,AbInB,AkDJ7B,E6CIiD2H,A/FAAA,E4FPuL,A/FAA,E+FAwCvH,A/FAAA,G+FAxC,A/FAA,E+FA6CtE,AGOxP,AlGPwPA,AGOxP,C+FA3B,A/FAA,S4FP+N,A/FAA;A8JQjO,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELA,AGKA,AMCA,AFHA,ACGA,ANHA,AGHgI+E,APFkK,ACO9R,AKCA0N,AMAAA,AdDJ,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHE,AdFF,AIKA,AOCA,AFHA,ACGA,APHA,AIHgI1N,ATFkK,ACO9R,AOCA0N,AMAAA,AjBDJ,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,AhHAEjE,ACAC,AzBAH,AjCEA,AsLDA,ANDA,AEAA,AGAA,ADAA,ADAA,AlLFA,AsCGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AmLCC,ADAD,EnIDEA,CCFO,C6CHL3E,AIMA4I,AMAAA,AzGNA5I,AMMA4I,AMAAA,CiFR6L,A/FAA,CsGEjE1N,APFuD,A/EIjL,APF0HA,ATFuD,CgBIhLY,CgFGCkC,A/FAAA,CgGLC,A/FAA,AkDKA,A1DEAjN,A4LDA0oB,CtFDL,AKCM,AMAA,A1GDN,AOCM,AMAA,EmFNE,ADKA,A9FLA,ADKA,CoGCC,AMAA,A3FJA,ARIA,AMAA,CmFNb,AjFEc9V,AdFd,GmGMI,AMAA,AnGAA,AMAA,AqCDa,CmDL2H,A7FAA,E6FAE,A7FAA,A0CK1H,AmICpB,CAAqBjH,CtKJd,CAAgB0V,CsFFuE,A7FAA,CfO9F,A4LDA,CtKJO,CAAD,AmCGJ,AmICyB,C5LCC,GsBLG,OAAOA,GAAP,KAAe,QAA5C,EAAsD;A8IKxD,AHAA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAA,AMCA,AFHA,ACGA,ANHA,AGJoJjX,APFiJnC,ACQ/RgF,AWCF4E,ATAF,ALDF,A5BAA,AzEDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHI,AVGJ,AOCA,AFHA,ACGA,APHA,AIJoJzH,ATFiJnC,ACQ/RgF,AaCF4E,AXAF,ANDF,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A7BCA,AwDAA,AgDAA,ADAA,ADAA,AGDA,ACAA,A7GLA,AHKC,ADCC,AGLF,ADII,AzBAJ,AjCEI,AgLFJ,AEAA,AGAA,ADAA,ADAA,AlLFA,AsLFA,AhJKA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCI,IvFTiS5J,AYSjS4J,A3GTiS5J,AcSjS4J,AwCNA8R,ADCA/P,A4HAAsT,E3EFgJ9c,ANM9I6C,AECAmE,AzFP8IhH,ARM9I6C,AECAmE,A+CAA,AoIAEuX,EvFTiS,ACQjS,AhGRiS,ACQjS,APEE,CqGVgShnB,ACQjS0E,AECA,AlGTiS1E,ACQjS0E,AECA,CaJC,AoCGA,AkICE,EtFDJ,AWCI,A1GDJ,AaCI,AwCNA,A5DOEpG,CqGVuR,ACQ/R,AWCO8B,ATAA,AlGTwR,ACQ/R,AaCOA,AXAA,A+CAAmhB,AoIAEoF,ChFP6I,APFmJvmB,A/EKjSmD,APH8I,ATFmJnD,AoDQjSmD,CELCmE,A2HCA,C3EF+I,A7FAA,CyFO5J,A/FAA,ATCQ,CiHDN,A7FAA,ApBCgB,AuLNFA,ClFJmR,AYSlR,ATAA,AlGTkR,AcSlR,AXAA,A+CAb,AGLa,C0CJkSpB,A/FAAA,CsLS9R,ChIND,ADCAoB,AiIKEuf,CtKJd,AsCFa,AFKb,C2CR2R,AYS7Q,A3FJAtH,AhBL6Q,AcS7Q,AoCAA,AEDAte,CuDCpB,A7FAA,AmKLqB,ClFJkSwG,A/FAAA,AiLIjS,CtEKC/H,A7FAAA,CsCDC,CCJC,CrCCC,AqCDA,CDIC,CFC7B,C6CTmS,A/EKpQ,AhBLoQ,CkDSnQ,CoIAnB,C3EAX,A7FAA,AwCNkB,AgIMgB,ChINtC,E2HCyB,CAAzB,CKKe,CAAX,QjILyB,CAA7B,A3DMU,CAAN,YsBLM,CAAN,wBoCGM,CAAN;AuGEJ,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELA,AGKA,AMCA,AFHA,ACGA,ANHA,AGL8F,APFwO,ACSjU,AKCD,AMAD,ATAC,ALDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHG,AdFH,AIKA,AOCA,AFHA,ACGA,APHA,AIL8F,ATFwO,ACSjU,AOCD,AMAD,AXAC,ANDJ,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,AgDAA,ADAA,ADAA,AGDA,ACAA,AjHCI,AEDD,AzBAH,AjCEC,AgLFD,AEAA,AGAA,ADAA,ADAA,AlLFA,AsCGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCIknB,EAAAA,C3EJF,A7FAA,EwFJ4D,ANK1D,AvFL0D,ARK1D,CqLGI,CAACE,CpFAD,A/FAA,C8FNC3Z,AIMA,AnGNAA,AMMA,C0FACmC,A/FAAA,A+CAA,C8CDC,A/FAA,EoGCEyG,A7FAAA,C0CAC5S,C8CDCmB,A/FAAA,EoGCE,A7FAA,CwFDN,AECO,AjGDP,AECO,C+FAC+K,A/FAAA,AmLAf,CtFDgB,AKCA3P,ApGDA,AOCAA,A8KAE,EpFAJ,A/FAA,C+FAR,A/FAA,A+CAA,C+CNV,A/FAA,AgDMwB,C+CNC0N,A/FAAA,EgGMEmC,A/FAAA,AmLAvB,ErFNJ,AIM6B,AnGN7B,AMM6B,A8KAE,CjFADtQ,A7FAAA,CyFNCsF,ACMA,AhGNAA,ACMA,C+FACiL,A/FAAA,IkGAvB,A7FAA,C0FAkB,A/FAA,C8FN3B,AIMsChQ,AHAA6P,AhGNtC,AMMsC7P,ALAA6P,E8FNEhC,A/FAAA,CgGMb,A/FAA,CkGAe,A7FAA,EyFN1C,A/FAA,CmGM6C,A7FAA,CyFNC,A/FAA,CgGMCgC,A/FAAA,EkGAE5P,A7FAAA,A0CAvC,CgDAF,A/FAA,A+CAJ,ImDAyC,A7FAA,C6FAUsW,AHAA1G,A1FAA0G,ALAA1G,G+FAG,A/FAA,CkGAb,A7FAA,C6FApC,A7FAA,C0FAoD,A/FAA,CkGAC2G,AHA1D,A1FA0DA,ALA1D,E+FA4D,A/FAA,EkGAE,A7FAA,A8KA9D,GjFAiE,A7FAA,C6FAjE,A7FAA,E6FAoEA,A7FAAA,I6FAI,A7FAA,G6FAGD,A7FAAA,I6FA3E,A7FAA,E6FAiFC,A7FAAA,I6FAI,A7FAA,E6FArF,A7FAA,E6FAyF,A7FAA;AmJC7F,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AKCA,ADDA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELE,AGKF,AMCA,AFHA,ACGA,ANHA,AGNwK,ANQlK,AKCAxW,AMAL,ATAK,ALDN,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,AwDCA,A1BAA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHC,AdFC,AIKF,AOCA,AFHA,ACGA,APHA,AINwK,ARQlK,AOCAA,AMAL,AXAK,ANDN,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLA,AHIA3B,ADEG,AGNH,ADKC,AzBAD,A+IAA,AEAA,AGAA,ADAA,ADAA,AlLFA,AsLHA,AhJMA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCI,ClIXJ,EkDE4C,A7FAA,C6CGxComB,ADAArC,A4HAA5Y,EhFAE,AIMAxJ,AnGNA,AMMAA,A2CFA,AmIEE4N,CrFNDC,A/FAAA,AiDIAvP,EmDPuK,A7FAA,CuFQpK,AKCA,AHAAmD,AjGDA,AOCA,ALAAA,A8KNA,AKME,CrFNV,ADKS,AKCA+U,AnGNT,ADKS,AOCAA,C8CNX,ADAY,C4CAC,A/FAA,A+KAAkP,AKME,CpFAD,A/FAA,AgDFd,CkDEU,A7FAA,A6CNK5d,AiIMX,CtFDYkE,AKCV,ApGDUA,AOCV,C0FAWyD,A/FAAA,AgDFA4C,EkDEEnS,A7FAAA,G6CNG,CAAC,A4HAA,CAACsJ,C/EMC,A/FAA,GkGAG,AHAAkG,A1FAA,ALAAA,CkGAC8G,A7FAAA,CwFDvB,A/FAA,AgLLN,EjFKgC,A/FAA,AkDDhC,CkDE4B,A7FAA,C6FAtB,A7FAA,E6CNgB,C6CMG,A/FAA,AkDNzB,G6CMwC,A/FAA,e+FAlC,A/FAA;AwJCN,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELI3I,AGKJ,AMCA,AFHA,ACGA,ANHA,AGPgLlF,APFuJ,ACW/TvK,AKCH,AHAC,ALDN,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A7ELIyP,AIKJ,AOCA,AFHA,ACGA,APHA,AIPgLlF,ATFuJ,ACW/TvK,AOCH,ALAC,ANDN,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLA,A3BKA,AjCCA,AgLDA,AEAA,AGAA,ADAA,AnLFA,AsLHA,AhJMA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCIwP,EAAAA,ErFNAC,AKJ4KlF,ApGI5KkF,AOJ4KlF,A6CI5K+b,A2HAAkB,EKMI,ChFV2K,A7FAA,CwFI3K,AKJ4Kjf,ANS5KvI,A9FLA,AOJ4KuI,ARS5KvI,C8FXsUsI,A/FAAA,ANYrU/H,C4DNC,AgIME,CrFNDD,AKJwK,ApGIxKA,AOJwK,C6FAH,AJUpK,AzFVoK,ANUpK,C4FZ2T,A/FAA,AsDM1TsS,EgDJ8K/N,ANS5K,AvFT4KA,ARS5K,CgGLX,ADKYlD,AECAwP,AhGNZ,ADKYxP,AECAwP,GmDNG,CgDJ6J,A7FAA,A6CI5JoV,A2HAA,GAAGe,CjFKf,A/FAA,C+FAiBzZ,A/FAAA,CqDLZ,E5DMb,E4DN8B+E,C5DME,EuLNC,CAAC6U,CKM9B,CtFDI,A/FAA,AqDL4B,C4CMxB,A/FAA,AmDNyBlB,C0CKC,AECAljB,AjGDA,AECAA,I6FD9B,AECI,AjGDJ,AECI,CmDNkB,C0CKcqD,AECA+K,AjGDA/K,AECA+K,AmDNA6U,A2HA5C,GjFKQ,AECI,AjGDJ,AECI,C+FAN,A/FAA,EmDNN;AqGOA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ALCA,ALAA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELG,AGKH,AMCA,AFHA,ACGA,ANHA,AGRmM,APFkJ,ACY9U,AWCP,ATAK,ALDL,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHA,AdFG,AIKH,AOCA,AFHA,ACGA,APHA,AIRmM,ATFkJ,ACY9U,AaCP,AXAK,ANDL,AsICA,AVAA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLA,AJME,AGNF,A1BKA,AjCCI,AgLDJ,AEAA,AGAA,ADAA,AnLFA,AsLHA,AhJMA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,AOCA,ANDA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCI9W,EAAAA,E3EAA2D,A7FAAA,AwCNAqT,ADAAvC,A4HAAsC,E/HMEhD,AoIAE,CtFHF,A/FAA,CPGI,CsBJD3B,AqCFA,C4HAC,AKME,EpIAA,AGNAxW,A3DME9K,CsGDD,A/FAA,AqDLA,A2HAAsS,E/HME,CINC,AJMV,C8CDW,AhFHjB,AfGiB,APCP,CsGDQ,AWCA,A3FJCiP,AfGD,AaCA,AuCNA,A3DME,C2DNDvV,A4HAA,C/HMCiX,A+HNAgD,CtEMC7c,A7FAAA,EkFDEkE,A/FAAA,CoDLX,CAAa,CHMC,A+HNb,CjKEb,C2FI4B,A7FAA,AuCNhB,CsDMiB,A3FJC,AFID,AoCAAwV,AGN7B,C4HA8BxQ,MAAM,CjFKlB,A/FAA,AgLLmB8U,CjFKC5Z,A/FAAA,AiDChC,IAAoCyV,G+HN1C,CtEM4B,A7FAA,C6FAP,A7FAA,C6FA2BjU,A7FAAA,AoCAA,E8CDnC,A/FAA,E+FAuC,A/FAA,C0GCpD,A7FAA,AoCAqDiU,AxDA3C,CAAN,A4LAoDvX,IAAI,CpIA1D,AoIA2Dmd,EpIAA,OoIAL,CAAeC,IAA3D,GAAkE,GAAlE,GAAwEpd,IAAI,CAACmd,SAAL,CAAeE,SAAvF,GAAmG,4BAAnG,GAAkIrd,IAAI,CAAC3J,KAAvI,GAA+I,UAAvJ;A3BCJ,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AVCA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAA,AMCA,AFHA,ACGA,ANHA,AHEQ,AKCJ6P,AMDJ,AdAA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DHE4N,AVGF,AOCA,AFHA,ACGA,APHA,AJEQ,AOCJ5N,AMDJ,AjBAA,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE4R,AJK6D,AGL/D,A1BKA,AjCCC,AgLDD,AEAA,AGAA,ADAA,AnLFA,AsLHA,AhJMA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCItU,EtKJFsQ,AsCFAgE,AgIMEtU,EjFAA0C,AMAA6O,AnGAA7O,AMAA6O,AuCNAmD,A4HAAyD,C3HAC,CgIMG,ChIND,EDAE,CiIMG,CtKJD,CqFIC,ArFJA9mB,ARIA,A6CNA,C2CKC+M,AKCAxL,ApGDAwL,AOCAxL,C8CPG,A2HCF,EjKEZ,CAAe,AiKFAuP,C5EMb,A7FAA,A8KAA,CjFAe,A7FAA,CmGAC,A7FAA,CEJlB,AiKFmB,CAAC0R,C5EMlB,AMAmBlQ,AnGAnB,AMAmBA,EuFAEvR,A7FAAA,AyKNR,CAAS,CjFKlB,A/FAA,AgLLS,CjFKWkM,A/FAAA,CoGCxB,A7FAA,AyKNyB,EAAZ,IAAkB,CAAnC,CtEMqC,A7FAA,C6FACiT,A7FAAA,EkFD9B,A/FAA,G+FAmC,A/FAA,I+FAnC,A/FAA,O0GAR,A7FAA;A6IEA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AVCA,ACDA,AEAA,ADAA,AIAA,AECA,ADAA,AHDA,AQAA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELE,AGKF,AMCA,AFHA,ACGA,ANHA,AGVoM,APApM,ACYQ/gB,AKCL,AMFH,ATEI,ALDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DFE,AdHA,AIKF,AOCA,AFHA,ACGA,APHA,AIVoM,ATApM,ACYQA,AOCL,AMFH,AXEI,ANDJ,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE,AJKE,AGLF4jB,A1BKF,A+IAA,AEAA,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCIpU,EjINFoU,AiIMEpU,CjFTF,A7FAA,CmGSEgE,A7FAAA,CuCNC,CiIMG,CtKHDsO,AqCHA,C2CKC9hB,A/FAAA,CqGZmMuK,APAlMN,AtFAkMM,ATAlMN,AqDMG,CHMF,AoICE,CrFNDyF,ACMAiC,AhGNAjC,ACMAiC,AmDNA,CgDPyL,A7FAA,COUlM,CkCEYpM,C8CAC,AECA,AjGDA,AECA,C6FDC5D,AECAiQ,AlFHAxG,AfEAzJ,AECAiQ,EmDRA,G2CEd,ACMS,AhGNT,ACMS,C8FNWjC,AFPtB,AGasB8B,AlFHA,AdHA9B,AFPtB,AGasB8B,C4FbC3N,A/EUAyI,AhBVAzI,AkDYb,C8CAF,AWCgB,A1GDhB,AaCgB,AoCDA,C8CAC+J,AECd,AjGDcA,AECd,C8FNT,ACME,AhGNF,ACME,CwGAuBsF,A7FAAA,CmFNCvD,A/FAAA,C6FP5B,A/FAA,E+FA+B,A/FAA,CiGO7B,A/FAA,E+FAgCC,AjFGlB,AdHkBA,CcGCgS,AsKG/B,CtFDI,A/FAA,EgGLN,ADKoC,A9FLpC,ADKoC,EgGLE,A/FAA,AgDK9B,CyDC+B,A7FAA,AoCDrC,C8CAI,AWCkCrO,A1GDlC,AaCkCA,EkFDE9M,AhFF5B,AfE4BA,CeF1C,EgFEM,A/FAA,e0GDR,A7FAA;A6IGA,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,AECA,ADAA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELI,AGKJ,AMCA,AFHA,ACGA,ANHA,AGXiN,APAhL,ACa1B,AKCN,AHAE,ALDH,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DFE,AdHE,AIKJ,AOCA,AFHA,ACGA,APHA,AIXiN,ATAhL,ACa1B,AOCN,ALAE,ANDH,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLEyd,AJKC,AGLDA,A1BKF,AjCAC,AgLAD,AEAA,AGAA,ADAA,AnLFA,AsLJA,AhJOA,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLCI0E,EhINF1E,ADAAA,AiIME0E,CpFV2D,A/FAA,C+FU3D,A/FAA,EmDNE,ADAA,C0CRgC,A/EW/B9G,AhBX+B,CiGQ9B,A/FAA,AoDAA,ADAA,C4HDC6F,C5HDG,C0CN8B7lB,A/FAAA,C+FAC,A/FAA,CNa9B,EuGLE4E,AFR+B,A7FQ/BA,AFR+B,AsDK9B,AgISC,CvFdgB,A/FAA,AsLcf2iB,CtKHhB,C+EX+CvnB,A/FAAA,C+FAC,A/FAA,CgBW9B8f,CiKJpB,ChFCQ,AFR6C/f,A7FQ7C,AFR6CA,AiLO9B4J,GKOnB,ErFNuB,A/FAA,C+KD3B,AKO8B,CtKH5B,CiKJ6BrK,ClFP+B,A/FAA,C+FACA,A/FAAA,GiGQ3D,A/FAA,C+KDJ,ChFCqC,A/FAA,C6FRJ,A/FAA,AiLOM,ElFPgCU,A/FAAA,C+FAC,A/FAA,E+FAvC,A/FAA,E+FA2C,A/FAA,YsLcjBiK,IAAI,CAAC3J,KAAlC,GAA0C,cAApE;A3BCJ,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELM,AGKN,AMCA,AFHA,ACGA,ANHA,AJZ8E,ACczE,AWCL,AdDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHAA,AiFDA,A/DFE,AdHI,AIKN,AOCA,AFHA,ACGA,APHA,ALZ8E,ACczE,AaCL,AjBDA,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLEgiB,AJKD,AGLCD,A1BKF,AjCAI,AgLAJ,AEAA,AGAA,ADAA,AnLFA,AsLJE,AhJOF,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,C8ChBA,CIWEC,ADAAD,I3DKM,AuLNF,CjKICpC,C+EZ2E9X,A/FAAA,AsDS1E,ADAA,CsDMCxH,A7FAAA,CwCNC,ADAA,EAHE,C4CGCiE,AUMb,AzGNaA,AYMb,AmKPa+E,ClFR2E,AYe1EhF,A3Gf0E,Ace1EA,GiFf6E5E,AYe3F,A3Gf2FA,Ace3F,E6FAmB,A3FHjB,AFGiB,AwCVH,A2HGV,ChFCA,A/FAA,EcGgB,CAApB,CiKJsB,ElFR4E,A/FAA,C+FACC,A/FAAA,C+FAD,A/FAA,C+FAT,A/FAA,GiLQrF,ClFRqG,A/FAA,GiLQvE2J,ClFRuD,A/FAA,G+FAuB5J,A/FAAA,EiLQxE,KAAK4J,ElFR4E,A/FAA,C+FAC3J,A/FAAA,C+FAD,A/FAA,C+FAhC,A/FAA,CiLQzF,ElFR+H,A/FAA,AiLQ1E,ElFRuB,A/FAA;A2JgB9E,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELK,AGKL,AMCA,AFHA,ACGA,ANHA,AGXA,ADcA,AMAE,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHCA,AiFFA,A/DFE,AdHG,AIKL,AOCA,AFHA,ACGA,APHA,AIXA,ADcA,AMAE,AjBDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE,ADAAsiB,A1BKF,AjCAQ,AgLAR,AEAA,AGAA,ADAA,AnLFA,AsLLyD,AhJQzD,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLAI,EjILFA,EiDRE1V,A7FAAA,CwFMA,A/FAA,CoLOI3C,CtKFDiW,CqCHC,A3DKI,C2GCHvf,A7FAAA,C6CNC,AiIKE,CrFLD,A/FAA,AoLKE6mB,ChFbD,A7FAA,A4CIA,CgDUZ,A7FAA,A8CNa,CtCGX,CsFXa7f,A7FAAA,AfaIlJ,C2GCH,A7FAA,C6FAE,ArFHD,ARGC,CQHA,CAAD,EAAI,CsFXC,AtFWL,APXK,A6CGN,AgIUR,ChFbe,A7FAA,COWC,CAAP,AtBEL,EsBFe,AsKEE,CtKFZ,CAAf,CtBEgC,C4LA9B,EAA+B,OhFbb,A7FAA,Afad,C4GbR,A7FAA,Cfa8C;AiKE9C,ATDA,ACCA,AFAA,AGAA,ASAA,ALAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELM,AGKN,AMCA,AFHA,ACGA,ANHA,AJdqI,ACgBjI,AWCF,ATAA,ALDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AhCDA,A/DDE,AdJI,AIKN,AOCA,AFHA,ACGA,APHA,ALdqI,ACgBjI,AaCF,AXAA,ANDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE8jB,ADAAA,A1BKF,AjCAYnkB,AkLAZ,AGAA,ADAA,AnLFA,AsLLI,AhJQJ,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLAQqP,EhILN8U,ADAAA,EiIKM9U,E3ECF9I,A7FAAA,ApBDMvG,CsBDL+hB,C+EfkIngB,A/FAAA,AsDWjI,ADAA,AiIKI,CvFhB8H,AYiBxI,ATAO+F,AlGjBiI,AciBxI,AXAOA,CmDNC,ADAA,A4HFA,CjFOC,AWCA,A1GDA,AaCA,CiFjBkI,A/FAA,AqDMjI,AiIUI,CrFLHnB,AFXwH,A7FWxHA,AFXwH,CkGiBvH,A/FAA,A8KRApB,ClFTkI,ACgB5I,AECWsM,AlGjBiI,ACgB5I,AECWA,EwGAEnL,A3FFf,AFEeA,EwCZD,C2CMI,AUMT,A3FFS,AdJA,AYMT,CmFNUiJ,A/FAAA,CRKO,A4LAF3D,CLPhB,CAAc,ChFEJ,ACMX,AlFFP,AdJkB,ACMX,ATDsBxL,C4LAD,CrFLHoP,A/FAAA,AoLKI2Z,CpFCH,A/FAA,E+FAnB,A/FAA,C8FNW,A/FAA,E+FAa1Z,ACMA,AhGNAA,ACMA,ETDrB,EuGLQ,A/FAA,C+FAd,ACMgC,AhGNhC,ACMgC,AmLDtB,GAA6B,CpFC3C,A/FAA,O8KRQ,AKOF,CLPJ;AtBSJ,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELK,AGKL,AMCA,AFHA,ACGA,ANHA,AGXA,APJkJ3L,ACiB/I,AKCH,AMAC,ATAA,ALDD,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHCA,AiFFA,A/DDC,AdJI,AIKL,AOCA,AFHA,ACGA,APHA,AIXA,ATJkJA,ACiB/I,AOCH,AMAC,AXAA,ANDD,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE,ADAAqgB,A1BKF,AjCAS,AkLAT,AGAA,ADAA,AnLFA,AsLLG,AhJQH,AGAA,AFHA,ACGA,AHHA,AFEA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLAK,EjILHA,C2CdwB,A/FAA,CqGMtBpL,ANaA,AlGEAxV,AWfAwV,ARaA,CHEC,AJJG,CqGf0IjV,A/FAAA,EFmB1I,AuDPA,CgDMCmU,A7FAAA,C6CNC,C3DKK,C2DXH,C0CN6I,A/FAA,AsDY5I,CyCZ6IlU,A/FAAA,CFmB3IP,CwGfC,A7FAA,E4FchB,A7FAA,C8FdmBuR,ADcAtG,A5FdAsG,ADcAtG,CuFlB6I,A/FAA,C+FAC3E,A/FAAA,CFmBzJ,AwDdQ,GgDDS,ADczB,A5FdyB,ADczB,C8Fd0B,A7FAA,CsFJsI,AMkBrI,AvGCA,AEnBqI,AQkBrI,CuFlB8H,A/FAA,E+FAiB,A/FAA,I+FAjB,A/FAA,C+FAP,AjGmB1I,AEnB0I,C+FA8BC,A/FAAA,EFmB1IvG,CwGfb,A7FAA,C6FAzB,A7FAA,GsFJkJ,A/FAA,C+FAsC,A/FAA,CFmBhL,GAAwC,IAAhD,EiGnBkM2E,A/FAAA,G+FAV,A/FAA,E+FAe,A/FAA;A2JmBvM,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ACCA,APDA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELG,AGKH,AMCA,AFHA,ACGA,ANHA,AGXA,APLyM6B,ACkBvM,AKCA,ARDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHCA,AiFFA,A7ELG,AIKH,AOCA,AFHA,ACGA,APHA,AIXA,ATLyMA,ACkBvM,AOCA,AXDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLE,ADAAoa,A1BKF,AjCAYrkB,AkLAZ,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,AHFA,AFCA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,EiDLEqkB,EiDREpL,AxGeAvV,AWfAuV,EfaQjZ,EqGlB6LiK,A/FAAA,AqDajM,CgDMCyE,A7FAAA,C6CNC,EAPE,CCOC,EgDRE,ADcA,A5FdA,ADcA,C6FACyJ,AvGCA,AUDAA,E8FdEnD,A7FAAA,CXeCxR,CAAC,EwDfJ,A5DaY,CqGlB4L,A/FAA,CsGKhM,APLiMG,AjGoBjM,AWfA,ATLiMA,CsGKhM,ADchB,A5FdgB,ADchB,AdDsBzD,I2GCF,A7FAA,CuFnB2L,A/FAA,CFoBzLsD,CiGpBkM4E,AjGoBjM,AEpBiMA,CFoBhMnG,EiGpBuL,A/FAA,CqGmBpLyM,A7FAAA,C8FdZ,APL8M3E,AtFK9M,ATL8MA,CsGKtO,AxGewB,AWfxB,GfaY,C2GC8B,A7FAA,CuFnBkM,AMmBjMqO,AvGCA,AEpBiM,AQmBjMA,CuFnBkMhQ,A/FAAA,G+FAD,A/FAA,C+FApB,AMmB3L,ArGnB2L,AQmB3L,CuFnB4K,A/FAA,IqGmBpJ,AvGClC,AUDkC,GVEjD5E,CAAC,CAACvB,KuGFJ,AvGCiB,AUDjB,GVGE,SAASyB,YAAT,CAAsBC,MAAtB,EAA8BC,QAA9B,EAAwCnC,IAAxC,EAA8C;A6JFlD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,AoBCA,A2BDA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAA,AKCA,ANHA,AGXA,APNqP,AMoBpP,AMAD,ATAA3B,ALDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGI,AiFJJ,A/DDAuhB,AVCA,AMCA,APHA,AIXA,ATNqP,AQoBpP,AMAD,AXAAvhB,ANDA,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLEskB,ADAAE,A1BKF,AjCAS,AkLAT,AGAA,ADAA,AnLFA,AsLLE,AhJQF,AGAA,AFHA,ACGA,AHFA,AFCA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLDI,EhIJFF,ADAAE,EiDREpL,A7FAAA,EyFcE,A/FAA,A8KRA3N,AKMEM,CvFlB0I,AGoB3I9L,AlGpB2I,AGoB3IA,CaFC,AsCJA,CqDMCmY,A7GGErU,AkBLF4d,AFEAvJ,CwFdC,A7FAA,A6CQA,AgIIE,CjIJD,AiIIEkR,CLND,C3ENCpU,A7FAAA,A4CQA,C6CMb,A/FAA,C8KRewS,E/EQE,ApGGE,AkBLX,AbES,CwGAjB,A7GGoBxlB,AgBHpB,CwFdmB,AKcA0M,A3FFAiR,APZA,AKcAjR,CwFdC,A7FAA,E6KYZ,G3EER,A7FAA,AmKRM,E3ENa,AKcQ,A7GGhB,AWjBQ,AKcQ,AwKFE,ChFZ7B,AxGiB8BzM,AkBLtB,APZR,COYA,AiKN6BsJ,AKMzB,EAA6B,ExLKtB,CAAyB7K,CmLXD,GnLWxB,AmLX2B,CnLWGiD,AmLXvC,EAAuC,InLW9B,EAAsCC,QAAtC,EAAgDnC,IAAhD,CAAP;A6JFJ,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArELE,AGKF,AMCA3B,AFHAA,ACGA,ANHA,AGXA,APPyP,AYqBvP,ATAAuR,ALDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGG,AiFJH,A7ELE,AIKF,AOCAvR,AFHAA,ACGA,APHA,AIXA,ATPyP,AcqBvP,AXAAuR,ANDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GfgB,ADCJ,A1BcZ,AjCAK,AkLAL,AGAA,ADAA,AnLFA,AsLLI,AhJQJ,AGAA,AFHA,ACGA,AHFA,AFCA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLDQhC,CxLCR,AwDfA,ADCA,C6CeEgC,A/FAAA,CTPE,C4GPA8H,A7FAAA,AfaE,A4LDE9J,CvFnB6H,A/FAA,CiGe/HM,ASMA,AFHA,AtGHAA,AWMA,AFHA,C+FGC5P,AFHAA,A3FGAA,AFHAA,C2KCK,C3EEH2O,A7FAAA,CwFdC,A7FAA,AwKMA,ClFbqP,A/FAA,ANoBlPpO,CAAP,A4LDU,ChFZH0U,A7FAAA,CiGcb,AFHA,A3FGA,AFHA,AjBEgB,AuLPF5P,ChFEC,AFfoPpB,AYqBpP,AzGNA,AFfoPA,AcqBpP,C6FACmU,A7FAAA,C4FACwI,AFHAnJ,A3FGAmJ,AFHAnJ,CsFFf,ACKgB,AhGLhB,ACKgB,CmGdC,A7FAA,C6FAC,AJcAnG,AzFdA,ANcAA,C4FrBqP,A/FAA,C+FACnH,A/FAAA,CiLahQ,CAAc,CzEKxB,AGGS,AhGHT,AGGS,EwFdU,A7FAA,CiGcnB,AJdA,AzFcA,AJdA,CkGc6B,A7FAA,AwKFI2B,ErFF/B,A/FAA,EoLEmC,CAACwd,E3EEF3a,A7FAAA,EwKFpB,GrFFJkB,A/FAAA,AoLEiC,C3EEH,A7FAA,C6FACwI,A7FAAA,GmFJzC,A/FAA,C6FjB6P,A/FAA,CiGiB5O,AUIU,AzGJV,AYIU,CiFrBwQ,A/FAA,AiLa3R,CAAN,CKMI,E3EE6C,A7FAA,U6FAnD,A7FAA;A6ICF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,ADAA,AIAA,ACCA,AKDA,AMCA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHItJ,AGGJ,AIFA,ACGA,ANHA,AGXA,APRuS9K,ACqBrS,AKCF,AMAC,ATFgB,ALCjB,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIA,AiFLA,A/DDAyd,AdFI3S,AIGJ,AKFA,ACGA,APHA,AIXA,ATRuS9K,ACqBrS,AOCF,AMAC,AXFgB,ANCjB,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GLA,A3BKA,AjCAQhE,AkLAR,AGAA,ADAA,AnLFA,AsLLG,AhJQH,AGAA,AFHA,ACGA,AHDA,AFAA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLDK,CpFAL,A/FAA,G8FFI8O,AKVAsK,AxGkBAtV,AIRAgL,AOVAsK,A6CQAkN,A5DKItmB,EqGrB+RgE,ACqBjS,AhGrBiSA,ACqBjS,EeDE,CqFECqU,ArFFArW,AREAqW,C8CNC,C0CKC/K,A/FAAA,C8FrBkS,AMsB7S,ArGtB6S,AQsB7S,CuFtB8SnD,AMsBjSuE,ArGtBiSvE,AQsBjSuE,A8CNA,EAAb,CgDRgB,A7FAA,EwFUE,AnGQlB,AkBNA,AdFkB,C+FACiB,AKVAqF,ADcnB,ArFFmBuL,AdFA5Q,AOVAqF,ADcnB,CdDwB,C2GCHsD,A7FAAA,EdDMpY,E4GbF,ANavB,AKCF,A5FdyB,ARavB,AOCF,C8Fd0B,A7FAA,CuFaC,AKCA6R,ApGDA,AOCAA,CyFJT,A/FAA,C6FlBqR,A/EoBvS,AhBpBuS,CiGkBzQnC,AFlBiSjM,A7FkBjSiM,AFlBiSjM,EgBoB/R,GiFFd,AIIlB,AnGJkB,AMIlB,CyFJI,AFlBmS,A7FkBnS,AFlBmS,CqGsBlQ,A7FAA,CuFtBkSK,A/FAAA,CsGQ9S,A7FAA,AfajB,C4GbR,A7FAA,EOY0C6N,E+EpBmS,A/FAA,C+FAC3H,A/FAAA,EgBoB9S,EAAiB4H,QAAjB,EAA2BC,QAA3B,EAAqC,C+EpBkQ,A/FAA,C+FAiChI,A/FAAA,M+FAjC,A/FAA,C+FAhC,A/FAA;A2JuBvS,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AKDA,AMCA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,A5DCA,ADAA,AHdA,APTmX,ACsB/W,AKCF,ARDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AhCDA,A/DDE,AHEF,ADAA,AHdA,ATTmX,ACsB/W,AOCF,AXDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,AMAA,AqBDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A9GLA,A1BKA,AjCAK,AkLAL,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,AHAA,AFDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,IsGCI4V,AJdAtG,AzFcAsG,AJdAtG,CsFT2P,A/FAA,CqGuBzP,ArFFAhT,AREA,GwFDGiH,A/FAAA,AoDLAiX,E0CjBgX,A/EqB9W,AhBrB8W,E0GuB5W,ALAAjM,AxFAA,ALAAA,A6CNb,CrCIc,AqCJCkM,EqDMCjb,A7FAAA,CwFAV,A7FAA,A6CNN,CiDRkB,AtFYhB,APZgB,C4CQEnB,EiDRC4M,A7FAAA,C4FcC,A7FAA,A6CNtB,CqDMuB,AVDnB,AnFCmB,AZDnB,CyGCoB,AVDAzH,AnFCA,AZDAA,AoDLCkX,GiDRE,A7FAA,C6FAC,A7FAA,G4CQ5B,CgDME,A7FAA,CwFDE,A/FAA,AoDL8B,CgDMA,A7FAA,EwFDE,A/FAA,I+FAhC,A/FAA,CoGCqCpM,A7FAAA,E8Fdd,A7FAA,C6FA3B,ADc4C,A5Fd5C,ADc4C,CkGArB,ALAsB3J,AxFAtB,ALAsBA,CkGA7C,A7FAA,KwFA4C,A7FAA,E6FAS,A7FAA,I6FAT,A7FAA,E6FAe4J,A7FAAA,I6FAf,A7FAA,C6FAV,A7FAA;AmJClC,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AKDA,AMCA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGGJ,AIFA,ACGA,ANHAxY,AGXA,APV2XiE,ACuBxX,AKCD,AMAF,AdDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGA,AiFJA,A7EHI,AIGJ,AKFA,ACGA,APHAjE,AIXA,ATV2XiE,ACuBxX,AOCD,AMAF,AjBDA,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GNA,ADCE,A1BKF,AiJAA,AGAA,ADAA,AnLFA,AsLLE,AhJQF,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLFIsL,EAAAA,CtFvBsB,A/FAA,CmGyBtBkI,AIFApF,AFXAmH,ANaA,AlGIA9V,AQJA+T,AKFApF,AFXAmH,ARaA,CHIC,CqGNC,AJrBqXvV,AMwBrX,AhGHA,ALrBqXA,AQwBrX,A6CNA2gB,A4HFAnZ,AKKE,CnFADxL,AEGAuY,AhGHAvY,AGGAuY,EmGAEuI,A7GGA,AgBHAA,AwCPA0F,CkDIT,A7FAA,A0CHU,AiIGE,ChFXD,ADcT,A5FdS,ADcT,CyKRU,ChFIC5W,AFpBqX,AMwBrX2I,AnGJA3I,AFpBqX,AQwBrX2I,A6CNAqM,C+CKC,ADFd,AGXc3P,APVqXhR,AzFuBrX,ADFd,AIXcgR,ATVqXhR,CiLgBpXqjB,CnLWC7jB,CsGJCQ,ADFA2N,AEGA,AvGGA,AQJA3N,ADFA2N,AGGA,CmGAjB,A7GGkB5N,AgBHlB,C6FAmB2K,A7FAAA,CwFdC,APVqX,AMwBrX,A5FdA,ATVqX,AQwBrX,A8CPpB,CgDPqB,APVqX3E,AtFUrX,ATVqXA,AsDiBpXyc,C2CGlB,AIIS,AnGJT,AMIS,A6CNS,C4CEChX,AGGA,AlGHAA,AIGA,A+CLAgV,C+CKCrc,A9FAAA,C6FFxB,AQGA,A7GGS,AONT,ASGA,AwCPA,CDCsB,C4CElB,AFpBqY,AYwB9W+F,AzGJvB,AFpBqY,AcwB9WA,AwCPC,ADC1B,C+CKe,ALvBiX,AzFuBjX,ANvBiX,CiGoBrWuB,AKVT,APVuW,A7FoB9VA,AOVT,ATVuW,CsGU3X,APVmZzF,AjG2BrX,AWjB9B,ATVmZA,CiLgB7Y,C7EO0B,A9FAA,C2FH5B,A/FAA,CyGIJ,A7FAA,CmFJmC0F,A/FAAA,A+KJAnE,CtEQCwI,A7FAAA,CiFxBuV,A/FAA,C+FAgC,A/FAA,CiGoBvZ,A/FAA,CJOJ,CmGPyC,A/FAA,A+KJA,AKKElI,ClFEDzB,AtGIA,AQJAA,CqGC1C,A7FAA,CmKR4ClJ,C7EOZ,AOCa6Q,ArGDb,AQCaA,AwKHE,CAACuX,ClFED,A9FAA,CyFvBsXlhB,A/FAAA,EiLgBna,ClFhByZ,A/FAA,AsLqBhX,CLLS,AKKE,CvFrBoX,AYwB1a,A3GxB0a,AcwB1a,AwKH2C,E3EGY,A7FAA,AwKHEmhB,IAA7C,GAAoD,MAA5D;A3BIJ,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHM,AGGJ,AMCFhgB,AFHA,ACGA,ANHA,AJtB4avF,AMyB1a+N,AMAAA,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGEjO,AiFJF,A/DFE,AdDI,AIGJ,AOCFyF,AFHA,ACGA,APHA,ALtB4avF,AQyB1a+N,AMAAA,AjBDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GNE,ADCA,A1BKF,AjCDI,AkLCJ,AGAA,ADAA,AnLFA,AsLLI,AhJQJ,AGAA,AFHA,ACGA,AHAA,AFDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLFI1C,EjFGF0C,AMAAA,A7GGAjO,AUHAiO,AMAAA,AwKHE1C,EtJGAoT,EoEDEta,ApFFA,AVEAA,AgDNAsK,ADCAmS,A3DIE,A4LDA,C5EGD,A7FAA,AmBAA,C0EAC,AXzBoa5gB,AlFyBpa,AbzBoaA,EoGwBla,ACCA,AMAA,ArGDA,AECA,AMAA,AmKRA,AjJQAuF,AsJHE,EhIJA,C2CGCqG,AGGA,ACCAlN,AMAAA,AzGJAkN,AIGA,AECAlN,AMAAA,AwCPA7C,CyClBqa,A/FAA,AiLiBpa6F,C7EOZ,ALxBibL,AzFwBjb,ANxBibA,AqDmBpa,CvDSC,CuGHC,AMAA,AnGAA,AMAA,AkBAA,CiEJC,ASIX,ALAW0M,AMAAA,AzGJA,AWIX,ALAWA,AMAAA,AuCNCyS,ArBMD,CiEJC9jB,ASInB,A5GGmB8C,AIPA9C,AWInB,C6FAoBigB,A5GGA,AeHAA,AyCPd,CxDUe5c,AuDTC,E4CET,A/FAA,C+FAW,A/FAA,AoDHA,A2HDd,C3HCe0O,A2HDA,C5EQC,AMAT,AnGAS,AMAT,AuCNU,CsDMzB,A7FAA,CmFJW,AnGOX,AIPW,AoLCT,CvFtBwa,A/FAA,CiGqB9YlD,AFrBoa5L,AMyBpapB,AnGJAgN,AFrBoa5L,AQyBpapB,CkGA9B,A7FAA,AyCP+B,CAAC1C,CoDOC8f,A7FAAA,CwFAhB,A7FAA,A6CNE,CgDMjB,A7FAA,CuFzB0a,A/FAA,E+FA8BvX,A/FAAA,AqDmBnaoc,CCDd,C2CGe,A/FAA,AoDHAiC,AtBOvB,CiEJwBjX,AFrBmY,A7FqBnYA,AFrBmY,AqDmBlY,ArBM1C,C0EAA,A7FAA,CkFzB+cxL,A/FAAA,EiGqBva,A/FAA,CmDFO,A4HFrC,ChFIqCyL,A/FAAA,AoDH7C,A2HDE,ElFjBid,A/FAA,AsDkBpa,CyClBqa5F,A/FAAA,CiGqB9a,A/FAA,E+FAa6F,A/FAAA,CmDFnC,G4CEsB,A/FAA,AmDFmB,C4CE9C,A/FAA,EmDFK,G4CE6C,A/FAA,AmDFE,EAA/D,E4CEI,A/FAA,O6FrByc,A/FAA,C+FAgC3F,A/FAAA,M+FAhC,A/FAA,E+FAwC3B,A/FAAA,G+FAxC,A/FAA,C+FAnC,A/FAA;A2J0B5a,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHK,AQIL,AHdA,APZ+f,AM0B7f,AMAA,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,A5HCA,AGDA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGC,AiFJD,A/DFI,AdDC,AUIL,AHdA,ATZ+f,AQ0B7f,AMAA,AjBDF,A4HCA,ASAA,ADAA,ANAA,AEAA,ADAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GNI,A3BMJ,AjCDQ,AkLCR,AGAA,ADAA,AnLFA,AsLLG,AhJQH,AGAA,AFHA,ACGA,AHAA,AFDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLFIiH,CxLIJ,CwLJIA,IjFGEsI,AMAAmJ,AnGAAnJ,AMAAmJ,AwKHE,CvFvBmX,AjG6BpX,AE7BoX,CNwB/W,C4GZHvH,AtFWAyI,APXAzI,C6KWG,CxLMDvV,AwDVAiF,CqDOC,A7FAA,EuFAE,A7FAA,CmGAC,A3FHX,AFGW,ApBFI1I,CsBDHsR,AsKAZ,CjFGayG,AvGGA,AUHAA,CVGCrU,AwDVA,CAACiF,CqDOjB,A7FAA,CuFAmB,ArFHjB,ARGiB,C6FACyO,A7FAAA,CQHC7F,EsFXvB,A7FAA,C6FA0BpN,A7FAAA,A6COf,CAAgB,A5DKf,G2GEK,A7FAA,C8FdjB,AtFWI,APXJ,C6COW,A5DKyB,C4GZH8U,A7FAAA,A6CO7B,C+CO8BlB,A7FAAA,G8FdlC,A7FAA,C4FcsC,A7FAA,C8FdC,ADcAX,AvGGhC,AWjBgC,ADcAA,EVGE,CJLjC,EAAwC,G2GEd,A7FAA,K6FAkB,A7FAA,K6FAlB,A7FAA,I6FA2BjJ,A7FAAA,M6FAM,A7FAA,C6FACiJ,A7FAAA,Q6FAlE,A7FAA;AmJCF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AGAA,ACCA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAE,AMCF,AFHAH,ACGA,ANHA,AGXE,APbigB,AC0BjgB,AKCA,AMAA9I,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGE5K,AiFJF,A/DFG,AVED,AOCF,AFHA0T,ACGA,APHA,AIXE,ATbigB,AC0BjgB,AOCA,AMAA9I,AjBDF,A4HCA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A7GNG,ADCD,A1BKF,AjCDYzO,AkLCZ,AGAA,ADAA,AnLFA,AsLLC,AhJQD,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLFI4L,E3EGF6C,A7GGA5K,AgBHA4K,AwKHE7C,CtKFF,CAEE,EgFEE,AKCAvB,ApGDA,AOCAA,A6CNAlC,A3DIMnI,A4LDJ,ClFED,A9FAA,AgLFEupB,C9EAD,AGGA,AhGHA,AGGA,C4FAC7I,AFHAjG,ALAA9I,AGXA,AKcApP,A9FAAme,AFHAjG,ANAA9I,AIXA,AKcApP,AuCNA,CAACtB,C+CKCkH,AJAAqF,AWCT,A3FHSlH,AVEA6B,ALAAqF,AaCT,C6FAU,A7FAA,CwKHR,ClFEF,ACCY,ArFHV,AVEF,AECY,A8KHEzD,ExLMA,AkBNA,AqCHV,C8CGN,AEGiBsO,AhGHjB,AGGiBA,C4FDClO,ADFAyH,A7FEAzH,ADFAyH,CsGGhB,A7GGiB,AgBHjB,AuCNiB+S,CqDMnB,A7FAA,CuFDE,AMCmB7X,ALAA,AMAA,ArGDnB,AOCmBA,ALAA,AMAA,AwKHjB,C9EAJ,AHGsBzC,A1FHtB,AHGsBA,A8KHE,ClFED,ADFvB,A7FEuB,ADFvB,CXC8B,C8GDLoQ,ALAA5I,AHEvB,ArFFuB4I,ANAA5I,AJEvB,E+FAyB,A/FAA,APDMvR,CgHEjC,A5GG4BuD,AeH5B,AwCNE,EqDM4B,ALAb,AxFAa,ALAb,A6CNa,EiIGN2lB,CnFAxB,AQGiC,AtGHjC,ASGiC,CuFACnR,A7FAAA,C2FHCnL,A9FAAA,E8FAnC,A9FAA,AiLA6B,C9EA7B,AHGsC,A1FHtC,AHGsC,C2FHC,AEGA7C,AhGHA,AGGAA,AdF3B,A4LDqB,GxLMd,CAAwB3G,IuGHT,A7FAA,EVGf,EAAgC,CuGHC,A7FAA,K6FAlB,A7FAA,I6FA2B+K,A7FAAA,M6FAM,A7FAA,C6FACpE,A7FAAA,Q6FAlE,A7FAA;AmJCF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGGAnC,AMCF,AFHF,ACGA,ANHE,AGXEzD,APdigB,AC2BjgB,AWCAoc,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGI,AiFJJ,A/DFIza,AdDA,AIGA8B,AOCF,AFHF,ACGA,APHE,AIXEzD,ATdigB,AC2BjgB,AaCAoc,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AGDA,ACAA,A9GLI1Y,A1BKJ,AjCDS,AkLCT,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLFQ,IlFEJD,AEbAzD,AKcAoc,A3FHAza,AVEA8B,AGbAzD,AKcAoc,AuCNA1Y,C3DEI,CgHIF,A7FAA,CsFHCyJ,A9FAAA,AgDHA,C+CKC,AMCA,ApGDA,AOCA,AyKHI6X,ClFEH7nB,AEbA,ANaA4L,AhFFA,AVEA5L,AGbA,ARaA4L,C0GCC,A7FAA,AuCNAiX,C4CEC/U,AKVAjL,AxGiBAV,AIPA2L,AOVAjL,AfYI,CyGDb,AnFAU6B,AXAV,C+FEE,AOCS,ArGDT,AQCS,CsFDC6B,A9FAAA,A+CLA,C8CGCyJ,AnFAX,AXAWA,AgDHAzJ,CiDTN,A7FAA,C2FcL,AOCA,A7GGa,AQJb,AQCA,AwKHiB,CxLMHlE,AuDTJ,CAAV,C4CEA,AECF,AjGDE,AGCF,AiLAsB,EAAhB,CtFEJ,A/FAA,CyGCoByc,AVDApT,AnFCAoT,AZDApT,S+FApB,A/FAA,EyGCE,A7FAA,C6FAJ,AVDkC,AnFClC,AZDkC,CHIzB,C4GH2B,A5GGA5J,AeHA,EmFDlC,A/FAA,IHIO,C4GHkC,A7FAA,CfItCxC,G4GJ0Cwf,A7FAAA,GfGtC,CACG3c,MAAM,C4GJyB,A5GIxBC,AeJwB,C6FAgB8I,A7FAAA,O6FAhB,A7FAA,C6FAP,A7FAA,YfIxB,CAA6BpJ,MAA7B,CADH,CAAP;A6JFJ,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGA,AMCDgc,ADAF,ANHE,AGXEnG,ANaD,AKCD,AMAC,AdDH,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,ACAA,ALDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIG,AiFLH,A/DFG,AdDA,AIGA,AOCDmG,ADAF,APHE,AIXEnG,ARaD,AOCD,AMAC,AjBDH,A4HCA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GPE,ADEC,A1BKH,AjCDYvZ,AkLCZ,AGAA,ADAA,AnLFA,AsLLA,AhJQA,AGAA,AFHA,ACGA,AHDAH,AFAA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,EsGCE6f,A7FAAA,CoFZA,AUUA,A7GGA,AIbA,AYUA,AuCNA,C4CIErQ,AKVAkK,ApGUAlK,AOVAkK,E4FcEjB,A7FAAA,A8CRA,A5DMMtY,AsCCN,CmEFC6R,A9FAAA,AiDLAqU,AtBOApmB,CiEXL,AKFM,ApGEN,AOFM,CwFAN,A/FAA,AmDQO,A4HFA2nB,C3ENClO,A7FAAA,CiGcC,A7FAA,C6FAC9Y,A7FAAA,CyCRN,ADEO0H,CrBKb,CmEFE,A9FAA,CqGGA,A7FAA,AwCNc,CqDMC,A7FAA,AyCRA,ADEAlH,ArBKAyQ,CmEFCG,A9FAAA,AiDLAqU,C2HAlB,C5EQoB,A7FAA,AyKRClB,CvEQnB,A7FAA,E6FAqBlY,ALAA,AxFAAA,ALAA,A6CNV,CCFW,A5DMM,AuLN9B,C3HAyB2Z,AtBOzB,CmEFE,A9FAA,AgDHwB9B,A4HFCrZ,CvLMMnL,GgHE/B,A7FAA,EwFA8BmY,A7FAAA,AyKRhC,E3HAM,A2HA6BrX,C5HE1B,EAA4B,CCFC,CAACilB,C2HAvC,EAA2C,G3HAE,C+CQtB,A7FAA,A8CRuBQ,A5DMlC,G2GEqC,A7FAA,O8CR/C,EAAwD;AqGS1D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,ATAA,AEAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,A5DCC,AFHD,ACGA,ANHE,AGdO,APb6f,AM8BlgB,AMAF,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIC,AiFLD,AlECC,AFHD,ACGA,APHE,AIdO,ATb6f,AQ8BlgB,AMAF,AjBDF,A4HCA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GPI,ADEAve,A1BKJ,AjCDS,AkLCT,AGAA,ADAA,AnLFA,AsLLE,AhJQF,AGAA,AFHA,ACGA,AHAA,AFDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLHQ,CxLGD,EwGhBL,A7FAA,C+FcEuS,A7FAAA,A0CHAvS,EmDGE,AGGAiQ,AhGHA,AGGAA,AmKRA,C9EKCtG,ArGOA,AOPAA,AgDHA,CgDMC,A7FAA,A8KJI0X,C9ECHlgB,AT3BogB5F,AM8BpgB+K,AMAA,AhGHAnF,AX3BogB5F,AQ8BpgB+K,AMAA,CuCNCzD,CCFChC,E2HAEgc,AKII,C3EIHngB,A7FAAA,AwKJIoB,CnFChB,AJ3BogB,AM8Bvf,AhGHb,AL3BogB,AQ8Bvf,CgGHC,AHGAoE,A1FHA,AHGAA,A6CNA,CmDGC,A7FAA,A0CHAnJ,A4HFX,C9EKYgM,A9FAAA,AiDLA,AgIIN,ChIJOjE,C6CKjB,A9FAA,E4KLoB,CtEQpB,A7FAA,AuCNQ,AiIEiB,CjFIvB,A7FAA,A6CNoB,CmDGR,AGGSmP,AhGHT,AGGSA,AuCNAjQ,CmDGhB,AHGiBoQ,A1FHjB,AHGiBA,A8CRf,CkDKgB7T,A7FAAA,A2CLA,CqDQC,A7FAA,AuCNJ,EAAMmf,A4HFxB,CtEQyBva,A7FAAA,CwCRpB,CAAP,C+CQ8B,A7FAA,AyKRA0b,C5HEV,AiIEhB,CjIFE,CiIE+B,C3EIH,A7FAA,AuCNAL,A4HFA,CzEKtC,AGGuC,AhGHvC,AGGuC,ImKRIK,I5HEjC,A4HFR,C5HEE,C4HF6C,OtEQX,A7FAA,C6FAb,A7FAA;A6ICzB,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHEtV,AGGA,AKCF,ANHE,AGXD,APjBqhB,AC8BphB,AKCC,AMAD0I,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIEvU,AiFLF,A/DFEiO,AdDApC,AIGA,AMCF,APHE,AIXD,ATjBqhB,AC8BphB,AOCC,AMAD0I,AjBDF,A4HCA,ASAA,ADAA,ANAA,ACAA,AGAA,ADAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GPG,ADEA,A1BKH,AjCDK,AkLCL,AGAA,ADAA,AnLFA,AsLNmD,AhJSnD,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLHYqR,ErFAV/Z,AUIA0I,A7GIAvU,AkBPAiO,AdDApC,AYIA0I,CuFFA,A7FAA,AdNE,CAME,CiHED,A7FAA,C6FAC3J,A7FAAA,AwKJMgb,CnFCL5d,AHEA8B,A3FFA9B,AJEA8B,EmGAEzF,A9FAAA,CUFC,CiFDC,AECT,AnFAS9B,AdDA,AGCT,AXCW/F,CuGFD0B,AUIP,AzGJOA,AYIP,ApBFC,C0GCJ,A9FAA,C6FFY,AQGA,AtGHA,ASGA,ApBFE,CsGCd,A/FAA,AqLHmB,CtFGLuE,AlGKA,AkBPN,AfEMA,CeFd,CmFAA,A9FAA,AiLDsB,CtFGL,AlGKA,AGLA,EgGHjB,A/FAA,C+FAoBrD,A/FAAA,C8FGC,A/FAA,GgGHrB,A/FAA,C8FGA,A/FAA,CHK0BY,CmGRCwL,ADGA,A9FHAA,ADGA,IgGHI,A/FAA,C+FACpM,A/FAAA,I+FAhC,A/FAA,C8FGqCqD,A/FAAA,G+FAV,AlGKV,AGLU,CHKc5C,CkGLC,A/FAA,KHKzB,AwLRP,ExLQuC;A6JHnD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHEgM,AGGD,AMCDgR,AFHA,ACGA,ANHC,AHEG,AWCAhJ,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHII,AiFLJ,A/DFC,AdDChI,AIGD,AOCDgR,AFHA,ACGA,APHC,AJEG,AaCAhJ,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,AxIAA,AjCDQ1X,AkLCR,AGAA,ADAA,AnLFA,AsLNI,AhJSJ,AGAA,AFHA,ACGA,AHDA,AFAA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLHS,ClFLT,ApFHA,AVGA,C2FKE0P,AECA,AjGDAA,AGCA,EmGAEiL,AGGAjD,AhGHAiD,AGGAjD,ApBFI1X,C4LJA,GtFKA,A/FAA,C+FACkN,A/FAAA,A+BAAyE,CiJRC,ChFKC,ASIA,AVDH,AlGKG5N,AIRA,AWIA,AZDH,AqLHO,CrFAHhC,ASIAA,ACAA,AzGJAA,AWIAA,ACAA,E6FAEkM,A7FAAA,AmKTA9I,CjFQCmB,A/FAAA,AqLHIkjB,ExLQF,AkCLjB,CgEAI,AlGKcvlB,AGLd,A+BAc2N,CwEFC,A7FAA,CqFEC,A/FAA,AqLHI,CrFAtB,ASIF,ACDc,AzGHZ,AWIF,ACDc,AwKHW3L,CrFAHmJ,ASIAkR,AFHA,AtGDAlR,AWIAkR,AFHA,AjBCI,CuLPhB,AjJQV,CiJRwB,CvLOKngB,AsCCJ0R,AsJHN,CrFAjB,A/FAA,G+FA2BzC,A/FAAA,CoLAK,C9ECHuL,A7FAAA,C+FG/B,A7FAA,CoFJE,A/FAA,A8BGF,E0ECmC,A7FAA,AmBDAzN,ElCKxB,AkCLX,ClCKsCxJ,CkCLC,KlCK5B,AJNH,CgHEqCkO,A5GIzC,AeJyCA,C2FHvB,A7FAA,C6FAyBxK,A7FAAA,AsKNrC,CAAN,EvES+B,A7FAA,E6FAiByK,A7FAAA,AyKJrC,E9ECO,A7FAA,A2KDoC,E9ECF5L,A7FAAA,I+FGrB,AFHb,A3FGa,AFHb,E+FGwCiH,AFHA,A3FGAA,AFHA,E+FG3B,A7FAA,E6FA+B,A7FAA;A8IClE,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHEgC,AGGF,AMCEhC,AFHA,ACGF,ANHA,AGXA,APjBA,AC8BM,AKCJ,AMAE7C,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIG,AiFLH,A7EHE6E,AIGF,AOCEhC,AFHA,ACGF,APHA,AIXA,ATjBA,AC8BM,AOCJ,AMAE7C,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRE,ADGA,A1BKF,AjCDK,AkLCL,AGAA,ADAA,AnLFA,AsLNG,AhJSH,AGAA,AFHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLHYof,ErFAVva,ASIAhC,AxGJAgC,AWIAhC,CfEA,C4GFE,ACAA7C,A9FAA,ACAAA,C4FAC,A7FAA,CwFACmO,A7FAAA,A8CTA6N,ADGAzB,AiIEM6E,CrFAL,A/FAA,A8BGA7X,CiEHCxC,A/FAAA,CwGIJ,AFHKhI,AFXAoS,APjBAxP,AlF+BL,AFHK5C,AFXAoS,ATjBAxP,CgG8BC,A/FAA,AoDLA,CqDMC4H,AVDAzE,AnFCAyE,AZDAzE,CgGHJ,AUIK,AzGJL,AYIK,AwCTA,AtBQV,CiEHA,A/FAA,AoDLWoZ,ADGAvb,CsDMC8I,A7FAAA,CkBDClC,AsJHM,CrFALlC,ASIZ,AFHY,AREA,A9FHAA,AWIZ,AFHY,AVEA,CyGCd,AFHe1M,AREAwK,AnFCf,AFHexK,AVEAwK,AqDRL,CAAN,AgIKkB,CjFIL,A7FAA,A6CNA,CAACrB,ArBKlB,EqECoBsC,A7FAAA,C8FdtB,A7FAA,A6CKuB5J,CgDLC4U,APjBxB,AtFiBwBA,ATjBxB,CiG2BE,AF3BuBtP,A7F2BvB,AF3BuBA,CwG4BhB,A7FAA,C6FAkBlE,A7FAAA,C2FX3B,APjBA,AM+B4B,A5Fd5B,ATjBA,AQ+B4B,C6FACuH,A7FAAA,C8FdC,APjBArF,AtFiBA,ATjBAA,CwG4BrB,AREH,ArFFG,AVEH,AoDLO,CCHX,ADG8Bwc,CmDGC1jB,AT5BjC,AC8BiC,ArFFAA,AX5BjC,AC8BiC,CqDRC,CyCtBCwD,A/FAAA,IwG4BjC,A7FAA,CoF5BF,A/FAA,CqDyByC,C0CzBC,A/FAA,CqG+BpB,A7FAA,C6CNsBqf,GgDMGrV,A7FAAA,E6CNE,AiIErC,CjIFsC8V,GgDMG,A7FAA,A6CNJ,CgDMK/W,A7FAAA,A6CNzC,CAAX,agDM6C,A7FAA,C6FAsBe,A7FAAA,Q6FAnE,A7FAA;AmJCF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHC,ASIA,AFHA,ACGD,AHdE,APlB0C,AC+BpC3O,AWFM,AdEd,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIC,AiFLD,A/DFA4hB,AdDC,AWIA,AFHA,ACGD,AHdE,ATlB0C,AC+BpC5hB,AaFM,AjBEd,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRI,ADGF,A1BKF,AjCDC,AkLCD,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLHS,C5EET,AFHA,A3FGA,AFHA,AjBhBC,CuGiBC,A/FAA,CyGCG,A7FAA,CpBlBL,CiHqBK,A7FAA,CwFdCqJ,APlB0Cd,AtFkB1Cc,ATlB0Cd,AqD0B1C0c,CrBKChT,CgEACjS,AhFFA,AfEAA,C8F/B2C,A/E6B1CmC,AhB7B0C,CqD0BzC,CCHCskB,EgDLE,APlB0Clc,AtFkB1C,ATlB0CA,AqD0B1Ca,E2CKE,AWCA1E,A1GDA,AaCAA,AkBDb,CsEbcmT,APlB4B,AC+B5BlY,AvFbAkY,ATlB4B,AC+B5BlY,CqDRC,CyCvB2C,AYgCvD,A3FHL,AhB7B4D,AcgCvD,AwCTaglB,AtBQA1U,ChBFC2O,AqCHA,CiDRC,AKcA,AlGdA,AKcA,AuCNArU,CiDRC4M,A7FAAA,C6CKJ,CAAb,C0CQI,A/FAA,C+FAiBnL,AhFFzB,AfEyBA,C+BAvB,EhBF0B,GqCHf,CAAmB+W,CiDRZ,A7FAA,C6FAlB,A7FAA,IOWoC7S,GqCHG,G2CKjC,A/FAA,AoDLoCgS,E2CKE3W,AhFFlB,AfEkBA,EeFE,CqCHC,CAACoX,C2CK1C,A/FAA,E+FA6Cje,A/FAAA,AoDLJ,CAApC,CAAX,C2CKM,A/FAA;A0JER,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,A9DFA,ACGA,AVjC8DvC,ACgCvD,AKCL,AMAE,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AhCDA,A/DFE,ALAF,ACGA,AZjC8DA,ACgCvD,AOCL,AMAE,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRG,A3BQH,AiJAA,AGAA,ADAA,AnLFA,AsLNE,AhJSF,AGAA,AFHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,I2FhC8DA,A/FAAA,EqGiCxDwU,ArFHAnS,ARGAmS,AyKTAyM,CjFMA,A/FAA,A+BEClT,C2ECCxL,A7FAAA,EiFjC4D,A/FAA,AiLwB1D,ClFxB2DlB,AYiCjE,A3FHO,AhB9B0DA,AciCjE,EkFDS,AWCA,A1GDA,AaCA,AmKTAmiB,C5ESC,ArFHA,ARGA,CwBDZ,EgEAe,AKCA,ApGDA,AOCA,CwFDCpa,AhFFhB,AfEgBA,A+BAAD,E2ECE4E,A7FAAA,AkBDlB,GgEAqB,A/FAA,AgLRjB,CjFQkBtE,A/FAAA,C8FhCsC,A/FAA,C+FAsBrD,AMiC1DoO,ArGjC0DpO,AQiC1DoO,CyKTCyM,CtESC,A7FAA,CiFjCkC,AYiCjC1e,A3GjCiC,AciCjCA,EiFjC4D6B,A/FAAA,AiLwB1D,CtESH,A7FAA,C6FAf,A7FAA,CiFjCiD,AMiC7C,ArGjC6C,AQiC7C,AyKTiB,CAAhC,ClFxB4F,A/FAA,CqGiCzD,A7FAA,AyKTA,CjFQnB,A/FAA,C+FAqBuF,A/FAAA,Y+FA1B,A/FAA,E+FAwC,A/FAA;A0JErD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,AlEAA7N,AKCA,ANHA,AGXE,APpB8F4E,ACiCxF0I,AKCJ9C,AMAAwW,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIA,AiFLA,AzEAAhhB,AMCA,APHA,AIXE,ATpB8F4E,ACiCxF0I,AOCJ9C,AMAAwW,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A9GNE,A1BMF,AjCFA,AkLEA,AGAA,ADAA,AnLFA,AsLNI,AhJSJ,AGAA,AFHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLJQzR,IjFKJ/E,AMAAwW,AnGAAxW,AMAAwW,AwKLIzR,ElFIF,AEbAnG,APpB0FxE,AzFiC1F,AGbAwE,ATpB0FxE,CoGiCzF3E,A9FAAA,A+CNA,ArBMA+L,CgEACsB,A/FAAA,AqLJI,CnFEH4E,ArGOA7N,AOPA6N,AXAAxR,CiHGC,A7FAA,AmKTA,ClFzB2F,A/FAA,AqD2B1FoB,ArBMT,CqECU,A7FAA,A6CPA,AiIEI,ChFTH,APpB0F8C,ACiC1F,AWCA,AlGdA,ATpB0FA,ACiC1F,AaCA,CsFDb,AJAc+I,A1FAd,ALAcA,AgLRArI,AjJQA,CqECC,A7FAA,A6CPA,CAAb,C+CMe+M,AOCb,ArGDaA,AQCb,CwFdc,APpB4E,AtFoB5E,ATpB4E,AqD2B5EvQ,ArBMhB,CqBNiB,A3DInB,C2GGI,A7FAA,AdHgBnB,C4LFKipB,CnFEzB,AGXE,AjGWF,AIXE,A4COoB9E,C+CMtB,ADFuBjd,A7FEvB,ADFuBA,AXAvB,AuLNU,C3ELc,A7FAA,AwKKA,CvLMC,EIOzB,CqGPA,AHEQ,AlGKoBvD,AOP5B,AJEQ,C+FAqBuJ,A/FAAA,CkGFC,A9FAA,AiLFd,CjIFd,EAA+B/L,AiIEI,CjIFH,CvDWlC,CuDXE,AiIEc,CxLSqB,CuDXC,CiIEK6nB,EtFInC,A/FAA,G+FAoC,A/FAA,AqLJI,CAACA,ELJvC,CjFQF,A/FAA,AgLRJ,EKIY,GAAyC,OAAjD;A3BMR,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A+CAA,ADAA,A7DCA,AuHDA,AFAA,ACAA,ArEHA,AOCA,ACGA,ANHE,AGXE,APrB0GnkB,ACkCtGzF,AKCJ4Y,AMAA1G,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIE,AiFLF,A/DHE,AdAF,ASCA,ACGA,APHE,AIXE,ATrB0GzM,ACkCtGzF,AOCJ4Y,AMAA1G,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GTEmU,ADGErB,A1BMJ,AjCFI,AkLEJ,AGAA,ADAA,AnLFA,AsLNG,AhJSH,AGAA,AFHA,ACGA,AHDC,AFAD,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLJK,EhILHqB,AtBWF,CsJdI,CjFaAzN,AMAA1G,AnGAA0G,AMAA1G,AuCPA8S,E8CIEzX,AJhCwG9H,AjGuCxGjB,AkBRA,AXCA+I,ALhCwG9H,ANgCtGtF,E4GXA6L,ANaAhM,AvFbAgM,ARaAhM,AoDNA,C4CGCgQ,A/FAAA,AmDHAjO,CCHC,ADGF,C8CIG,A9FAA,AgDJP,CiDPQ,AKcA,AlGdA,AKcA,ChBIC,AwDdAskB,C2CMb,AECc,AjGDd,AGCc,AgDJA9d,C4CGC0H,AKVA4J,ANaA,A9FHA5J,AOVA4J,ARaA,C8FlCyG,ACkCxGlY,AhGlCwG,ACkCxGA,CoGCC,AvGIA6C,AUJA,A6CPA,C8CIf,AJhCwH,A1FgCxH,ALhCwH,AqD4BxGzC,CiDPC,A7FAA,A4COF,CiDPG0X,ADcA,A5FdAA,ADcA,A6CPN,CCHO,CyCzByE,A/FAA,ANgCtE,CuGDxB,A/FAA,AmDHuB,C2CMf,AKCJ,AvGIoB,AGLhB,AOCJ,CyFJqBvJ,ADGAlC,AlGKAvJ,AIRAyL,ADGAlC,AqDTA5C,EgDJN,A7FAA,A4COf,A3DIyB5K,C4GXd,A7FAA,C6FAcsZ,AxGkB3B,AWlB2BA,CwFU7B,A/FAA,CJQ+BtV,AwDdA,C2CMC,A/FAA,AoDNA8H,CgDJjB,A7FAA,E6FAX,A7FAA,C6FDoB,A7FAA,C6FCa,A7FAA,A6CIZ,A5DOrB,CIOkC,AwDdA,CxDcC7H,AwDdd,A5DOgB,C4DPvC,GxDc6B,CkGLvB,AlGKoCF,AGLpC,E+FAsCgJ,A/FAAA,K+FAtC,AlGKuB,AGLvB,E+FA6C7G,A/FAAA,G+FA7C,A/FAA;A0JER,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AGGF,AKCA,AHdI,APtB4H8D,ACmCzH,AKCH,AMAD,AdDH,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIC,AiFLD,A/DHI,AdAF,AIGF,AMCA,AHdI,ATtB4HA,ACmCzH,AOCH,AMAD,AjBDH,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GTE,ADGEya,A1BMJ,AjCFQ,AkLER,AGAA,ADAA,AnLFA,AsCGA,AGAA,AFHA,ACGA,AHCA,AFFA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLJIzV,EAAAA,C3EFC,A7FAA,CsFMDmI,AONF,ArGMEA,AQNF,AuCAEsN,E4CGEpjB,AFhC0H2I,A7FgC1H3I,AFhC0H2I,AsD0B1Huc,AgIKE,CtFCK,A/FAA,CoGIL,A7FAA,A6CPA,CgDOCjP,ArFJA9V,ARIA8V,A6CPA/V,CCHC,ADGF,AiIEI,CrFCD,A/FAA,AmDHP,C4CGQoO,AGGA,AlGHAA,AIGA,C0FAC,AhFHT,AfGS,AqDTA6W,CtCMC,AqCHAze,C+CMCmB,A9FAAA,E+FCX,A7FAA,A6CPa,AiIEb,CvF/BwI,A/FAA,AqD6B1H3H,C4CGZ,AIIamQ,ArFJAkQ,AdAb,AMIalQ,A6CPF,C4CGGjC,AFhC0H,A7FgC1HA,AFhC0H,AqD6BhI,E+CMQ,A9FAA,C8FAC,A9FAA,A+CNA,C0C7BuE,A/FAA,CgBgChF,CsCNY,C+CUC,ArFJvB,ARIuB,A8CVAoW,ADGvB,C4CGE,AIIsBxlB,AnGJtB,AMIsBA,CyFJ1B,A/FAA,E+FA6B,A/FAA,CmGIZ,A7FAA,C6FAcgO,A7FAAA,E8CVP,EAAWwX,E+CUlB,A7FAA,I4FDG,A9FAA,C8FAtB,A9FAA,CgDT0B,EAAqB,EAArB,EAAyB,GAAzB,EAA8BM,IAA9B,CAAb,CACRzM,IADQ,CACH,YAAY;AqGUtB,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,APAA,AICA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AQIJ,ANHE,AGXE,APvBgJzP,ACoC5IzK,AKCL,AMAD,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AoCDA,ADAA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AhCDA,A/DHG,AdAC,AUIJ,APHE,AIXE,ATvBgJyK,ACoC5IzK,AOCL,AMAD,AjBDF,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRM,ADEH,A1BMH,AjCFQ,AkLER,AGAA,ADAA,AnLFA,AsLNE,AhJSF,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLJIwP,EAAAA,CjFCF,ArFFA,AREA,CQAE,E+EjCgJ/E,AYqC9IiD,A3GrC8IjD,AcqC9IiD,AmKTA0X,AKIE,CnFEDnZ,A9FAAA,C4FDCxK,ADGAzB,A9FHAyB,ADGAzB,EgLRE,AKIE,CrFCD,AECT,AnFDS0G,AdAA,AGCT,AiDNW,A5DMElG,EuLNFkL,ChFKCuE,AECA,AJlC8I,A/EiCxJ,AdAUA,AGCA,ALlC8I,CgGoC7I,AWCA,A1GDA,AaCA,AwCTT,CyC5BwJ,ACoC9ItO,AhFHA,AhBjC8I,ACoC9IA,EkGFd,AQGgB,AtGHhB,ASGgB,CmKTZ,EvLMmB,CuGDH,A/FAA,ARCIf,AuLNJS,ChFKCA,AUIrB,AzGJqBA,AYIrB,CkFDM,A/FAA,C+FAiB4M,A/FAAA,APFA,EAAM,CAAN,AuLNnB,ChFKF,A/FAA,ARCI,E4LFyBjC,CLJDoZ,GKIK,CtFI7B,A/FAA,AgLR4B,AKIE0E,EtFIAvc,A/FAAA,CgLRCia,GKIN,CtFIzB,A/FAA,AqLJqCnkB,IAAjC,GAAwC,KLJlD,CKIE,CLJqD;AtBUzD,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHI4M,AGGJ,AIFA,ACGA,ANHE,AJnC4F,ACqCvF,AWCL,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIA,AiFLA,A/DHIzJ,AdAAyJ,AIGJ,AKFA,ACGA,APHE,ALnC4F,ACqCvF,AaCL,AjBDF,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRK,A3BQL,AjCFK,AkLEL,AGAA,ADAA,AnLFA,AsLNI,AhJSJ,AGAA,AFHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,GkDXa,A5DKY,CuGGrBA,AGGA6B,AIFAY,A1GOAhO,AkBRA8B,AdAAyJ,AIGA6B,AKFAY,AjBCA,CqGpC0D,A/FAA,AsD6BvDuU,E6CMAlb,A9FAAA,EsGGE,A3FJA,AFIA,C0FHC,A7FAA,A2CTG,A2HGH,C3HAG,C2CKD,AGGA,ADFV,AnFDUrF,AdAA,AIGA,ADFV,CmGAWgD,A7FAAA,CsKNC7D,ChFKCoK,AGGAvG,ADFA,ArGOA,AkBRX,AdAWuG,AIGAvG,ADFA,GPOG/E,CqGPhB,AQGiB+B,AtGHjB,ASGiBA,C0FHC,A7FAA,C6FAC,A7FAA,CyFEC,AOCb,ArGDa,AQCb,CmFJc,AGGA,AlGHA,AIGA,AgDRE,C2CKD0J,AUIA,A7GIA,AIRAA,AYIA,AmKTd,CnLaexL,AmLbA,EhFKV,A/FAA,C+FAa,A/FAA,EJQV,IAAgB,ImGRI7C,A/FAAA,C+FAV,A/FAA,E+FAa,A/FAA,EkGGnB,AtGKqB2C,AQLrB,A2KRZ,C7EQV,A9FAA,A2KRI,IzEMgB,A7FAA,C6FApB,A7FAA,KbOkC,CAAqBG,KAArB,EAA4B;A6JH9D,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHM,AOCN,ACGA,AHdI,APzBoK,ACsCnK,AKCH,AMAE,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIE,AiFLF,A/DHG,AdAG,ASCN,ACGA,AHdI,ATzBoK,ACsCnK,AOCH,AMAE,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRM,ADEJ,A1BMF,AiJAA,AGAA,ADAA,AnLFA,AsLNG,AhJSH,AGAA,AFHA,ACGA,AHDA,AFAA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLI,GvFjCwC,A/FAA,EgG6BxC,A/FAA,CoGUEgU,A7FAAA,A6CPAqM,AiICElZ,EhFRAA,AKcAiV,AlGdAjV,AKcAiV,CiFvCsK,AjG2CrKpc,AE3CqK,AgCsCrKsN,CsJLG,CtFKD,A/FAA,AqDRE,ADEF,AiICE4X,ChFRD,A7FAA,CwFUCxiB,A/FAAA,CyGIT,A7GIU,AgBJV,AuCPU6D,C2CMCkC,A/FAAA,C0GCC,A7FAA,AwCTV,CgDLW,ANaN,AvFbM,ARaN,EgGHQ,ADGA,AKCA,AvGIAzI,AIRA,ADGA,AOCA,A8KNX,CrFEY9C,A/FAAA,AmDHA,AiICEioB,CrFEH,AKVf,ApGUe,AOVf,A4COiBzd,C4CGf,AIIgBsC,AnGJhB,AMIgBA,AwBDtB,CsEbuB,A7FAA,AuBaA/G,ClCKrB,IuGJ0B,A7FAA,AwBD5B,CqEC6B2F,A7FAAA,A8KNrB,CtJKsB,EqBNhB,AiICoB,CjIDDsX,AiIC7B,EAAiC,OjIDK,CgDOpB,A7FAA,E6CPuBH,EgDOE/V,A7FAAA,K6CPd,CgDOoB,A7FAA,C6FACpB,A7FAAA,C6CPC,CAAzC,CAAZ,WgDO6C,A7FAA,C6FAsBc,A7FAAA,U6FAnE,A7FAA;AmJCF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHK,AGGL7E,AKCA,ANHE,AGXImQ,AP1B0KtP,ACuC1KvK,AWCF,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIC,AiFLD,A7EHK,AIGL0J,AMCA,APHE,AIXImQ,AT1B0KtP,ACuC1KvK,AaCF,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRK,ADEHglB,A1BMF,AiJAA,AGAA,ADAA,AnLFA,AsLNC,AhJSD,AGAA,AFHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLQxV,CxLQR,CuDTEwV,CCPW,CyC1BmKza,A/FAAA,AsD0B9K,AgIQMiF,CrFAO,A/FAA,C+FAX,AKREqK,ANaA7Z,A9FLF,AORE6Z,ARaA7Z,AoDNA,ArBMAuN,CoEAC,ADFA6E,AJrC4K,AzFuC5K,ADFAA,ALrC4K,AqDiC5KpJ,C+CMC,ALvC4KT,AYwC5KmF,ArGDA,ANvC4KnF,AcwC5KmF,AwKNI,EhFRF,A7FAA,C6FAC6L,AP1BwK,AtF0BxKA,AT1BwK,AqDiCjL,ArBMS,C+DvCqK,A/FAA,AqDiCpK2L,AiICI,CnFGd,AHEW,A3FFX,AJEW,C+FACvjB,A/FAAA,A+BAA,C+DvC6KkD,A/FAAA,CmGqC3K,A9FAA,CsGGZ,A7FAA,AuCPF,C+CMK,A9FAA,A0BAL,CoEAF,AOCmB,ArGDnB,AQCmB,AuCPA,C+CMCyN,ALvC4J,AzFuC5JA,ANvC4J,AqDiC9K,E2CMI,A/FAA,AoDNgB,CiDPZ,ANaarE,AvFbb,ARaaA,AoDNrB,CiDPI,A7FAA,C4COmB8W,C+CMzB,A9FAA,CgGb2B,A7FAA,C2FaCpN,ADFA,A7FEAA,ADFA,EiLHpB,ChFRF,A7FAA,GuFaA,A/FAA,AoDNJ,E+CMF,AJAoCpK,A1FApC,ALAoCA,K+FA9B,A/FAA;A0JEN,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,A7DCA,ANHI8E,AGXEwH,AP3B6L,ACwC7LvM,AKCJ,AMAEI,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AFAA,AqICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/FJEwE,AJIF,APHIG,AIXEwH,AT3B6L,ACwC7LvM,AOCJ,AMAEI,AjBDJ,A4HCA,ASAA,ADAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRE+Y,ADEA,A3DGE,AkLGJ,AGAA,ADAA,AnLFA,AsCGA,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLQjX,EtKEN0C,AsCLAuU,E6CMEpU,AQGA3E,AtGHA2E,ASGA3E,AwKNI8B,EhFRFqK,ANaAvM,AKCAyK,A5FdA8B,ARaAvM,AOCAyK,AdJE,C2DHDmN,A3DGE/kB,CsGGD,A/FAA,AqDRA,AgIGI,CtFKHuG,A/FAAA,AqDRAigB,CgDLC,AtFUA,APVA,C6FACxN,ADcA,ArFJA3S,APVA2S,ADcA,CwFDH,A/FAA,AoDNN,AiICc,CtFKV,AWCO,A1GDP,AaCO,AwCTL,C+CSM,A7FAA,A8CTZ,CDEa+L,CsDOC,A3FJN,AFIM,CEJd,AsCLe6B,C6CMC,A9FAA,AiLHV,CnFGWxZ,A9FAAA,CsGGf,A7FAA,AuCPF,CsDIsB,A7FAA,AwCNtB,CqDSoB,A7FAA,CwFdZ,ADcawK,A5Fdb,ADcaA,AdJE,CyGCP,AGXZ,AjGWY,AIXZ,E0FWoBjQ,A9FAAA,CiGXC,A7FAA,C4Fcb,A7FAA,AdJgBzH,GyGCZ,AGXZ,ADcyB,AhGHb,AIXZ,ADcyB,C2FH3B,A9FAA,YXDK,IAAyC,CAACF,gBAA3C,KAAgEK,UAApE,EAAgF;AiKKpF,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGGJ,AIFA,ACGA,ANHG,AGXGqZ,ANaD,AKCD/B,ARDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIA,AkBRC,AdAG,AIGJ,AKFA,ACGA,APHG,AIXG+B,ARaD,AOCD/B,AXDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRE,ADEA,A3DGM3X,AkLGR,AGAA,ADAA,AnLFA,AsLPA,AhJUA,ACHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLQ6L,CtKPR,EmFQE,A9FAA,CmGEEZ,AHGA0M,A1FHA1M,AHGA0M,AdJI3X,AuLNHomB,AKIGva,CtFEG,A/FAA,CqGVL6N,A7FAAA,C4COCsL,ArBMAlZ,CiEHCxK,A/FAAA,AoLFI,CxLUHqD,AwDbAiiB,AgIGIgD,C9EGH,AFXA,A3FWA,AFXA,AwKIC,ChFMA,AKVA3Q,ANaA,A9FHA,AOVAA,ARaA,A+BAT,CqECU,A7FAA,A6CPV,CmDIW1P,A7FAAA,A2CNX,C2CKY,A/FAA,A+KNC6c,AjJSD,CiEHV,AIIW,AnGJX,AMIW,A6CPAvB,E4CGE,A/FAA,AoLFT,CtJKN,AsJLoBiF,CjIDpB,CmDIkB,AHGhB,A1FHgB,AHGhB,AdJoB,AuLNH,CzEOA,A1GOrB,AaPqB,AsKPCnC,C3EJZ,A7FAA,C6FAJ,A7FAA,AfUqBtnB,A4LFnB,CxLUgB,AwLVI2J,EhFRF,A7FAA,G+FWN,A7FAA,C6FAP,AFXP,A3FWO,AFXP,C+FWyBiB,A7FAAA,A2KHvB,CAA4B,C5LE5B,GuLNJ,CzEOJ,A7FAA,GsKP0C,EKIN8e,GLJpC,EAA4D,EKIjB,EAAI;A3BO/C,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHM,AGGJ,AKCF,ANHC,AGXK7gB,AP7B8L,AC0C9LrJ,AKCF6Y,AMAA,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIE/T,AIRI,AIGJ,AMCF,APHC,AIXKuE,AT7B8L,AC0C9LrJ,AOCF6Y,AMAA,AjBDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,AJAA,AFAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRC,ADEC,A3DGM,AkLGR,AGAA,ADAA,AnLFA,AsLPE3Y,AhJUF,ACHA,ACGA,AHDE,AFAF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLYsP,ExLUV1K,AmLdA5E,E5EUE2Y,A7FAAA,E8FdExP,ANaArJ,AvFbAqJ,ARaArJ,AqLLMwP,CjIDLyV,ArBMAlZ,C2ECCsM,A7FAAA,CiF3CmM9N,A/FAAA,AiLiClM,CAACwd,AKIM,CjIDd,A3DGavnB,CqGvCqL,A/FAA,AgC0ClM,CiEHW,AKVA,ANaA,A9FHA,AOVA,ARaA,CqGbCkZ,ANaA/X,AlGKA,AWlBA+X,ARaA/X,AoDNAsjB,AiICM,CxLULlgB,AkCLA,EqECE,AMAA,AnGAA,AMAA,C6FAC8J,A7FAAA,AuCPhB,CvDWA,AkCLA,CqECkB,AvGIAhO,AUJA,AyKVlB,CvLMuB,CsGGnB,A/FAA,APHoBD,CuGAHU,ADGA2M,A9FHA3M,ADGA2M,AgLTA8Z,AKIMmC,CjFMzB,AMAa,A7GIf,AUJE,AMAa,C6FAb,A7GIqB,AgBJrB,ApBJqB,EiHIE,A7FAA,ApBJI,CAAN,CuGAZ,AnGQX,AIRW,ARAL,CuGAsBha,AKVA,ApGUAA,AOVA,A6KQM,ChFRLlE,A7FAAA,A6KQM3I,ELJnC,CjFSI,AWC4BwL,A1GD5B,AaC4BA,CmFJrB,AKViB,ApGUjB,AOViB,A6KQV,CtFKgBtB,A/FAAA,CgGHC,AKVA,ApGUA,AOVA,C6KQO,ErFE/B,AUI2B,AzGJ3B,AYI2B,CkFDlC,AWCmCgL,A1GDnC,AaCmCA,CmFJCjX,AKVZ,ApGUYA,AOVZ,A6KQV,ChFRP,A7FAA,C6FAP,A7FAA,C6KQ6C4oB,C3EMjB,A7FAA,EmFJrB,AUIc,AzGJd,AYIc,CmFJsBja,A/FAAA,GoLFS,CAACka,IrFEF,A/FAA,AoLFrC,CrFEsC1gB,A/FAAA,EoLFQ,GrFEjB,A/FAA,C+FAe,A/FAA,C+FAf,A/FAA,E+FAkBhI,A/FAAA,EoLFvD,CrFE0D,A/FAA,G+FAG,A/FAA,C+FAxB,A/FAA,E+FA2B0K,A/FAAA,I+FA3B,A/FAA,C+FAgC,A/FAA,I+FAhC,A/FAA,C+FApC,A/FAA,E+FA2E,A/FAA,O+FA3E,A/FAA,I+FAsF8D,A/FAAA,Q+FAQ,A/FAA,C+FACxO,A/FAAA,G+FAG,A/FAA,G+FAG,A/FAA,C+FAP,A/FAA,C+FArG,A/FAA;AyJKN,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHK,AGGH,AIFF,ACGA,ANHA,AGXK,AP9B4M,AC2C5M,AKCD,AMAA,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIC,AkBRDmgB,AdAK,AIGH,AKFF,ACGA,APHA,AIXK,AT9B4M,AC2C5M,AOCD,AMAA,AjBDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A9GNE,A3DGG,AkLGL,AGAA,ADAA,AnLFA,AsLPE1hB,AhJUF,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLS,ELJPA,EzEOEyS,A7FAAA,CsFHA,A/FAA,AoLFI,ClFOFrK,A9FAAA,C+CNCqc,CgDOC,AMAA,A3FJA,ARIA,AMAA,CuFACla,ArFJAtI,ARIAsI,AyKVA,C7ESC,A9FAA,A+CNR,A4HHQud,ChFMC,A/FAA,EkGGEtQ,A9FAAA,A+CNAiN,E4CGEljB,AUIAoN,AzGJApN,AYIAoN,CuCPb,CmDIe,AHGb,A1FHa,AHGb,CyFJc,AjFAlB,AdAkB,CmGICqD,ArFJAiQ,ARIAjQ,CgGHCU,A7FAAA,CgGGC,A7FAA,C6FACvF,A7FAAA,CmFJC,AGGA,AlGHA,AIGA,C2FHZ,AGGayE,AlGHb,AIGaA,A2KTtB,CjKMF,CiFA0B,AOCA,AtGDA,ASCA,C6FACe,AHGA,A1FHAA,AHGA,AyKVAmV,C5EUCnnB,ArFJA,ARIAA,CmGApB,A7FAA,GsFDwB,ACCb,A/FDa,AECb,C4FDcsB,ACCA0M,A/FDA1M,AECA0M,CmGAC,A7FAA,G0FHd,A7FAA,CKDkB7C,CqFInB,A7FAA,EgGHsB,A7FAA,AsKPvC,C7ESqB,ApFHK,AVGL,C8FArB,A9FAA,CqGCE,A3FJwCiG,AFIxC,E6FA0C,A7FAA,MEJlB,CwFCyB,AGGApD,AhGHA,AGGAA,C0FHE,AxFDD,ALCC,C6FAvD,A7FAA,IgGG2D,A7FAA,C6FACxB,A7FAAA,O6FAP,A7FAA,E6FAP,A7FAA;A6IC9C,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,ArBDA,A8CAA,A7DCA,AuHDA,AFAA,ACAA,ArEHM,AQIN,AHdG,ANaA,AKCA,AMAC6E,AdDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A/FJEuP,AdAI,AUIN,AHdG,ARaA,AOCA,AMACvP,AjBDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRA,ADEE,AuHMF,AGAA,ADAA,AnLFA,AsLPC,AhJUD,ACHA,ACGA,AHFE,AFCF,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLQ1C,CLPR,CjKSEiS,CgFbA,AKaA,ApGbA,AOaA,CmGIEvP,A7FAAA,AwKNI1C,GjIDDuV,A4HHA,AjJQA3S,CsJJK,ChIHH4U,GqDSG,A7FAA,AwKNI,CrFEH,AUIAtgB,AzGJA,AYIAA,AkBFX,G2EEc,A7FAA,AuCPd,ArBKc,GqBLGqe,AiICX,C3EMY,A7FAA,EwCTpB,C2CKuBzjB,A/FAAA,AoDLCmkB,CqDSAjS,A7FAAA,EEJE,CAACxH,CqCHzB,ArBK0B,CiEFf,A/FAA,C+FAiBkE,A/FAAA,CcAJ,AsCL1B,EtCKiC,AsCLCwV,E2CKrB,A/FAA,E+FAwB,A/FAA,AoDLrC,EtCK0B,AsCLcpC,C2CK3B,AjFAX,AdAW,E+FA6BhiB,A/FAAA,EyGItB,A7FAA,C6FAyB,A7FAA,GmFJhC,A/FAA,C+FAoC2O,A/FAAA,AoDLjD,EqDSoB,A7FAA,AwCTgC5O,CqDSxC,A7FAA,C6FAR,A7FAA,ImFJqD,A/FAA,AoDLzD,C2CK0D,A/FAA,C+FAD,A/FAA,AoDLGslB,C2CK/C,A/FAA,E+FAiD,A/FAA,CoDL9D,EAAkE,G2CKrD,A/FAA,E+FAyDrlB,A/FAAA,M+FAzD,A/FAA,C+FAgE2O,A/FAAA,Q+FAQ,A/FAA,C+FAC,A/FAA,C+FAD,A/FAA,C+FAxE,A/FAA,C+FAP,A/FAA;AyJKN,ATDA,ACCA,AFAA,AGAA,AIAA,ACDA,AJAA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHK,AGGH,AIFF,ACGA,ANHA,AGXC,AP9BD,AY4CG,AdDH,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGAhQ,AkBPE,AdAG,AIGH,AKFF,ACGA,APHA,AIXC,AT9BD,Ac4CG,AjBDH,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRE,ADEA,A3DEE,AkLIJ,AGAA,ADAA,AnLFA,AsLPEC,AhJUF,ACHA,ACGA,AHFImS,AFCJ,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLLK,ELJHnS,CtEEA,A7FAA,CkBMEmS,CiEJO,A/FAA,CJSL,AkBPA,AtBDE,C0GID,AtGIAnS,AQJA,A+CNA2kB,EmDIE/R,ATzCApI,ApFyCAoI,AXzCApI,AsDmCA4b,A2HDA,CAACyB,ChFMC,AGGAjc,ApFHAoW,AdAA,AIGApW,A+CNT,C+CMU,A9FAA,ERIZ,AuDVc+Y,C+CMC,A9FAA,AgDRA,C8CQb,A9FAA,AgDRcgC,CxDYC/hB,CsGJCgH,A9FAAA,A+CNhB,ArBKgB,CoECC,A9FAA,A0BDAyB,CiJRjB,CjKMA,CoFGoBjF,A9FAAA,CUHC,AiKNA+e,ClFlCvB,A/FAA,AgC0CkB,C+D1CO1c,A/FAAA,AsDmChB,C8CQiB,A9FAA,AgDPtB,AtBMsB7C,CoECCzG,A9FAAA,CkGF3B,A7FAA,C6FA6B2Q,A1GM7B,AkBP6B,ALCAA,E2CNpB,AtBOS,CAAd,CoECF,AL3CF,A/EwCiC1R,AVG/B,AN3CF,AsDoCWmlB,A2HFT,CzEOF,A7FAA,CyFEmC3Z,AL3CAlB,AzF2CAkB,AN3CAlB,CoG2CC,AIFA,AlGEA,AKFA,EyFElC,ApFH2B,AVG3B,CUHqC,CoFGC,A9FAA,CgDR/B,EACY,GyCpCrB,A/FAA,E+FAgD,A/FAA,cgBwCnB,CAAN;A2IKvB,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHM,AGGF,AIFF,ACGF,AV7CkD,AC4ChD,AKCA,AMAD,AdDD,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHGA3K,AkBPE,AdAI,AIGF,AKFF,ACGF,AZ7CkD,AC4ChD,AOCA,AMAD,AjBDD,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRuBoD,ADErB,A3DEM,AkLIR,AGAA,ADAA,AnLFA,AsLPEnD,AhJUF,ACHA,ACGA,AHFG,AFCH,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,E6KTEA,CjJMA,CsBLqBmD,EyCpC+B,AM6ChDyV,AvGGA,AkBPA,AhBzCgD,AQ6ChDA,CVGC5Y,AkBPAkL,AqCHAga,C+CMCxN,AL5CgDjN,AzF4ChDiN,AN5CgDjN,AsDoC7B,CkDMlBS,AREA,ArFFAA,AVEA,AgLTA,C3HCoB,A2HDnB4c,C5HGR,E4CGW,ADGX,AKCW,ArFJA,AdAA,ADGX,AOCW,C4FDC,AtGId,AkBPc/U,AVGA,A+CNAiR,CmDIC,A1GMArhB,AaNA,C6FACkQ,AT1CgD,AM6ChD,A1FHAA,AX1CgD,AQ6ChD,C4FDCzK,A9FAAA,E2FHEhH,AnGOnB,AIPmBA,AmDHA,CmDIV,A7FAA,A0CJWqjB,C+CMC,AIFA3S,AlGEA,AKFAA,CyFEClG,AtGIAjJ,AkBPf,AVGeiJ,C8FAD,ApFHEE,AVGF,A+CNF,C+CMf,A9FAA,A+CNF,A4HHA,ChFMW,AIIY8M,AnGJZ,AMIYA,CyFJC5I,AOCjB,A1GMT,AIP0BA,ASCjB,C6FAP,AxFDK,ALCL,AsKPyBmX,ClFnCiDzc,AjGkD5E,AkBTE,AhBzC0EA,EgByC9CoB,CiFAjB,A/FAA,CmGIG,A7FAA,CyFJiB,AIIAtF,AnGJA,AMIAA,CQJC,EiFArB,AIIG,AnGJH,AMIG,CQJqB0E,AiKNnC,ChFMoC9J,AIIA,AnGJAA,AMIA,CuF7CgB,A/FAA,C+FAJ,A/FAA,E+FAwC,A/FAA,CgByC/C,CiFA9B,AjFA+ByR,AdA/B,C+FAgC9C,A/FAAA,GcAR,CAAYjE,IiFAI,AjFAhB,AdAgB,C+FAC,A/FAA,C+FAD,AjFAEiG,AdAF,C+FAxC,A/FAA,C+FAP,A/FAA,McA+B,CAAP,CAHwB,CAKpD;A2IGF,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHK,AGGD,AIFH,ACGD,AHdA,APhC4F,AC6C3F,AKCGC,ARDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AEAA,ALAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A7GJK,AIGD,AKFH,ACGD,AHdA,AThC4F,AC6C3F,AOCGA,AXDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GTqB,ADGpB,A3DEO,AkLIR,AGAA,ADAA,AGTC,AhJUD,ACHA,ACGA,AHFC,AFCD,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,AEAA,ADAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLNI,GhIJK,C+CWLA,A7FAAA,C8CVqC,CgIGjClG,ElFMA,A9FAA,C8FACsG,AEbAyH,AhGaAzH,AGbAyH,CsFhCyF,A/FAA,AsDmCzF,AgIIG,C5LEG5Z,A4LFFiqB,CjFOD,A7FAA,A8CVoC,C+CUnCvpB,A7FAAA,A8CVoC,CyCpCqD0E,A/FAAA,CoG6CvF,A9FAA,C8FACpD,A9FAAA,C+FCZ,A7FAA,C6FAc0M,A7FAAA,C8FdlB,A7FAA,C6FAoBgL,A7FAAA,C6KOZ,CAAgBmQ,CvFvC0E,A/FAA,CsGgClG,APhCgH,AM8C5G,A5FdJ,AThCgH,AQ8C5G,C4FDK,A9FAA,AgDTuC,C8CStBpS,AEbA,ADcAlR,A/FDAkR,AGbA,ADcAlR,A8CXjB,C5DMsB,C4DJ3BwT,A5DI4BtZ,C2GK5B,A7FAA,EdL2B,A4LFvB,ClFMC,A9FAA,AgDVA,C8CUL,A9FAA,AgDRK,A5DI4B,CAAN,A4LFK,ClFMD0R,A9FAAA,AZJ3B,A4LFJ,EAAmC,IlFME,A9FAA,C8FACnQ,A9FAAA,CgDRvBoG,GAAV,EAAe,G8CQW,A9FAA,C8FAiBqP,A9FAAA,M8FAjB,A9FAA,CyF7C+D,A/FAA,C+FAN,A/FAA,EoG6C9B9F,A9FAAA,Q8FAQ,A9FAA,C8FAC3P,A9FAAA,S8FAT,A9FAA,C8FAmByV,A9FAAA,M8FAnB,A9FAA,C8FA3B,A9FAA;AqJEnC,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGA,AKCH,ANHA,AGXE,APjCqJ,AM+CpJ,AMAH,AdDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHIA9S,AkBPE,AdDC,AIGA,AMCH,APHA,AIXE,ATjCqJ,AQ+CpJ,AMAH,AjBDA,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRI,A5DIC,AkLIL,AGAA,ADAA,A7ICA,ACHA,ACGA,AHFA,AFCA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLNQ0K,GrFVN,AIeA,AnGfA,AMeA,AdNE,CyGKA8C,A9FAAA,AXFE,A4LFE9C,EtKIF6S,EsKJM,CrFGH,AUIAxhB,AzGJA,AYIAA,CqFHT,A9FAA,CWAW,AsCNAylB,A5DIC7lB,CISA,AJTN,A4LFU,C3EOhB,A7GIaqE,AgBJb,C6FAc0W,A3FHA,AFGAA,ApBLA,EiHKd,A7FAA,CwCTiB,CqDSC,A7FAA,AwCTAsL,CtCMChF,MlBOnB,AkBPE,GlBO0Bhd,AwDbjB,CAAkB,IgIErB,OxLWR;A6JHA,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGGH,AIFD,ACGA,ANHA,AGXE,APlCuJ,AC+CzJ,AWCE0W,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHKA1W,AkBRE,AdDE,AIGH,AKFD,ACGA,APHA,AIXE,ATlCuJ,AC+CzJ,AaCE0W,AjBDF,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRMnY,ADENqhB,A3DEQ,AkLIR,AGAA,ADAA,AGVA,AhJWA,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLNQlV,E3EONgM,A7FAAA,E6FAE,A7FAA,AuCPA,AiIAIhM,CjIAHrN,CrCICuJ,AsCNArI,E5DIM,A4LFA,C9EIH2P,AREAhF,ArFFAgF,AVEAhF,AgLVA+Z,C3HEC,C2CKC,A/FAA,CJSC,AkBRA,AsCNA,AgIEI,CxLYH5lB,CuDZb,CrCIe,AqCJAT,CrCIb,CiFDeJ,A/FAAA,CmDHjB,AiIAQ,CLJR,C3HC6B,A2HDR0L,C5HIA,CmDIrB,A1GQA,AaRA,CsFDW,AOCYzC,A1GQAvF,AITZ,ASCYuF,AsKRvB,ChFOwB2F,A/FAAA,C+KPExE,CzEQ1B,A7FAA,E6FA4B,ARE5B,ArFF4B,AVE5B,CgGHW,ADGkBwC,A9FHlB,ADGkBA,CHM7B,CmGT+B,A/FAA,AmDHAlC,A4HJ/B,EjFUA,AlGMiC/G,AGNjC,AgLVkCmgB,ChFOvB,A/FAA,C8FGwB1e,A/FAAA,AoDNd,C4CGepF,A/FAAA,CmDHC0jB,A4HJrC,CjFUA,A/FAA,CgLVwC1X,CjFUA,A/FAA,CoDNnB,A4HJrB,ChFOW,AnGSX,AITW,C+FAgC/F,A/FAAA,AmDHA,A4HJC,MhFOK,A/FAA,C+FAC0I,A/FAAA,Q+FAD,A/FAA,C+FAtC,A/FAA,C+FAP,A/FAA;AyJKJ,ATDA,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AOCD,ACGF,AHdEjQ,ANaA6N,AKCA,AMAD,AdDD,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHKA/I,AITG,ASCD,ACGF,AHdE9E,ARaA6N,AOCA,AMAD,AjBDD,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRM6X,ADEJ1Z,A3DEU,AkLIZ,AGAA,ADAA,AGVE,AhJWF,ACHA,ACGA,AHFA,AFCA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLNQA,EhFPNhM,ANaA6N,AvFbA7N,ARaA6N,AoDNA7B,EiIAMA,EjFOF+M,A7FAAA,A8CTA2M,ADEA,A4HJA,C5HIC1c,A4HJAoC,CKIK,C9EIHA,AFXA,A3FWAA,AFXA,A6KOIgf,ChFPHzoB,A7FAAA,A6CKA,CDER,CvDYU,AwDdA+jB,ADEAV,C2CMC,AKCA,AvGKA7iB,AGNA,AOCA,AyKXA,CjFUC+L,A/FAAA,AgLVA+E,CzEQC,A7FAA,C6FACA,AHGA,A1FHAA,AHGA,A8CXa,ADI3B,EiDPA,ANaW,AvFbX,ARaW,AoDNK,CiDPC2G,A7FAAA,A6KOX,CtFMYlT,A/FAAA,AqLNIujB,ExLYxB,AmLhBO,CjFUM,AlGMU/kB,AGNV,AoDNU6f,A4HJA/X,CzEQd,AREP,ArFFO,AVEP,CuGFuBzC,AHGAwO,A1FHAxO,AHGAwO,A8KPjB,CLJD,AKIuB5O,CLJxB,CzEQG,A7FAA,GsKRsB,C5EWf,A7FAA,A6CPd,CmDI+BI,AFX/B,A3FW+BA,AFX/B,AwKG+ByC,AKIzB,CAA8B,ChFPH6M,ADcA,AvGKnC,AWnBmCA,ADcA,CgGHC,A7FAA,AsKRA,EnLgBE,CwGnBpC,AxGmBF,AWnBE,K6KOoCwQ,I9EIU1X,A7FAAA,AsKRAC,KKID,CLJO,CAACC,AKIJ,M9EIjD,A7FAA,IsKR6B,CAA7B,EAAkE;A/BWpE,ACCA,AFAA,AGAA,AIAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHC,AGGD,AIFC,ACGD,ANHAf,AGXC,APlCD,AC+CE7D,AKCE,ARDJ,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHKAnJ,AkBTE,AdAD,AIGD,AKFC,ACGD,APHAgN,AIXC,ATlCD,AC+CE7D,AOCE,AXDJ,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A2BCA,A+CAA,ADAA,AIDA,A7GRMqV,ADEJ,A3DEU,AkLIZ,AGAA,ADAA,AGVI,AhJWJ,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AGAA,ADAA,AkBCA,AnCDA,AHAA,AkLNY9T,ErFGV,ADGAvB,A9FHA,ADGAA,IqDRIqV,ADEA+B,AiIAM7V,CjIAL,C8CIC,AEGA9I,AhGHA,AGGAA,C4FDC4L,ADFAC,AJ7CA1H,A/E4CA,AVGAyH,ADFAC,AL7CA1H,CqDyCC,A4HJA,AKIM,CjFOZ,A7FAA,CVKQ,CkGNC,AlGMA1I,AGNA,APJMhC,CsGIL+N,AhFHA8T,AfGA9T,AgLVA3I,AKIM,ClFMpB,A9FAA,A+CNesf,C+CMC3X,A9FAAA,AgDRA,E0CQH,A/FAA,AqDRKoW,C0CQhB,A/FAA,AoDNQ,CAAU0B,E8CIpB,ArGQA,AORA,C+FEA,AtGMuB7f,AQNvB,A2KVU,AKImBklB,CjIAnB,A4HJc,C7EUC,ADFA9X,A7FEA,ADFAA,AgDJvB,C0CzCF,A/E4CS,AhB5CT,C+FA2BzO,A/FAAA,CsDoCE,CtCQAkI,AtBDM,CAACnL,E4LFE,CvFzCtC,A/E4CiC,AhB5CjC,AsLyCuCwC,CtKGLhC,AtBDf,CqG3CgByJ,A/FAAA,AN2CM,CIUzC,CwLZoB,CnFIpB,A9FAA,CPQuC7F,AJVpB,CqG3CnB,A/E4CS,AhB5CT,AsLyC8C,C5LECrE,CqG3CL,A/FAA,CgB4CC8K,CtBDxB,EAAiC,CAAjC,A4LFP,CxLYZ,AJVY,CsBCH,ClBWT,GkBXqD,KAAKqW,UAAxD,EAAoE,CiKP5D,CAAN;A/BWJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,AlEAE,AIFF,ACGA,ANHA,AJ9C4C,ACgD3C,AWCD,AdDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHOA,AkBXI,AVGF,AKFF,ACGA,APHA,AL9C4C,ACgD3C,AaCD,AjBDA,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRM8C,ADEJQ,A3DEO,AkLIT,AGAA,ADAA,AGVG,AhJWH,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLNS,EjIAPA,CAAC,CAACrc,C3DDI,A4LDA,ClFQF,A9FAA,AgDRA6b,A5DII,CqG5CuC,A/FAA,CoGgDzC,A9FAA,A+CNN,CsDOOlP,A3FJA,AFIAA,AuCPA,CCFC,CyCxC2C5T,A/FAAA,C+FAC,A/FAA,AsDwC1C,CqDSZ,A3FJaA,AFIb,ApBLgBtB,CiHKFsS,A3FJA,AFIAA,AuCPAkS,A3DEJ,CqG5C+C,A/FAA,C+FAb,A/FAA,AN4C1B,CsBCD,C+E7C2CljB,AYiD5D,A3GjD4DA,AciD5D,AuCPE,C0C1C2D,A/FAA,C2GiDzCmf,A7FAAA,AuCPA,E0C1C4CpW,AYiDhE,A3FJsBkX,AhB7C0ClX,AciDhE,EsFDwBwH,AOCA,ArGDAA,AQCA,CuCPCyS,E0C1C4C,A/FAA,C+FAC1jB,A/FAAA,EoGgDhE,A9FAA,C8FAJ,A9FAA,E8FA+B,A9FAA,CyFhDW,A/E6CxC,AhB7CwC,AqD0C1C,E0C1C4EU,A/E6C1CA,AhB7C0CA,C+FAC,A/E6C1C,AhB7C0C,E+FAnC,A/FAA,CoGgDJ,ApFHA,AVGA,CyFhD2C,A/FAA,GoGgDvCuQ,A9FAAA,CUHCyP,KoFGL,A9FAA,C8FAW7U,A9FAAA,IUH/C,GoFGoC,ApFHkBmV,AVGlB,C8FAP,A9FAA,IUH8B,CAACtgB,CAAC,EAAF,CAAL,GAAaiK,IAAI,CAACN,MAAM,EAAP,CAAjB;AkII1D,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,AlEAEiM,AKCF,AHdA,APpCqF,AMkDjF,AMAF,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AzGDEA,AMCF,AHdA,ATpCqF,AQkDjF,AMAF,AjBDF,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRQtU,ADEN,A3DEU,AkLIZ,AGAA,ADAA,A7ICA,ACHA,ACGA,AHJA,AFGA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLNQmM,ElFMNmI,A9FAAA,E0BHEkL,AsJHIrT,IvF3CiFzE,AMkDjF+M,ArGlDiF/M,AQkDjF+M,A8CTAzU,AgIEI,ChFPH2W,AKcAjH,AlGdAiH,AKcAjH,AuCPA,C+CMC,A9FAA,C8FAClS,A9FAAA,CgDRC,AgIEI,C3EOH,A7FAA,C6FAC8U,A7FAAA,AwCTAgR,ADEA9B,ArBGA,CoEGZ,A9FAA,C8FAc,ACCA,A/FDA,AECA,CwBJC,C+D9CkF,AYkD1F,A3GlD0F,AckD1F,AuCPA,CsDOU3D,A7FAAA,AuCPA,AiIAX,ClFMN,AEbF,ADcoB,A/FDlB,AGbF,ADcoB,C8FdCjH,APpCiFnP,AMkDjF+N,AMAZ,AlGdYoB,ATpCiFnP,AQkDjF+N,AMAZ,CsFDa3L,AOCpB,ArGDoBA,AQCpB,EuCPsB+X,E0C3CmF,A/FAA,AgC8CtE,C+D9CuEljB,A/FAAA,AgC8CtE,C+D9CqE,A/FAA,AqD2ClG,C+CMP,ALjDmF,AzFiDnF,ANjDmF,AqD2CnF,GiDPF,A7FAA,E6FAkC8X,ADc9B,A5Fd8BA,ADc9B,AwBJiC,EqEID,A7FAA,AwBJW,EsEV/C,A7FAA,E6FAwC,A7FAA,GuBUH,EAAmB/I,OAAnB,CAA2B9Q,OAAO,CAACwC,OAAR,CAAgBiH,KAAhB,CAAsB,CAAtB,EAAyB,CAAzB,CAA3B,IAA0D,CAAC,CAA/E,GAAmFqZ,YAAnF,GAAkGF,GAAG,CAACjhB,QAAvH;AkHIA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHA,AGGEmQ,AKCF,ANHA,AGXE,APrC8G/G,ACkDhH,AKCM,AMAL,AdDD,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHMA,AkBXI,AdCJ,AIGE+G,AMCF,APHA,AIXE,ATrC8G/G,ACkDhH,AOCM,AMAL,AjBDD,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GVY,ADIX,A3DEW,AkLIZ,AGAA,ADAA,AGVE,AhJWF,ACHA,ACGA,AHJA,AFGA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLNK,CjILL,C+CWE+G,A9FAAA,E6FFEU,AJhD4GzH,AjGyD5G3F,AOTAoN,ALhD4GzH,EiLwC1G,GhFOGsF,AKVA,ANaApC,AhFJAqU,AdCAjS,AOVA,ARaApC,CmGAC,ACCA,A/FDA,AECA,C4FDCpN,ACCAgO,A/FDAhO,AECAgO,EdLQ1O,AuLNNuL,ClFxC6G,A/FAA,CoGkDxH,ALlDyHjG,AzFkDzH,ANlDyHA,CoGkD3G,ADFA,AnFFZ,AVIY,ADFA,CgGGC,A7FAA,C6FACgI,A7FAAA,CyFJlB,AECmB,AGXApE,ApGUnB,AGCmB,AIXAA,AwKGb,ChFOcyD,AGGlB,AJAF,A9FHoBA,AIGlB,ALAF,C+FAqBoB,A/FAAA,CmGAChB,A9FAAA,C2FHtB,AnGUuB,AIVvB,C+KPwB,ChFOCoD,AF/CuF,ACkDhH,A9FHyBA,AF/CuF,ACkDhH,CqGbS,AxGoBiB,AWpBjB,CuFakB,A/FAA,CqGbChH,APrC4GyB,AjGyDxI,AWpB4BzB,ATrC4GyB,CoGkDtI,A9FAA,AZJiC,CAAClK,CuGCpC,A/FAA,CmGIU,A7FAA,CyFJuB0P,A/FAAA,CoGVxB,A7FAA,AfSU,AuLNjB,CvLMuC,CuGCzC,AKVoC,ADcA,AnGJpC,AOVoC,ADcA,AyKXA,C5EWC1B,A7FAAA,CyFJC,AF/C4G,A7F+C5G,AF/C4G,C+FACpJ,A/FAAA,AN8ChI,EAA4B7E,E2GKJ,A7FAA,C6FAC6M,A7FAAA,AdLzB,EAAiC,CAAjC,CAAP,CqG9C4H,A/FAA,I+FAyB,A/FAA,K+FAjD,AMmD3E,ArGnD2E,AQmD3E,C6FAsBa,A7FAAA,K6FArD,A7FAA,E6FA4D5H,A7FAAA,G6FAG,A7FAA,G6FAG,A7FAA,I6FAIuR,A7FAAA,0B6FAJ,A7FAA,E6FAN,A7FAA;A0IAlE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AGGA,AIFF,ALAExF,AGXEwH,APtCoKlP,ACmDtK,AKCI,ARDN,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,A7GJE,AIGA,AKFF,ANAE0H,AIXEwH,ATtCoKlP,ACmDtK,AOCI,AXDN,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7Gf6B,A5DWpB,AkLIT,AGAA,ADAA,AGVIuC,AhJWJ,ACHA,ACGA,ALDA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,E+FFEmF,A9FAAA,EmGAEuI,AFXAf,APtCoKlP,ApFiDpKiQ,AFXAf,ATtCoKlP,AiLyCpKuC,C3HLO,C0CeLY,A/FAAA,AgLVA,C7EUC2J,A9FAAA,AgDRAtP,E2CKEuE,A/FAAA,A+KPApB,CjFUC,A/FAA,AqDfC,C6CaA,AHEAkC,A3FFA,AJEAA,CgGHC,A/FAA,AoDLAvM,C2CKCmP,AOCA,ALAA9G,AEGAwI,AnGJA1B,ASCA,ANAA9G,AGGAwI,CuFpDqK,A/FAA,CsGsCnK,APtCoK1H,AtFsCpK,ATtCoKA,AiLyC/K,CzEQYd,AFXAwQ,A3FWAxQ,AFXAwQ,E6CKE,C2CKT,A/FAA,C+FAW,AGGlB,ADFkB,AGXhB,ApGUgB,AIGlB,ADFkB,AIXhB,CwFUiB3J,AECA,AGXA,ADcA,AnGJAA,AGCA,AIXA,ADcA,C6FAC1P,A7FAAA,A8CTA,C8CQC,AIFA,AlGEA,AKFA,A2CbZ,C2CYS,AOCI,AtGDJ,ASCI,A2CbpB,C0CeE,A/FAA,CoGCO,A7FAA,C4FDX,ALnDsK,AMoD7IgO,A/FDzB,ANnDsK,AQoD7IA,CyFJC0B,A/FAAA,C8FGC,A/FAA,CuGFN,ATjD2K,ACmDpKrC,ArFFP,AXjD2K,ACmDpKA,CgGHC,AOC/B,AtGD+B,ASC/B,E2FXiC,ADcpB,A5FdoB,ADcpB,CyFJqB,AFhDsI,ACmDtI,A9FHA,AFhDsI,ACmDtI,CgGHd,ADGeN,AKCAlH,AnGJf,ADGekH,AOCAlH,E2FHf,A9FAA,C4FDkB,AIIzB,AnGJyB,AMIzB,CyFJO,AIId,AnGJc,AMId,GyFJoC,A/FAA,C+FAC6J,A/FAAA,G+FAlC,A/FAA,E+FAuCD,A/FAAA,C8FGlB,A/FAA,C+FAoBnC,A/FAAA,IgGHI,A/FAA,C+FAC9M,A/FAAA,I8FGrD,A/FAA,EgGHO,ADGoD,A9FHpD,ADGoD,MgGHMiP,A/FAAA,M+FAjE,A/FAA;AgJIF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHC,AQIDrQ,ANLmB,AGTb,APvCkM,ACoDtM,AKCG,AMAL,AdDA,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AzHAA,AmICA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHMA,AkBZI,AdEH,AUIDA,APLmB,AITb,ATvCkM,ACoDtM,AOCG,AMAL,AjBDA,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRG,ADEH,A3DEK,AkLIL,AGAA,ADAA,AGVIyL,AhJWJ,ACHA,ACGA,AHJA,AFGA,ACCA,AbDA,AzBAA,AuJDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPI8D,CnFGJ,A9FAA,C4FCE,A/FAA,AoLJEA,ChIZK,C2HSL9D,C3HECwO,CmDSC,ATDAhM,ApFCA,AXDAA,AqLPE,C7EQDhO,A7FAAA,CmFrDqM,A/FAA,C2GqDnMihB,A7GMA9b,AkBZA2c,AFMAb,AwCpBA,ADaA2D,CiDPCjL,ANaA,AvFbAA,ARaA,AqDRA,A2HFA,AKGE,CtFODpM,A/FAAA,EgLVE,CxEWb,AHdc,A1Fcd,AHdc,AwKGV,C3EHW6L,A7FAAA,EgGcEwG,A7FAAA,CyCPjB,C0C9CuN/U,A/FAAA,AqD8CnM4Z,CsDOpB,A7FAA,AwCToBzF,CgDLN,AKcOkC,A3FNjB,APRU,AKcOA,CwFdf,AxGoBN,AWpBM,A4CON,CvDauB9b,AwDfb,CgDLc,AtFQA,APRA,A4COC,C2CMnB,AhFLF,AfKE,AqDRmB,CmDSzB,A7FAA,E+FAA,A7FAA,CiFrDwM,ACoD3K,AhGpD2K,ACoD3K,C+FAC4I,AWCA,A1GDAA,AaCA,AwKR1B,CvF7C+NnD,AjG2DnO,AE3DmOA,EF2DlM,CkGPC,A/FAA,C+FAC0C,A/FAAA,M8FpD0M,A/FAA,C+FAChD,A/FAAA,OgGoDhN,A/FAA,C8FpDqM,ACoDjL0D,AhGpDiL,ACoDjLA,G8FpDuM,A/FAA,I+FAtB,A/FAA,EgGoDjO,A/FAA,E+FA2D,A/FAA;AiJC7D,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,AlEAE,AIFF,ALAA,AGXQ9E,APxCuPlF,ACqD7P+J,AWCA,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHME,AkBZC,AVKD,AKFF,ANAA,AIXQ7E,ATxCuPlF,ACqD7P+J,AaCA,AjBDF,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRI,ADEF,A3DID,AkLED,AGAA,ADAA,AGVIkX,AhJWJ,ACHA,ACGA,ALDA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPI5V,EtFOFtB,A/FAAA,AqLPEsB,E9EKAyL,ATnD2P9W,ApFmD3P8W,AXnD2P9W,AiL2C3PihB,E7EUElY,AJAA,AWCA,A7GMA,AQPAA,ALAA,AaCA,AwKRE,CtFODjK,AWCAme,A1GDAne,AaCAme,CwFdC/X,A7FAAA,AwKGA,CzEQR,A7FAA,CoFnDqQ,A/FAA,AsL8CzP,CvF9C0P7D,ACqDpQ,AhGrDoQA,ACqDpQ,AqDRS4F,ADEAka,A4HJAtY,CjFUC,A/FAA,CmGAV,AtGOW1H,AQPX,CqGCY,A7FAA,AmKXA,C7EUC,AEbA,AKcAjE,ArGDA,AGbA,AKcAA,AmKXAA,C3EHCqY,A7FAAA,A6KMZ,ChIDa,CAAC3G,ADEhB,C2CMA,A/FAA,AoDNkB/G,EsDOlB,A7GMI,AgBNJ,AmKXE,C3HEO,CqDSY,A7FAA,AwCTAkT,ADErB,E0C/C6P,A/FAA,AqD+CrO,C0C/C2Ppb,AjG4D3P,AE5D2PA,AsD6C1Q,CAAP,GqDS0BpB,A7FAAA,EwFdE,APxC+N,AtFwC/N,ATxC+N,CsGwC9NuC,A7FAAA,CsFxC4P8F,AYsDtQ,A3GtDsQA,AcsDtQ,EhBMrB,EAAoC,IwGpBN,A7FAA,E6FAY,APxC2P,AtFwC3P,ATxC2P,C+FACxC,A/FAAA,GsGwCxQ,APxC+N,AtFwC/N,ATxC+N,CsGwChP,A7FAA,C6FAP,APxCqSwC,AtFwCrS,ATxCqSA,U+FA9C,A/FAA;AkJsD/P,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AvDCA,AZDA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,AlEAI,AKCJ,AHdQ,APzCmT,ACsD1T,AKCG,AMAF,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,AxHCA,AFAA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ACAA,APAA,AlBAA,AFDA,ADCA,AjHMI,AQPA,AMCJ,AHdQ,ATzCmT,ACsD1T,AOCG,AMAF,AjBDF,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRG,ADEC,AuHMJ,AGAA,ADAA,AGVG,AhJWH,ACHA,ACGA,AHLA,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPIiB,EAAAA,ChIdK,A2HOP,CxEeEmH,A7FAAA,A0CtBF,AtBiBEb,E2EKE,A7FAA,AwKRE,CAACgY,ClFODpd,ACCAzC,A/FDAyC,AECAzC,CyKXC,CnLiBC,AkCXV,CqBFWqZ,EsDOE1C,A7FAAA,AmKXA,CnLiBC7b,AuDbA,AiIDV,ClFOW,A9FAA,A+CNAof,AiIDEsF,ClFODnS,ACCA,A/FDAA,AECA,EiGAE,A7FAA,AyCPJ,CAAH,CgDOS,AMAA,AnGAA,AMAA,AuCPAqK,A4HJAiD,AKGhB,C7EQiB1b,AJAAkP,AMAAwI,A/FAA1X,AJAAkP,AMAAwI,AwKREjX,ExLcb,CsGPF,AtGOgB,AQPhB,A2KVK,E5HIF,CAAgB6B,CoDOC,AEAA,A/FAA,AEAA,AwKRxB,ClFOyB,AKCA,AEAA3K,ArGDA,AMCA,AEAAA,AmKXA,AKGE,EjICpB,EAAsB+gB,C+CM7B,ACCA,A/FDA,AECA,CmGAiB,A7FAA,CsFDe,ACCA,A/FDA,AECA,EmGAE,A7FAA,C6FAlB,A7FAA,AuCPT,A4HJF,AKGsBmI,C7EQH,AEAtB,A/FAsB,AEAtB,CsFDmCzS,AKCpB,AnGDoBA,AMCpB,AyCPjB,A4HJqC,CxEWCxI,A7FAAA,E0KRN,C3EQS,A7FAA,CwKRL,C7EQxC,A7FAA,EwFDoC,A9FAA,G8FAgB,A9FAA,GqGClD,A7FAA,EsFDkC,AOCqB,ArGDrB,AQCqB,O6FAO5M,A7FAAA,I6FAP,A7FAA,yBhBMoC,OAAO4C,QAA1F,CAAN;AoJNJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHA,AGGI,AIFJ,ACEA,ANFA,AGXO,AP1CsT,AMwDvT,AMAJ,AdDF,ArGDA,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMG,AkBbD,AdGF,AIGI,AKFJ,ACEA,APFA,AIXO,AT1CsT,AQwDvT,AMAJ,AjBDF,A4HCA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRC,ADEE,A3DGH,AkLGA,AGAA,ADAA,AGVIgI,AhJWJ,ACHA,ACGA,AHLA,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPQkC,I9EKJwL,ACGA3H,A9FHA2H,ACGA3H,AqKXA/F,AKGIkC,ELHF,E7EUEtC,A9FAAA,AgLPI,CrFIHuD,AUIA2Q,A3FPA1V,AdGA+E,AYIA2Q,ApBJAtgB,AuLPAskB,C5EWC,A7FAA,C6FACvW,A7FAAA,C8KRK,C9EKH,A7FAA,AsKRT,E7EUW,ApFNA,AVMA,C8FACpE,AOCA,ArGDAA,AQCA,CmFJhB,AOCiBuQ,AHGA,AMAA9R,AzGJjB,ASCiB8R,AHGA,AMAA9R,CmFJC4D,AIIAc,ArFPA5B,AdGAc,AMIAc,EmGAT,A7FAA,CmFJT,A/FAA,AoLJyB2c,C3EQvB,A3FPoB,AFOpB,CmFJqBja,AjFHAjP,AdGAiP,CkGGf,A9FAA,AZHR,CAAyBvP,C8GCC,A7FAA,A2KLI,C9EKHma,A7FAAA,A2KLI7X,ErFI/B,AGG6B,ApFN3B,AdGF,AIG6B,CmGCC,A7FAA,CqFJCqN,AjFHA2R,AdGA3R,ARA/B,A4LJgB,CjFQN,A7FAA,CiGAuByC,A7FAAA,AlBJA,C0GG7B,A9FAA,AgLPkC,C9EKtC,A7FAA,CyFEoC,ACCA,ArFPA,AVMA,AECA,CgGHC,AHGAtE,ArFPA,ALIA,AHGAA,EyFJrC,A/FAA,E+FAyC,AGGApE,AlGHA,AIGAA,CUNCuX,CqFOC,A7FAA,C6FACpU,A7FAAA,A8KR5B,G7EQ+B,A7FAA,A0KRI2c,C7EQHlX,A7FAAA,CwFDZ,A9FAA,G8FAgB,A9FAA,AgLPI,CAAChN,CtKCpB,EAAD,CoFMA,ApFNL,AVMK,AgLPpB,CjFQqB,A7FAA,C6FAsBiI,A7FAAA,CQPCtC,AsKDI,IjFQ1D,ArFP0D,ARO1D,CQP2DN,CqFOChF,A7FAAA,C8KR1D,EjFQ6D,A7FAA,EQPE,CqFOC,A7FAA,CQPR,CyFMhE,AzFN+B,AJM/B,CInBsD,CqFoBsBuR,ArFL1E,ARK0EA,0B6FAJ,A7FAA,E6FAN,A7FAA;A0IAlE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AWAA,AyBDA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AOCAgD,ACCF,ATCA,AKCM,AMAL,AnHFD,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMC,AIVC,ASCAA,ACCF,AXCA,AOCM,AMAL,A2GAD,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,AzKHI,AkLGJ,AGAA,ADAA,AGVImK,AhJWJ,ACHA,ACGA,ALDA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPK,E9EKHnK,A7FAAA,C2KPE,C7EUA3H,A7FAAA,AqKXA8R,EhFOE1U,A/FAAA,ARAEtQ,C8GCD,A7FAA,CsKRC,CjFUCgO,A/FAAA,CuGFC4M,A7FAAA,CsKRChO,E5EWEkF,A7FAAA,CyFJC,A/FAA,A+KPA,CAAC7Q,GjFUf,A/FAA,CgGHmB4D,AOCA,AtGDAA,ASCA,C6FACiW,A7FAAA,CqFEC,AKCA,ApGDA,AOCA,AyKXV,C5EWWra,A7FAAA,EdJI,AuLPF6K,CxEWC,A7FAA,CyFAZ,A7FAA,C6FAcmD,A7FAAA,CyFJrB,AOCI,ACGkBsE,AvGJtB,ASCI,ACGkBA,C4FHC,A7FAA,AjBDEzS,CuLP3B,EhFO4BgQ,A/FAAA,CmGInB,A7FAA,E6FAsBhK,A7FAAA,EgGHzB,A7FAA,C6FAR,AHGW,A1FHX,AHGW,C6FAP,A7FAA,CyFJkC,A/FAA,CRApC,C+GIsC,A7FAA,CqFJCoG,AQIAwG,AvGJAxG,AUIAwG,AlBJE,GuGAC,A/FAA,C+FACjS,A/FAAA,M+FA7C,A/FAA,E+FAqD,A/FAA,SuGEvD,A7FAA;AsIEA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHIqP,AGGA,AIFH,ACAD,ANAA,AGXMmJ,AP1CN,ACuDE,AKCG,A7GFL,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,A7GJInJ,AIGA,AKFH,ACAD,APAA,AIXMmJ,AT1CN,ACuDE,AOCG,AiHAL,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRA,ADCE,A3DIM,AkLGR,AGAA,ADAA,AGVG,AhJWH,ACHA,ACGA,AHLA/H,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,AHAA,AkLPItC,C9EGJ,A7FAA,C2KHIA,CLNK,ChFULkB,AQIAqP,ANHArN,AjGDAhC,AUIAqP,APHArN,EiGXEmH,ANaA,AvFbAA,ARaA,AqLPE,C9EKD,A7FAA,CyFEC3M,A9FAAA,A0BJA,C+DnDClC,A/FAAA,AsD+CAkc,A2HFA,AjJMA3U,CmEEC,AGXA,AjGWA,AIXA,A6KME,ChFNDiH,ANaA/L,AvFbA+L,ARaA/L,AoDPA8X,C4CIC,A/FAA,CiGCC7b,A9FAAA,A4KRA,EhFOEoD,AGGA,AlGHAA,AIGA,C8FAC+K,A9FAAA,CgLPZ,CrFIc,A/FAA,C+FACxW,A/FAAA,CiGCC,A9FAA,A4KRAiM,C9EQC,AJrDrB,A1FqDqB,ALrDrB,AqDgDE,C0ChDoB1C,A/FAAA,AqDgDCoB,A4HHV,AjJMb,CsBJA,CAAyBsO,C2CKrB,AKVM,ANaR,A9FHE,AOVM,ARaR,A+BJuB/H,CsETnB,A7FAA,A4CMJ,CiDNyBlJ,ANaA,AvFbAA,ARaA,AgLVA,C5HGE,C+COrB,A9FAA,EgDRR,EyC/CA,A/FAA,AsD+CkC6I,C8CQA,AEb5B,AhGa4B,AGb5B,CsF1C6BjH,A/FAAA,CsG0CC3B,A7FAAA,CwKG3B,CxEW6B,A7FAA,AoBLtC,CoEII,A9FAA,A2KVmC,E7EUE,AKCA6J,AnGDA,AMCAA,A0CTzC,CgDLM,A7FAA,C6CKsC,EyC/C5C,A/FAA,E+FA+CjI,A/FAAA,CmGqD3B,A9FAA,C8FApB,A9FAA,MoGGuD,A7FAA,C6FAC6U,A7FAAA,EmFxDxD,A/FAA,E+FA4D,A/FAA,8ByGqD5D,A7FAA;AsIGA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGG,AIFJ9E,ACDF,ANCA,AGXK,AP3CyD,ACwD1D,AKCD,AMAH,AnHFA,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMA9W,AkBbE,AdGC,AIGG,AKFJ8W,ACDF,APCA,AIXK,AT3CyD,ACwD1D,AOCD,AMAH,A2GAA,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GREX,ADCE,A3DII,AkLGR,AGAA,ADAA,AGVI,AhJWJ,ACHA,ACGA,AHJA,AFGA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KPI9K,E9EKFyL,A7FAAA,A2CNAX,AgICE9K,CjFJF,A7FAA,CiGYEwQ,A7FAAA,C0FrBA,A7FAA,CsFpC8D/U,AjG+D5D,AE/D4DA,AsLiD1D,C9EKD,AFXA3B,AxGoBA9D,AkBbA,ALIA,AFXA8D,EuFaEmE,AWCA4T,A1GDA5T,AaCA4T,AwCTA,CkDMC,A7FAA,A2CNAnH,A2HFA,AKGE,ClFODrC,ApFNA0K,AVMA1K,A+CPA,A3DIInX,CsBHH,CsFdR,A7FAA,C6CYF,A2HFY6E,CjKIC,AsCFA,ADCAse,C0CjD+C,A/EkDvD,AhBlDuD,C2GyD9D,A7FAA,CiFzD8EhZ,A/EkD5D2X,AhBlD4D3X,AsLiD1E,C9EKeoQ,A7FAAA,CgGGC,A7FAA,ChBMpB,CAAsBnW,CkGPlB,AhFNmB,AfMnB,APHuB,AuLPjB,C7EUJ,AIFI,AREc4I,A1FAlB,AKFI,AVEcA,AoDPb,A3DIiB3M,AuLPJ,C3HECiU,CtCEChJ,CoFMC,AIFA,AlGEA,AKFA,A0CLAmW,CmDKE,A7FAA,A2CNd,CkDMb,A7FAA,CKJ4B,AsCFA,A5DKH,C+GII,AzFPA9gB,AJOA,AlBJvB,C0GGF,A9FAA,C0FAF,A/FAA,AoDPO,CoDQuB8R,A3GMlC,AcNkCA,AyCRAnH,C0CjD6D,A/FAA,C+FACpB,ACwD5D,AlGOA,AE/D4DA,ACwD5D,CeNV,CqCDf,ErCC6B,AqCDAwX,C2COpC,AhFNF,AfME,EeNuCI,GqCDhC,C0CjDgG,A/FAA,CyGyD3D,AVzD4DrgB,A/EkD5D,AJOA,AZzD4DA,AqDiDxG,CoDQ6C6d,A7FAAA,EIPE,CAAjD,EAAoD,EAAEuC,C+ElDuC,AjG+D/F,AkBbE,AhBlD6F,CiL8CrF,ClF9C6GtX,AjG+D5D,AkBbA,AhBlD4DA,AiL8CnH,UlF9C2F,A/FAA,C+FAjB,A/FAA,MyGqD9E,A7FAA;AsIIA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,AlEAM,AIFL,AFXE,AP5CiI,ACyDhI,AWCF,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMExF,AkBbE,AVME,AKFL,AFXE,AT5CiI,ACyDhI,AaCF,A2GAF,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRIzF,ADCD,A3DIE,AkLGL,AGAA,ADAA,AGVG,AhJWH,ACHA,ACGA,ALDA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNIgpB,ExLaFvjB,AwLbEujB,ChFhBF,A7FAA,Afe+B,C4DD7BhpB,A5DMA,EqGvDoIkL,A/FAAA,AsLmDhI,C3EOD,A7FAA,AwKPEoe,EtFMA7b,AhFNAwU,AfMAxU,EmGAE5K,AOCAsV,ArGDAtV,AQCAsV,AwCTA,CxDeC,AwDfAxW,ExDeE,CsGPR,AOCS,ArGDT,AQCS,CsFDC,ApFNZ,AVMY,AgLNZ,CvFnDgI,A/EmDnH4gB,AhBnDmH,C2G0DlHzgB,A7GKyC,AkBZvD,AFOcA,CiF1DmI+I,A/FAAA,AsLmDhI2E,ChIFjB,C8CQE,A9FAA,AgDRe,E8CQEuI,AJAnB,AhFNmByK,AVMAzK,ALAnB,AqLNA,CtFMoB1J,A/FAAA,G0GCG,A7FAA,CsFDrB,AOCsBhN,A3FPxB,AVME,AQCsBA,GkFDxB,A/FAA,EqDR6B,C0CQC,AWC3B,A1GD2B,AaC3B,EiF1D+J,AY0DlI+f,A3G1DkI,Ac0DlIA,CiF1DmIxW,A/FAAA,EgGyDnK,A/FAA,I0GCuC,A7FAA,G6FAG,A7FAA,EiF1DwH,A/FAA,E+FAcM,AY0DlIrJ,A3G1DkIqJ,Ac0DlIrJ,K6FAJ,A7FAA,C6FAUsW,A7FAAA,I6FAV,A7FAA,CiF1DwH,AY0D/J,A3G1D+J,Ac0D/J,CiF1D8I,A/FAA,C2G0DtFC,A7FAAA,I6FAI,A7FAA,G6FAG,A7FAA,C6FApE,A7FAA,E6FAuEA,A7FAAA,I6FAI,A7FAA,G6FAGD,A7FAAA,I6FA9E,A7FAA,E6FAoFC,A7FAAA,I6FAI,A7FAA,E6FAxF,A7FAA,E6FA4F,A7FAA;AoIA9F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AGGG,AIFL,ACGA,AHdC,AP7CiM,AC0D9L,AKCF,AMAEgJ,AnHFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHME1b,AkBbE8c,AdGF,AIGG,AKFL,ACGA,AHdC,AT7CiM,AC0D9L,AOCF,AMAEpB,A2GAJ,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRMlP,AsHQN,AGAA,ADAA,A7ICA,ACHA,ACGA,AHLA,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNIwW,ExLaFhjB,AwLbEgjB,E7EOApW,AEAA8O,A3FPAoB,AJOAlQ,AEAA8O,AkBLA2B,ClCWC,CuGNC/J,A7FAAA,A8CTA9G,CxDeC,CkCXC,AsJFE,CrFGDpF,AFvDgMlC,AC0DhM6C,AhFNA,AdGAX,AFvDgMlC,AC0DhM6C,AqLNE+c,C7EOD,A7FAA,C+FAC,A7FAA,AkBLArmB,CiECC,AUIAiU,A3FPC,AdGD,AYIAA,CmFJCzH,AQIAjH,AvGJAiH,AUIAjH,C0CTC,C+CSC,A7FAA,A8CTA,CqDSJ,A7FAA,C6FAP,A3FPcuY,AFOd,AkBLa,CqEKC,A7FAA,AwBLAlc,ClCWA,AwDfJ,CmDSM,AV3D8K,AY2D9KjE,A/FAA,AZ3D8K,Ac2D9KA,AwKPhB,C7EOiB,A7FAA,A0CTAkT,AgIEEgU,CrFGd,A/FAA,C+FActY,ADGnB,A9FHmBA,ADGnB,C+FAoBpC,AhFNX,AfMWA,AqDRV,AtBIH,ChBFeiU,AsCFpB,AtBImB7Y,AsJFrB,CtKAS,CqFOcsP,A7FAAA,EwFDvB,AWCyB,A1GDzB,AaCyB,C6FACZ,A3FPC,AFODA,CmFJC,A/FAA,C8FGC,A/FAA,A+BJA,CAAC,CiECC9H,AUIL,AzGJKA,AYIL,C6FAzB,A7FAA,CuFAc,A7FAA,CwFDd,A/FAA,EwGCgB,AJAmB,AzFAnB,AJAmB,CyFJC,AQIxC,AvGJwC,AUIxC,CqFJyCjP,A/FAAA,CcH7B,GAAmC,CAA3C,CiFGK,A/FAA,A8BDuB,CAArB,CiECsCqP,A/FAAA,A8BDjD,QiECS,A/FAA,M+FAsDJ,A/FAAA,M+FA7D,A/FAA;AgJIF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHC,AGGE,ADFH,AJzDuN,AC2DnN,AKCAzB,AMAD,AnHFH,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMI,AkBbA,AdGH,AIGE,ADFH,ALzDuN,AC2DnN,AOCAA,AMAD,A2GAH,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRK,ADCH,AuHOF,AGAA,ADAA,AGXE+Y,AhJYF,ACHA,ACGA,AHLA7E,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNC,ErFGC,A/FAA,A+KRA6E,E9ESExc,AEGAyD,AhGHAzD,AGGAyD,AwBLA,CsBNA,AtBMC2S,CqBHCmD,ErCCEnC,CgFMC/U,A/FAAA,AoDPA,C8CKC,AEGA,AhGHA,AGGA,C6FACwL,AvGMA7T,AUNA6T,E2FHEvP,AnFJA,AXIAA,A2BFb,CqEKI,A7FAA,A6CRU,A4HJA,C5EYC/G,A7FAAA,AyKZA+I,CjKKC,AgBEAhC,CqEKZ,ArFPA,AROA,C6FAc,A7FAA,CQPC,CmFIC,A9FAA,C8FAC,A9FAA,A4KTP,C5HIR,C2COF,A/FAA,AgLXmBsD,AjJOA,CgEICuB,AhFNA0T,AfMA1T,A+BJA,EqEKpB,A7FAA,A6CRsBoW,A4HJA,CAACtjB,C5EYCsX,A7FAAA,C2FHR,A9FAA,AgDLS,C8CKhB,ArGST,AOTS,C8FAkBvN,AnFJZ,AXIYA,CWJCmX,CAAb,AiKLL,CjFWV,A/FAA,AoDP8B,A4HJhC,AjJOqB,CAAvB,CqEKI,A7FAA,C2FHJ,AHEqC,A3FFrC,AJEqC,CeNC,IgFMlC,A/FAA,GoDPF,EAA6C,MrCCMC,CqCDC+C,IrCCnC,MqCD4B;A6FQ/C,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,AlEAC,AKCD7b,AHdA,ANaG,AKCA,A7GFH,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMG,AkBbA,AVMF,AMCDA,AHdA,ARaG,AOCA,AiHAH,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRG,ADCD,A3DGE,AkLIJ,AGAA,ADAA,AGXEme,AhJYF,ACHA,ACGA,AHLA,AFIA,ACCA,AbDA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,E0KXEA,C5EUA,AvGIyD,AUJzD,A8CXA,CgDDE1N,A7FAAA,C6CKC,CDCCwK,A3DGE,C+GKD,A7FAA,AlBLEvkB,C+GKD,A7FAA,CyCRC,G4HJG,CAACglB,C5HIC,CCDC3kB,CAAV,C2HHO,CxEYL,A7FAA,A0CTW,CmDSlB,A7FAA,AyCRE,A4HJiBiL,CxEYCoU,A7FAAA,CyCRC,I3DGM,AuLPf,C3EFc,A7FAA,CwKEC9S,C5HIC4W,CoDQ5B,AHd6Bzf,A1Fc7B,AHd6BA,CfSG5D,AuLPF,CxEYC+R,A7FAAA,AyCRV,A4HJUjR,I3EFI,A7FAA,C6FACyE,A7FAAA,CgGcpC,A7FAA,AqKZY,CAAV,WvLOO,C4GToB,A7FAA,C6FAsB,A7FAA,EfSI,CAAC1F,S4GTO,A7FAA,C6FAE,A7FAA,C6FApC,A7FAA,C6FA7B,A7FAA,MfSQ,KAAuEM,YAA3E,EAAyF;AwJK7F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,A9DFA,ALAA,AGXA,AP9CA,AY4DE,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMEiF,AaTF,ANAA,AIXA,AT9CA,Ac4DE,A2GAF,AQAA,ANAA,ACAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRI3F,ADCF,A3DGMI,AkLIR,AGAA,ADAA,AGXE,AhJYF,ACHA,ACGA,ALDA,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNA,ExLaEuF,E0GTEgG,ALAAgH,AGXAyH,AP9CAjP,ApFyDAQ,ANAAgH,AIXAyH,AT9CAjP,AsDmDAnL,A5DIII,CIWH,C6GNC8R,A7FAAA,ChBMC,EuDdEoT,A4HJA2C,AKKAwC,EhIFE,CyCnDC,A/FAA,AsDmDA9oB,EkDME,AGGA,AhGHA,AGGA,CiF5DC+H,A/FAAA,CqDoDb,CmDKeA,ALAA,AQGAyX,A7GMDvb,AaTC8D,ANAA,ASGAyX,EmKZE,C9ESCvO,ArGSb,AOTaA,AiDNhB,A2HHgB5F,C3HGC,AgIErB,CvFrDsB,AjGkED,AElEC,ANuDI,A4LFJhB,CvFrDC,A/FAA,AiLgDJ,CzESK,A7FAA,C6FAC,A7FAA,AjBFItL,AuLPJgL,C9ESC,A9FAA,AiLJ1B,CnFI2BmH,A9FAAA,CsGGC,A7FAA,AwKPA,C3EOCuO,A7FAAA,EiF5DP,A/FAA,AiLgDH,ClFhDnB,A/FAA,CsDmDiC,A2HHAgE,GtEYL,A7FAA,CqFHR,AQGlB,AtGHkB,ASGlB,ApBLM,AuLPW,EAAoB9X,C3EFC,A7FAA,C0FWC,A9FAA,A4KTtB,CAAjB,C3EFyCnJ,A7FAAA,M6FAM,A7FAA,C6FACkW,A7FAAA,G0FWG,A9FAA,C8FAE,A9FAA,C8FAvD,A9FAA,EmGAwB,A7FAA,C6FAxB,A7FAA,M2FX2C,A7FAA,E6FAuBnB,A7FAAA,qB6FAqB,A7FAA,G6FAG,A7FAA;AyIc1F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHA,AGGA/U,AKCA,AHdE,AP/CF,AC4DE,AKCA,AMAA,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMI,AkBbF,AdGF,AIGAA,AMCA,AHdE,AT/CF,AC4DE,AOCA,AMAA,A2GAF,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRM+N,ADCL,A3DGO,AkLIR,AGAA,ADAA,AGXC,AhJYD,ACHA,ACGA,AHLA,AFIA,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNI,IvFrDA9G,A/FAAA,EoG2DE,AEbAyD,ANaA,AKCAwJ,AMAAxW,ArGDA,AGbAgN,ARaA,AOCAwJ,AMAAxW,AwCTAqQ,AgIEE8W,ClFMDxjB,A9FAAA,CROC,CmGVCoL,AQIAqP,AzFPA,AdGArP,AUIAqP,CmF5DC,A/FAA,AsLqDE,CtFMDrS,AWCA,A1GDAA,AaCA,ApBLIlN,C4GTb,AKcUyP,AlGdV,AKcUA,CiF5DChF,A/EqDX,AhBrDWA,AsLqDEwd,ChIFD,CgDLC,ADcA,AvGMA/iB,AWpBA,ADcA,A8CTAnF,C+CSCoO,A7FAAA,A8CTF,C2CKd,A/FAA,AoDLM,C2CKY/B,AnGUV,AIVUA,CyGIZ,A7FAA,C6FAcsU,A7FAAA,CmFJpB,AGGA,AL3DqB,A7FwDrB,AIGA,AN3DqB,AsLqDE,ClFMD9O,AL3DAlH,AM4DP,A/FDOkH,AN3DAlH,AQ4DP,A8KPS6d,CrFGD3Y,AQIvB,AJAE,AvGMqB,AIVAA,AUIvB,AJAE,AdLyB,C+GKH7J,A7FAAA,AlBLI1F,CsGI1B,AKCuB,ApGDvB,AOCuB,CiGAzB,A7FAA,CoFD2B,AWCA,A1GDA,AaCA,CsFDC,AKCAiL,AV7D5B,AY6D4B,ArGDA,AMCAA,AZ7D5B,Ac6D4B,CmFJ5B,AGG6B7J,AOCF,AzGJ3B,AIG6BA,AQCF,C6FArB,A7FAA,ApBLqB,CuGCI0O,AUI7B,A7GMM,AIVuBA,AYI7B,ApBLM,C+GKR,A7FAA,C+FAiCuQ,A7FAAA,C2FAC,A7FAA,CdMCxb,AwLbpB,CrFGf,A/FAA,AoLHsC,ErFGA,AGGtC,AtGOsC,AIVA,AIGtC,E8FAwC,AOCA,ArGDA,AQCA,ChBMC,AwLb1B,CxLaP,AwLbJ,C3EOuCwb,A7FAAA,GhBMG1c,I6GNI,A7FAA,C6FAC,A7FAA,C6FAD,A7FAA,C6FAjB,A7FAA,IhBMwB,CAACkB,GAAD,CAArD,CsGPJ,A9FAA,CROgE,CsGPC,A9FAA;A4ICjE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AGGA,AIFF,ACGE,ANHF,AGXI,ANaA,AKCAiJ,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMM,AkBbL,AdGC,AIGA,AKFF,ACGE,APHF,AIXI,ARaA,AOCAA,AiHAJ,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRK,A5DIA,AkLIL,AGAA,ADAA,A7ICA,ACHA,ACGA,ALDA,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNIma,CtKvBJ,CsKuBIA,E9EIA9V,AHGArE,A1FHAqE,AHGArE,C8CXA,C2COE,AQIAqR,AvGJA,AUIAA,A0KPE,CAACgJ,C7EOD,A7FAA,CuFHCpW,AHEAlF,A3FFAkF,AJEAlF,CoGCC,A7FAA,CiGAC,AHdA,ADcAjL,AzFAA,AHdA,ADcAA,CVMC,CmGVCkO,AIIT,AnGJSA,AMIT,C6FAU,A7FAA,CgGHC,A7FAA,C8FGCsP,AHdA1G,AxGoBA5T,AcNAsa,AHdA1G,EwFUV,AOCY/P,AtGDZ,ASCYA,C2KJd,CAAkB,GrFGC,AKVZ,ANaP,A9FHmB,AOVZ,ARaP,CqGbA,ANaoBgE,AKCpB,A5FdA,ARaoBA,AOCpB,CgGHqB,A7FAA,C6FAC,AHGAiL,AvGMd,AaTc,AHGAA,CVMC,AwLbvB,CnFIJ,A9FAA,C8FA6B3G,A9FAAA,AiLJE,ErFG7B,AQIA,AvGJA,AUIA,EqFJ+B,ADG7B,A9FH6B,ADG7B,CkGFJ,AEGI,AhGHJ,AGGI,E2FHgC,AHEA,A3FFA,AJEA,K+FAhC,A/FAA,SqLNA,I9EIqB,A7FAA,C6FAzB,A7FAA,wEbS+HpM,GAApG,GAA0G,GAAzH,CAAN;AoJNN,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHIiL,AGGF,AKCAqP,ANHA,AGXC,AP9CH,AC2DI,AKCArR,AMAF,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHMK,AIVDgC,AIGF,AMCAqP,APHA,AIXC,AT9CH,AC2DI,AOCArR,AMAF,A2GAF,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRG,ADCH,AuHOA,AGAA,ADAA,AGXA,AhJYA,ACHA,ACGA,AHNA,AFKA,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNI,E7EOFqR,A7FAAA,C0FjBwF,A7FAA,A6CAxF,C2CaErP,AQIA,AV5DAxF,AM4DAwD,AnGJAgC,AUIA,AZ5DAxF,AQ4DAwD,AwBNA2D,CyEMC4N,A7FAAA,C+FACgB,A7FAAA,AwKPE5R,GrFGC,AECApE,AHEAwC,A9FHA,AGCAxC,AJEAwC,AoDPA4X,A4HJAyC,C5EYC,A7FAA,A8KPE,CjFODtlB,A7FAAA,CyFJC,A/FAA,C+FAR,AFxDS,AM4DT,AMAS,AzGJT,AFxDS,AQ4DT,AMAS,AwKPE,CjFOD,AMAAtB,AnGAA,AMAAA,CqFHC,A9FAA,AgDLf,AiICI,CnFIY0R,AJzDArJ,A1FyDAqJ,ALzDArJ,AqDoDC+b,ArBED,CyEMd,A7FAA,EqKZF,AjJMmB,CyEMC,ANHX,AQGH,A/FAc,APHX,ASGH,AmKZezY,C9ESAgF,AEGjB,AhGHiBA,AGGjB,EuF5DmB,AC2DnB,AKCmB+G,AMAA,A3G5DA,AC2DnB,AOCmBA,AMAA,AmKZvB,ClFhDwB,AC2DAzK,AWCtB,A3G5DsB,AC2DAA,AaCtB,AuCRF,CoDQE,A7FAA,AqKZwB5C,C9ESjB,AQGiB,AtGHjB,ASGiB,AuCRCga,C8CKzB,A9FAA,E2FEE,A/FAA,C8F3DmB,AM4DnB,ArG5DmB,AQ4DnB,A6CRJ,C0CpDA,A/FAA,AiLgDA,CjFWgC,A/FAA,AoDPCpC,C4HJC8B,IjFW9B,A/FAA,AgLXJ,EAAwC9X,EAAxC,C5HIA,C4HJ4C,C5HICiW,MAA7C,EAAqDnB,MAArD,EAA6D;A6FQ7D,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGD,AIFF,ACGE,ANHD,AJ1DD,AC4DI,AKCA,AMAA,AnHFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,A/FPAR,AdGG,AIGD,AKFF,ACGE,APHD,AL1DD,AC4DI,AOCA,AMAA,A2GAJ,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GRC,ADCCmC,A3DEE,AkLKJ,AGAA,ADAA,AGXE,AhJYF,ACHA,ACGA,AHNEtR,AFKF,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNIjD,EjIDFuU,ArBEAtR,AsJDEjD,E9EIArE,ATzDAG,ApFyDAH,AXzDAG,EyG4DEgC,A7FAAA,AlBNE,A4LDA,E7EOA,AJAAuB,ArFPA,AJOA,AJAAA,CwFDCjB,AhFNAzL,AfMAyL,C0GCC,A7FAA,AwKPE,C7EODsS,AV5DA,AnF4DAA,AZ5DA,AgCsDA,CwEGC,A7FAA,AsKTW,CxEYV,A7FAA,AoBNAxW,CyEMC6K,AV5DAlJ,AM4DA,AMAA0V,A/FAAxM,AZ5DAlJ,AQ4DA,AMAA0V,C0FHCrX,AHGAuP,A1FHAvP,AHGAuP,E6CRE,CgDQb,ArFPJ,AROI,A6CRcqK,CrCCChB,CqFOCtJ,A7FAAA,AwBNA,CyEMlB,A7FAA,AoBNmB,CwEGC,A7FAA,C6FAC,ATzDA,AC2DnB,ArFFmB,AXzDA,AC2DnB,C8F3DoB1N,AC2DAkD,AhG3DAlD,AC2DAkD,EeNxB,EqCDiB,CgDQY,ArFPA,AROA,CwFDzB,AWCM,A1GDN,AaCM,AuCRoB+U,C0CrD9B,AY6D+B,A3G7D/B,Ac6D+B,CuFA3B,A7FAA,CwFD6B,A/FAA,GoDPhB,CgDQoB1U,A7FAAA,A6CRnC,ArBEkB,CgEKhB,A/FAA,E0GCM,A7FAA,C6FAN,A3FPqC,AFOrC,EuFAuC,A7FAA,C6FAClM,A7FAAA,E6FAP,A7FAA,C6FAU,A7FAA,EgGHzB,A7FAA,C6FAtB,A7FAA,I2KJwDqJ,EjFOnB,A7FAA,E6FAqBgN,A7FAAA,A8KPE,CAACmQ,QjFOxB,A7FAA,C8KPmB,CAAeC,IAA3D,GAAkE,GAAlE,GAAwEpd,IAAI,CAACmd,SAAL,CAAeE,SAAvF,GAAmG,4BAAnG,GAAkIrd,IAAI,CAAC3J,KAAvI,GAA+I,UAAvJ;ApCOJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,AlEAEoD,AIHF,AFVEwG,ANaE,AKCD,AMAA,AnHFH,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHKI7G,AkBZF,AVMAK,AKHF,AFVEwG,ARaE,AOCD,AMAA,A2GAH,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A9GPEwZ,A3DEM,AkLKR,AGAA,ADAA,AGXI,AhJYJ,ACHA,ACGA,AHRmB,AFOnB,AZAA,A8HDA,A7HCA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KNIjW,CtJDJ,CoEOE/J,AEbAwG,AhGaAxG,AGbAwG,A4CMAwZ,AiICEjW,CjFGF,A7FAA,CgGCEgC,A1GQApM,AaRAoM,E2FXE,A7FAA,A6KOE,EhFPA,AtFOA,APPA,AwKEA0W,CjFWCta,AKCA,ApGDAA,AOCA,C6CRC,AiICE,ElFMA,ApFNAtN,AVMA,C+FCCmK,A7FAAA,A6CRAuZ,C+COC,A9FAA,A2KXA,G3EFG/X,AtFOT,APPSA,AwKEAe,CjKKC,CoFE+C,A9FAA,AgLF5ChB,C9EID,A7FAA,AsKTA,C3EFZ,ADca,A5Fdb,ADca,A6CRA,A4HJAgL,C5HICyO,CmDKCta,AREnB,AlGMmB,AaRAA,AVEnB,AqLNqB,ChFPD,ANaAsD,AvFbA,ARaAA,AqLNEpM,CjFOD,A7FAA,C6FACwM,AvGKAjJ,AULAiJ,CyKZtB,EnLiBA,AwLZQ,CjIDS,CmDKU,A7FAA,C6FAC2C,AHGA,A1FHAA,AHGA,A6CRAyC,AiICE,CjFODrG,A7FAAA,EwFD7B,A/FAA,G+FAkC,A/FAA,CqLNlC,ItFMA,A/FAA,GeNI,CqFOC,ArFPP,AROO,A6CRY,CmDIrB,A7FAA,C0FIiD,A7FAA,A6CRA,UAA5B,CAAnB;A6FQF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHE,AGGAlI,AKCA,ANHF,AGXI,AP9CJ,AC2DI,AKCA,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHKG,AkBZF,AdGC,AIGAA,AMCA,APHF,AIXI,AT9CJ,AC2DI,AOCA,AiHAJ,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTAzF,ADEEylB,A3DEM,AkLKR,AGAA,ADAA,AGXI,AhJYJ,ACHA,ACGA,AHNA,AdKA,ACAA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,CSRA,CoFQEhgB,A9FAAA,A+CPAggB,E0CpDEna,A/FAAA,CoG2DC,A9FAA,C2FHCsF,AQIAvD,AvGJAuD,AUIAvD,A0CVA,ADEA,C+COC,A9FAA,AgDTApN,CmDUC,AHdAqN,A1FcA,AHdAA,AwKEA4a,C9ESCnV,AHEApF,A3FFAoF,AJEApF,AoDPAoW,C0CpDC,A/FAA,CiGwDC,A/FAA,ARFI5jB,CuLNH,CxEYC,AHdA,AP9CAkL,AnF4DA,AHdA,AT9CAA,CiGwDCgF,A/FAAA,AoDNd,C2HFe,C7EWC5K,AEbA,AhGaAA,AGbA,CgGcd,A7FAA,A0CVe,ADEA,CAACggB,C+COX,AKCY,AnGDZ,AMCY,AqKZA7S,ChFQC,AKVhB,AP9CgB,A7FwDA,AOVhB,AT9CgB,CiGwDCxR,AKXG,ApGWHA,AOXG,C2FcF,ADFtB,AGTI,AhGWkB,ADFtB,AITI,A4CIa,C8CKMkJ,AHEnB,A3FFmBA,AJEnB,C8F3DoBe,AC2DAoD,AhG3DApD,AC2DAoD,AoDPAuF,E8CKxB,A9FAA,C4FDM,A/FAA,AoDNqBwR,C6COC,A9FAA,CXHK,AuLNlB,ChFQe3Y,A/FAAA,ARFI/L,AuLNJmnB,ClFhDC,A/FAA,C+FAC3c,A/FAAA,CiGwDC,A/FAA,C+FAClK,A/FAAA,C8FG9B,A/FAA,AqDTa,C5DIgB,AuLNlB,C3HEsBqkB,A5DI7B,CqGtDK,AC2DyB,AhG3DzB,AC2DyB,AgLXAha,C5HIrB,C4CIf,A/FAA,CoDNe,ADEwB,C4CIC,AFxDA,A7FwDA,AFxDA,CgG2DtC,A/FAA,AqDTuC4X,C2HF5B,EAA+B8B,C5HI7B,CAAf,E4HJa,ClFhDf,A/FAA,AiLgDI,E3HEa,EAAsC7B,MAAtC,EAA8CnB,MAA9C,EAAsDlQ,QAAtD,EAAgE;A4FUjF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGGA,AIFJ,ACGI,ANHF,AGTE,ANWA,AKCArD,AMAF,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHN2D,AIEvD,AIGA,AKFJ,ACGI,APHF,AITE,ARWA,AOCAA,AMAF,A2GAF,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTE,ADGAuT,A3DCG,AkLKL,AGAA,ADAA,AGXImE,AhJYJ,ACHA,ACGA,AjBDA,ACAA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KPI,CxLEJ,CuDDEnE,C3DFE,C8GMAjP,AHGAtE,A1FHAsE,AHGAtE,AdNE,AuLNF0X,EtEYE/f,A7FAAA,AwCVA,AgIEEwF,EjICA,C8CICZ,AHEAwC,A3FFAxC,AJEAwC,CoGCC,A7FAA,AyKZA,AKIE,CrFID,AGGA,AKCA,AJAAjL,AMAT,AzGJS,AIGA,AMCA,AJAAA,AMAT,AuCPSyf,A3DCE3hB,AuLNFqnB,AKIEyB,C5LEP,C2GMF,A7FAA,A8CVSnH,C+CUC,A7FAA,AdNC,CyGGA,A9FAA,C4FDX,AGGYxU,AKCA3K,ANHAgQ,AjGDZ,AIGYrF,AMCA3K,APHAgQ,CgDJC,CmDIC,A7FAA,C0FGd,A7FAA,A8CVE,CmDUK,A7FAA,C4FHUvJ,ACGA,AJAAgP,A1FHAhP,ACGA,AJAAgP,A6CPA,CiIDb,CtFOJ,A/FAA,CkGFK,AHEe/J,A3FFf,AJEeA,AqDTA,C6COCpE,A9FAAA,C4KTrB,C5HKF,A4HLyB4d,AKIE,C9EKD,ACGjB,ANHF,AxFAmB,ACGjB,APHF,CmGAoB,A7FAA,CyFElB,AKCmB,AnGDnB,AMCmB,CwFDC5W,A9FAAA,A2KX3B,AKIA,CtFOA,A/FAA,CkGF6BhH,A9FAAA,AiLLE,C7EQD+I,A7FAAA,A0CVhC,C0CSiC,AKC/B,ApGD+B,AOC/B,C2FHgC,A9FAA,AiDPA,IkDOR,ARExB,ArFFwB,AVExB,CuGFiB,A7FAA,C6FAqBhE,A7FAAA,EyFEtC,A9FAA,GkGFJ,A7FAA,CwFAgDqD,A9FAAA,OoGGlB,A7FAA,E6FAnB,A7FAA,C6FAP,A7FAA,GuFHF,A9FAA;A6IGF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGA,AIHH,ACIG,ANHF,AJzDD,AC2DI,AKCA9D,AMAF,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,A/FPA+S,AdGG,AIGA,AKHH,ACIG,APHF,ALzDD,AC2DI,AOCA/S,AMAF,A2GAF,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTIqD,ADIF,A3DAM,AkLKR,AGAA,ADAA,A7ICA,ACHA,ACGA,AHNA,AdKA,ACAA,ACAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KPQ1C,GrFEN,A/FAA,CsGGE4D,AHGAvE,A1FHAuE,AHGAvE,A8CVAqD,AgIEI1C,E3EQF8R,A7FAAA,AuCNAqE,ErCDE,AtBCI,A4LFA,CrFIH,AFxDAna,AC2DAoC,AhFNAzL,AdGA,AFxDAqJ,AC2DAoC,CoGCC,A7FAA,A6CNA,CgDMCjL,A7FAAA,C8CVC,AgIEI,CjFQZ,A7FAA,A6CNS,CgDMC,AMAA,AnGAA,AMAA,CwCVCyf,EqDUEhB,A7FAAA,AuCNAsD,CrCDjB,C+ErDA,A/EqDmBtC,AhBrDnB,C+FAoB3W,A/FAAA,AsLoDIO,CjFQpB,A7FAA,A8CVA,ADIS,CAASoW,C0CtDtB,AC2DI,AKCmB1J,ArG5DvB,AC2DI,AOCmBA,CgGHC,AREA5K,AWCA,AhGHA,AVEAA,AaCA,AwKRI,CvFpDHhK,AY4DAsM,A3FPzB,AhBrDyBtM,Ac4DAsM,AwKRImZ,E9EKFpW,A7FAAA,CgGGV,A3FPW,AFOX,AuCNJ,CsDMgB,A7FAA,CuCNCsS,C0CtD9B,A/FAA,E+FAiC/Z,A/FAAA,GgG2D7B,A/FAA,AqLPY,CjFQZ,A7FAA,CQPkCuG,AqCCzB,C0CtDb,AC2DuC,AWCApD,A3G5DvC,AC2DuC,AaCAA,AwKRI,CjIEH6W,CmDGC,ATzDA,ApFyDA,AXzDA,CwGyDCtS,A7FAAA,EqFEtC,A/FAA,AoDLwC,CsDMf,A7FAA,AuCNgB/R,AiIFrC,CtKCoB,C2FOmBU,A7FAAA,C6FAlB,A3FPmB,AFOnB,E6FAqB,A7FAA,CuCNrC,CAAX,UmDEF,A7FAA;AuIIA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHI,AGL6D,AIIjE,ATvDEqJ,AC2DC,AKCA,AMAC,AnHFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHKAtG,AkBZE,AdGE,AIL6D,AKIjE,AXvDEsG,AC2DC,AOCA,AMAC,A2GAJ,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTIgX,ADKF,A3DDU,AkLKZ,AGAA,ADAA,AGZI,AhJaJ,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KPK,ClFDL,A9FAA,CyFnDEhX,A/FAAA,EwGyDE+P,A7FAAA,A2CPAiH,EtCGE,AqCEAwD,E0CvDE,AY4DAvX,A3G5DA,Ac4DAA,AuCLA,A4HRAf,ClF/CCnL,A/FAAA,CsDkDC,A2HHN,ChFSO2K,AjFHAoV,AdGApV,AmDDA1B,CvDUC,AmLlBA,CnLkBCrG,AwDfAE,C2CMC,A/FAA,C+FAC6L,AUIA,AzGJAA,AYIA,EhBKf,AuDViB,C0CvDf,AY4DgB/O,A3G5DhB,Ac4DgBA,AuCLAwK,C0CvDCvD,AY4DA,A3G5DAA,Ac4DA,ChBKC,CkBZlB,CiFGS,AUIWoY,AzGJX,AYIWA,AwCVlB,C2CMmB9Q,AFxDrB,A/EqDqB,AdGAA,AFxDrB,C+FAsBzP,A/FAAA,I+FAtB,A/FAA,CiGwDS,AOCkB,ATzDA4K,AY4DA,A3FPA,AdGlB,ASCkB,AXzDAA,Ac4DA,AuCLlB,CsDKmBpK,A7FAAA,AuCLAkiB,C4CCC1S,A/FAAA,CsGCCsC,ATzD9B,AjGiE6B,AaRCA,AXzD9B,CgBqD+B7S,C+ErDCwD,A/FAAA,EiGwDvB,AUIW,AzGJX,AYIW,AuCLX,CAAT,CrCF2B,C2FOU,A3FPA,AFOA,CiF5DrC,AY4DE,A3G5DF,Ac4DE,EmFJsC,AFxDA4H,A7FwDA,AFxDAA,CiGwDC,A/FAA,C+FAvC,A/FAA,EsGC0C,A7FAA,C6FACyP,A7FAAA,CoFzD7C,A/FAA,cgBqD2B,CAAN,SwFEvB,A7FAA;AuIKA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHG,AGGHhX,AILA,ACME+b,ANHF,AGXI,AP9CH,AC2DA,AWCG,AnHFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHME,AkBbA,AdGC,AIGH/b,AKLA,ACME+b,APHF,AIXI,AT9CH,AC2DA,AaCG,A2GAJ,AQAA,ALAA,AEAA,ANAA,AcAA,AhJAA,A2BDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTG,ADKD,A3DDU,AkLKZ,AGAA,ADAA,AGZMlgB,AhJaN,ACHA,ACGA,AHPA,AdMA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,EkGCEkgB,A7FAAA,E4FHE7M,ACGA,ANHAH,AxFAAG,ACGA,APHAH,A2BJAR,CyEOC2N,A7FAAA,CwFDC,AtGOA,AQPA,A+CJAwF,A4HRA7lB,C7EYCwF,ApFNA0c,AVMA1c,CgGbCgB,AKcA0N,AlGdA1N,AKcA0N,EkBPE,ClCaClP,CuDXC,CiDTC,A7FAA,AfQM5E,AuLPN,AjJMAsJ,CiJNC/H,CxEaZ,ANHa,AQGA,A/FAb,APHa,ASGA,AuCLAyJ,CiDTC,A7FAA,COOd,CyFOgB,ANHA1B,AQGA3H,A7GMZ,AcNY,APHA2H,ASGA3H,C6FAC,A7FAA,CEPC,AgBAA,CoEMpB,AEbqBsX,AhGarB,AGbqBA,A4CSA,ArBFA,CoEMC/G,AKCpB,AEAoB,ArGDAA,AMCpB,AEAoB,AuCLA/F,A4HRhB,CtEaF,A7GMmBtH,AgBNnB,AmKbmB,CjKMrB,CmFIuB,A9FAA,C8FAC,A9FAA,CiGXV,A7FAA,C2FaY,AEbxB,AhGawB,AGbxB,C2FayB9C,A9FAAA,CkGFC,A7FAA,CjBHO,CIY/B,AJZgCtB,C8GGLsS,A7FAAA,A0CFlB,CAAmBuS,C4HRC,CnLoB7B,AJba,CAAwB,C0GK3C,A9FAA,A+CJsC,CAACrkB,C+CIC,A9FAA,CRQ7B2D,AJbQ,EAA8BjE,E2DCf,EmDEa,A7FAA,C6FACsS,A1GU1C,AaV0CA,A0CFA,ArBF5B,CqBEL,A3DDI,AsCDnB,CqBEE,A3DDU,GIaWlP,CqGVE,A9FAA,C8FAzB,A9FAA,C+FEA,A9FAA,E8FA0D,A9FAA,CRQ7B,CAAC2B,c0Gb9B,A1GauB,AabvB,Cba6C,IAAtB,EAA4Bd,OADjD,EAC0D;AoJP5D,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ACAA,ArEHC,AGGC,AINF,ACOEkb,AJAArR,AMAE,AnHFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHOI,AIXH,AIGC,AKNF,ACOEqR,AJAArR,AMAE,A2GAJ,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A9GJE6W,A3DDO,AkLKT,AGAA,ADAA,AGZQpY,AhJaR,ACHA,ACGA,AHPA,AdMA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRIkC,E7ESF0Q,AJAArR,AzFAAqR,AJAArR,A6CLA6W,AiIJElW,E9EMA4L,ACGA,A9FHAA,ACGA,C6FAC7G,A7FAAA,AlBTG,C2DIF,A3DDI,A4LHF,CjIIDvL,CgDKC,A7FAA,AyKbAsE,C5EaC3K,AvGOAqC,AUPArC,CyKbC,AKIE,CjFSV,AMASqe,AnGAT,AMASA,AuCLT,A4HRS,CxEaT,AJAU,AzFAV,AJAU,A6CLA6E,C3DDKplB,CAAP,C+GMK,A7FAA,AqKbL,CnLoBN,AJbe,C2GMjB,A7FAA,AyKbeuM,C5HQf,CoDKA,AJAiB+K,AvGOA5T,AcPjB,AJAiB4T,CmGAC,A7FAA,AuCLA,A4HRV,CtEaWlJ,A7FAAA,AuCLnB,A4HRM,E5HQe,CgDKrB,A7FAA,A6CLA,CvDYuB,CAAC9I,AuDZA2f,CsDKN,A7FAA,E6FASrX,A7FAAA,CuCLC,CAAChN,CvDYZ,CAAc,G6GPb,A7FAA,ChBOD,AuDZjB,CmDEoC,AGGA6S,A7GOlC,AaVkC,AGGAA,EwKTIlI,C9EMDmH,A7FAAA,G2KNK,C3ES1B,A7FAA,AwKT2BuX,E3ESA,A7FAA,AwKTnC,GAAwC,K9EMG,A7FAA,C6FACtP,A7FAAA,CgGGC1U,A7FAAA,G6FAV,A7FAA,E6FAe,A7FAA,uBwKT1D,K9EEJ,A7FAA,E6FI4F,A7FAA;AuIG5F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,AjEAE,AKCA,ANHF,AGXI,AP9CJzG,AC2DA,AKCE4O,AMAI,AnHFN,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHOI,AkBdF,AVMA,AMCA,APHF,AIXI,AT9CJ5O,AC2DA,AOCE4O,AMAI,A2GAN,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTEuT,ADMA,A3DFU,AkLKZ,AGAA,ADAA,AGZO,AhJaP,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRI4G,EjFSFna,A7FAAA,A8CVAuT,AgICE4G,EnFMA7d,A9FAAA,EoGGEa,AV5DA,A/EqDAoW,AJOApW,AZ5DA,AqDwDA8Z,AiILE,CvFnDD5lB,A/FAAA,AiL6CD,AKMGopB,ChFLD9iB,ADcA,A5FdAA,ADcA,A8CVA,C0CSCqH,AKCAlL,AvGOAuC,AGRA2I,AOCAlL,CiGAC,AEAA,A/FAA,AEAA,CuFAR,AMAS6D,AnGAT,AMASA,AwCVA4b,C6COC,AEGA,ArFPA,AXIA,AGGA,C8FdC,A7FAA,A4CUA,CoDIC,AV5Dd,AnF4Dc,AZ5Dd,CmGyDe1Y,AnFJA,AXIAA,CsGGT,A7FAA,AuCJU,AiILZ,CvFlDJ,A/FAA,AsDiDiB,ADMf,CoDIA,AHdgB,AKcAlD,A/FAhB,AHdgB,AKcAA,CwKTGgJ,C7ESD,ATDpB,AKCE,ArFPkBiT,AJOA,AXDpB,AOCE,CwFDmBvU,AlGQjB,AGRiBA,AqDTA,C6COC,AGXlB,ADckByK,AhGHA,AIXlB,ADckBA,C2FHC,AQGA,AtGHA,ASGA,AwKTnB,ChFLoB,AxGqBA,AWrBA,CuFaxB,AlGQI,AGRJ,C0GC0BjS,A7FAAA,CkFDCA,AhFNZ,AfMYA,AqDTzB,EqDUgB,A3FPhB,AFOgB,CiF1DlB,ACyDA,AKCE,ArG1DF,ACyDA,AOCE,EwFD8B,A/FAA,U8FzDpB,A/FAA,OmGuDU,A9FAA,C8FAtB,A9FAA;A6IGA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHA6I,AGGE,AKCE,ANJJ,AGVM,AP5CJ,ACyDArB,AKCA,AMAI,AnHFN,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,ADCA,AjHOG,AIXHqB,AIGE,AMCE,APJJ,AIVM,AT5CJ,ACyDArB,AOCA,AMAI,A2GAN,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTE,ADMA,A3DFU,AkLKZ,AGAA,ADAA,AGZM,AhJaN,ACHA,ACGA,AHPA,AdMA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRIwa,EtFQFxa,A/FAAA,AqLREwa,EnFMAlX,A9FAAA,E2FEE,AKCAiH,ApGDA,AOCAA,A8CVAkO,ADMAZ,C2CGC9iB,A/FAAA,CqLRG,C7ESDjB,A7FAAA,A0KTEwoB,CjFSD,AMAA9jB,AnGAA,AMAAA,AwCVA,ADMA,C0CtDCiF,ACyDT,AKCSnF,ArG1DAmF,ACyDT,AOCSnF,CwFDC,A/FAA,CwGCR,AHdS4C,AKcP,A/FAF,AHdSA,AKcP,AwCVOod,ADMAtC,CoDIClY,A7FAAA,CqFJC,AUIAsV,AzGJA,AYIAA,CmFJC,AIIV,AnGJU,AMIV,EiGAF,A7FAA,AyCJc,C2CGhB,A/FAA,AoDHiBc,C8CCC,AGXA,AjGWA,AIXA,A6KKhB,ChFLiB9Y,AP5CnB,ACyDmB5C,AKCA,A5FdA4C,AT5CnB,ACyDmB5C,AOCA,A8KTEsiB,ChIDD,C6COC7d,AQGA,AtGHAA,ASGA,AwCVAiX,CyChDC,ACyDtB,AWCsBjY,A3G1DA,ACyDtB,AaCsBA,CuCJN,AiILd,CjFSF,A7FAA,A6CJA,CiDVW,A7FAA,C6FAe3D,ADcAqI,A5FdArI,ADcAqI,C8CVC,CAACuH,C6COC,AQGhB,AtGHgB,ASGhB,CqFHiB5E,AQGA3Q,AtGHA2Q,ASGA3Q,CwFdnB,A7FAA,C6FAP,ADc4B,A5Fd5B,ADc4B,C6FAC8B,A7FAAA,CmGApB,A7FAA,CuFAa,A7FAA,C6FAU,A7FAA,CyFJvB,A/FAA,E+FA0B,A/FAA,AoDNlB,EAAD,CAApB,C+CU0B,A7FAA,E6FAmBmW,A7FAAA,C2FJ/C,A9FAA,G4FAmDzV,A/FAAA,GmGIvB,A7FAA,CyFJa,A/FAA,E+FAgBwB,A/FAAA,K+FAhB,A/FAA,E+FAuB,A/FAA;AgJIhE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHE,AGGAY,AIFF,ACGE6H,AHdG,AP5CD5C,ACyDH,AKCCmE,AMAI,AnHFN,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AhGPE,AdIA,AIGApJ,AKFF,ACGE6H,AHdG,AT5CD5C,ACyDH,AOCCmE,AMAI,A2GAN,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A9GHE,A3DFU,AkLKZ,AGAA,ADAA,AGZK,AhJaL,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRC,ElFQCpJ,AKCA6H,AJAAuB,A/FDApJ,AMCA6H,AJAAuB,EgGHEwM,ACGA,AV1DA3Q,ApFuDA2Q,ACGA,AZ1DA3Q,CyG0DCjE,A7FAAA,CIRCwL,AqCIA8E,CoDIF,A7FAA,AyCJG,CoDIL,AJAM,AzFAN,AJAM,CyFJC,AIIApU,AnGJA,AMIAA,CmGAC0L,A7FAAA,AuCJAsD,CgDIR,A7FAA,C4FDU,ACCA,A/FDA,AECA,CdNOvR,C0GKL,ApFPA,AVOA,A+CHA,CAAC4lB,EmDCf,AGGM,AhGHN,AGGM,EsFLoD,ALrDvC,AM0DjB,AMAiB,A3FRA/gB,AVGuC,ANrDvC,AQ0DjB,AMAiB,AuCJT,C0CtDU,A/FAA,AqDsDAse,CgDICxK,A7FAAA,GuF1DF,A/FAA,CiGsDMlU,A/FAAA,C6FtDC8G,A/FAAA,AqDsDA,EgDIxB,ArFRA,ARQA,C6CJ2Boa,C4CApB,AjFJqB3D,AdIrB,CRF4B,CAACvhB,CuGEL,A/FAA,AmDAvB,CAAR,E0CtDiB,A/EkDiB,AhBlDjB,ANoDA,CqGpDf,A/FAA,ANoDuC,EsBFJuhB,EtBEpB,EAA8BrhB,EsBFJ,CAAC2hB,GtBE3B,CAAP,IsBF2B,CAAgBzQ,KiFI9C,A/FAA,G+FAsD5O,AjFJxB,AdIwBA,CcJjC,CALkB,CAO9C,CiFEO,A/FAA,G+FA6D,A/FAA,G+FApE,A/FAA;AgJIF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHC,AGGCqC,AIFF,ACGE,ANHF,AEGE,AMAI4b,AnHFN,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AlHQE,AIXD,AIGC5b,AKFF,ACGE,APHF,AGGE,AMAI4b,A2GAN,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,ADAA,AIDA,A7GTE,A5DIO,AkLKT,AGAA,ADAA,A7ICA,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,C0FLe,A/FAA,CkGKb5b,A9FAAA,C2FHCH,A/FAAA,CsGCCmV,ALAAvH,AxFAAuH,ANAAvH,C+FEC,A9FAA,CmGCCmN,AEAAgB,A/FAAhB,AEAAgB,AwCVA,C8CSC,AtGQAnc,AQRA,AgDTAwhB,CmDUC,A7FAA,CyFAC,A7FAA,EiGAE,A7FAA,A0CVL,C2CIS,A/FAA,C+FAf,A/FAA,CyGMc,A7FAA,C6FACxc,A7FAAA,AwCVA,C8CSCzE,AKCA+H,AnGDA/H,AMCA+H,EuFHE,A9FAA,C+FEX,A9FAA,CRQL,CqGVmB/D,AEGA,AhGHAA,AGGA,C4FDC,AOChB,ArGDgB,AQChB,AwCVgBkJ,CqDUC/R,A7GOA,AgBPAA,I6FAjB,A7FAA,CqFHsB,ArGUAsE,AOVA,AiDPA,C6COC,A9FAA,AiDPAiE,CmDU3B,A7FAA,M0CVa,CkDOf,A7FAA,GwFA4B,A9FAA,C8FAP,ArGUE,AOVF,AiDPoB,C6COCkG,A9FAAA,GPUGrK,EqGV7C,A9FAA,IiDPE,EAAmD,CxDiBnD;AoJPF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,AJAA,AHCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHAsK,AGGI,AIFJ,ACGE+Q,ANJF,AGVI,AP5CA,ACyDJ,AKCIzR,AMAEqD,AnHFN,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AlHQC,AkBdC,AdGF3C,AIGI,AKFJ,ACGE+Q,APJF,AIVI,AT5CA,ACyDJ,AOCIzR,AMAEqD,A2GAN,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GTI,ADMF,A3DFG,AkLKL,AGAA,AEbI,AhJcJ,ACHA,ACGA,AHRA,AdOA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRAjS,CxLOA,C2GEEqgB,A7FAAA,CdSF,C0GZIvN,ACGA,ANHAK,AEGAvE,A1FHAkE,ACGA,APHAK,AGGAvE,AwBRAzD,CyEQCiD,A7FAAA,C+FAC6D,A7FAAA,AwKTA,CtKEC4P,AqCGA,AiILA5hB,C9EMP,AFXQ,A3FWR,AFXQ,CsF5CC0L,ACyDAgD,AhGzDAhD,ACyDAgD,CoGCC,A7FAA,AwBRA,CoEOC,ACCA7L,A/FDA,AECAA,A8CVA/C,ADMA+B,A4HVAiL,CxEcT,A7FAA,AyCJU,CiDVCsM,AP5CT,A/EmDF,APPWA,AT5CT,AgCkDS5P,C2EQC,A3FPAiZ,AFOA,AmKdV,AKKJ,CrFKe,AQIA,AEAAnc,AzGJA,AUIA,AEAAA,AuCJA,C4CAC,AGGAoH,ALzDA,A7FsDA,AIGAA,ANzDA,AqDsDd,CiILe,CtKEf,AsCHgB,ADMA7L,CiDVV,AtFOW,APPX,A6CIWJ,ADMA,CoDIjB,AHdE,AP5CA,AY0DU,A3FPZ,AJOA,AHdE,AT5CA,Ac0DU,AkBRM,C2EQd,A7FAA,AkBRe,CsENC,A7FAA,CuFatB,A/FAA,AoDHuBoV,C8CCC,AHEAlI,A3FFA,AJEAA,AoDHtB,CgDIE,A7FAA,C6FAsB,A7FAA,A6CJA9M,C8CCCoR,A9FAAA,AiDPhB,ADMgB,CCNC,CDM1B,C+CGS,AJAX,A1FAW,ALAX,CoDH+B,C2CGCzM,A/FAAA,EmGAE,A9FAA,A0BPd,CgEOpB,A/FAA,A+BPa,CqEQT,A7FAA,AwBRgC0E,CgEOC,A/FAA,CgGHtB,AIIuBuN,AnGJvB,AMIuBA,C4FDC/K,A9FAAA,C2FHC,A/FAA,AoDNA,C6COC,A9FAA,C8FACwF,A9FAAA,A2BL1C,IqEQI,A7FAA,IyFJ8C/P,A/FAAA,GkGGhB,A9FAA,C2FHM,AGGcyR,AlGHd,AIGcA,E2FHE7E,A/FAAA,MiGAxD,A9FAA,C+FGkC,A9FAA,C2FHM,A/FAA,CkGGpC,A9FAA,C2FH8Dc,A/FAAA,M+FA1B,A/FAA,E+FAkC,A/FAA;AgJI1E,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHE,AGGC,ADJH,AGTM,AP5CF,ACyDF,AKCElC,AMAC,AnHFL,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AlHUA,AIbE,AIGC,ADJH,AITM,AT5CF,ACyDF,AOCEA,AMAC,A2GAL,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GTM,ADMFgX,A3DCH,AkLED,AGAA,AEbG,AhJcH,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRI8E,EAAAA,EnFMAtX,AEGAxE,AhGHAwE,AGGAxE,A6CJAgX,CsDFgB,A7FAA,C6FAhB,A7FAA,GiFpDKha,A/FAAA,CqG0DC,A7FAA,A8CVAmJ,ADMA,AiILE,CjFSDjS,A7FAAA,A6CJAkjB,CiILG,ChFLD7c,AP5CT,AtF4CSA,AT5CT,AsDgDE,GyChDU,A/FAA,IsG4CI,AP5ChB,AtF4CgB,AT5ChB,CsG4CiBC,A7FAAA,G4CUjB,CgDIA,A7FAA,A6CJqBtH,CgDIC,A7FAA,A6CJtB,EiDVS,A7FAA,A4CUe2jB,CiDVChM,A7FAAA,C0FWC,A9FAA,AiLNPgR,EjIKS,AiILlB,CnFMmBvX,AEG7B,AhGH6BA,AGG7B,A6CJ6B9R,CiILN,CjFSQ0X,A7FAAA,I6CJ/B,GgDIA,A7FAA,G8FdyC,A7FAA,C6FAC9T,A7FAAA,C0FWC,A9FAA,C8FACoO,A9FAAA,OiGXH,A7FAA,E6FAY,A7FAA,I6FAZ,A7FAA,C6FAhC,A7FAA,C6FAP,A7FAA,W0FSN,A9FAA;A6IKA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AuHDA,AFAA,ApEHE,AGLwD,AIM1D3J,ACGE,ANNF,AGRK,AP5CD,ACyDF,AKCEmF,AMAD,AnHFH,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AhGPE,AdIA,AILwD,AKM1DnF,ACGE,APNF,AIRK,AT5CD,ACyDF,AOCEmF,AMAD,A2GAH,AQAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A9GFI,AuHEJ,AGAA,A9ICA,ACHA,ACGA,AHTA,AdQA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRQ,ClFAR,A9FAA,EqGDiB,A7FAA,CqFObyE,AEGAzE,AMVF,AtGOEyE,AGGAzE,AMVF,AkBCE8D,EiEKE3B,AQIAsP,AvGJAtP,AUIAsP,C4FHC,AxFLA0B,ALKA,C6FAC,ACGA,A9FHA,ACGA,AyCHAkE,AiINMhG,C7ESLrE,AV1DAxa,AnF0DAwa,AZ1DAxa,AqDuDA,CgDGC,A7FAA,A8KTM,CjFSL0B,A7FAAA,C6CHC4iB,CiINO,EvFjDf,A/FAA,CiGsDF,A/FAA,AmDCc,CAACjkB,ArBNA,AsJAMkpB,C9EMhB,ATvDW,ApFuDX,AXvDW,CwGuDlB,ATvDI,A/EkDF,ALKF,AXvDI,CwGuDgBjT,A7FAAA,A0CAR,ArBNQ/E,CyESd,A7FAA,AyCHeiT,AiINF,CtKCG,CAApB,CsKD4BgF,C7ESLvK,ANHA,AEGrB,AzFAqBA,APHA,AGGrB,C6FAsB,A7FAA,AwBTA,CyESC,A7FAA,AyCHf,ArBNezN,CwEM3B,ACG4BxR,ANHA8R,AxFA5B,ACG4B9R,APHA8R,CgDACwS,CmDACjT,A7FAAA,C2KNX,EjIMc,AiINzB,C7ESiB,A7FAA,AyCHSwS,CgDG9B,A7FAA,CgGHJ,A7FAA,C8FGqC5E,AJAAtH,AzFAAsH,AJAAtH,AwBTjB,EyESmB,A7FAA,AyCH3B,CoDG4BzH,A7FAAA,AyCHpC,CrBNqC,CmEMC,A9FAA,C8FAC+B,A9FAAA,GgGGvC,A7FAA,OiGAF,A7FAA,AoBTmD,CAAE,CyESA,A7FAA,AoBTvD,SmEGA,A9FAA;A6IMA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AuHDA,AFAA,AjEAAnP,AKCI,ANPJ,AJnDG,ACyDD,AKCE,AMAF,AnHFF,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,A1GAAA,AMCI,APPJ,ALnDG,ACyDD,AOCE,AMAF,AmHAF,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVM,ADQF,A3DDJ,AkLGA,AGAA,AEdE,AhJeF,ACHA,ACGA,AjBDA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRQ,InFMJoP,A9FAAA,AXDAvS,E0GGE,A9FAA,A2KdAsM,C7EcC9H,A9FAAA,C+FCCqJ,A7FAAA,A6CHAsX,A4HZN,AKMYxf,C7ESL0V,AEAA+E,A/FAA/E,AEAA+E,AuCHA,A3DDA,C4DPC,A2HJA,E5HYE8E,A3DDA,C2DCR,CoDGA,AJAU,AzFAV,AJAU,AdJd,C+GIe5F,AJAArH,AzFAAqH,AJAArH,A8KTM,C3ESL,A7FAA,C2FAC,AEAAsI,A/FAA,AEAAA,C2FAChQ,AJAd,AzFAcA,AJAd,A8KToB2O,EjFSJrR,A7FAAA,A8KTM,ClFQ1B,A9FAA,C8FAsByD,A9FAAA,CqGCb,A7FAA,AwKTkBiW,C3ESH5S,A7FAAA,EqFHE,AEGA,AhGHA,AGGA,C6FACsD,A7FAAA,C4FDC,AOCnB,ArGDmB,AQCnB,CsFDoB9W,ADFAgR,AQG3B,ArGD2BhR,ADFAgR,ASG3B,CuFAkB,A7FAA,CiGAhB,AJA2BpQ,AzFA3B,AJA2BA,C8KTK,CAACulB,KlFQrC,A9FAA,E8FAwC,A9FAA,G6FFG,A9FAA,C8FAC/U,A9FAAA,AiLNpB,CjFSJ,A7FAA,C6FA0B,A7FAA,C8KTGgV,OjFS7B,A7FAA,E4FDpB,ACCwD5P,A/FDxD,AECwDA,A8KTE,CAAC0P,ClFQD,A9FAA,M+FCtC,A7FAA,E2FPpB,A9FAA,CiLFQ;ApCSR,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGA,AIFF,ACGG,ANRH,AGNI,ANaF,AKCExZ,AMAH,AnHFD,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AlHQA/J,AkBhBE,AdKA,AIGA,AKFF,ACGG,APRH,AINI,ARaF,AOCE+J,AMAH,AmHAD,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVQmG,A5DOR,AkLGA,AGAA,AEdIuS,AhJeJ,ACHA,ACGA,AHVA,AdSA,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRQ,I9EMJ3Y,ALAA4E,AEGA3E,A1FHAD,ANAA4E,AGGA3E,AdJA5N,AuLXAsmB,EhFWE,A/FAA,CcLC,CsFLC,A7FAA,A6CGAvS,AgIEM8V,CtJDLhY,CqEUC,A7FAA,A8KTM,CjFSL/P,ArFTAhB,ARSAgB,A8CXA,CxDkBC,AkBhBA,AtBKA,CuGACkN,AKVAwJ,AxGqBAtX,AIXA8N,AOVAwJ,A6KKMmK,ChIFLxP,CtCEC,AtBKA,AuLXA,CjKMb,AiKNcgR,AKMM,CAACze,C9EML,AxFNA5E,ALMA,A2CRA,CtCEC,AsCFA0jB,CgDHX,A7FAA,AfUR,AuLXe,ChFWT,AOCevS,AtGDf,ASCeA,C2FXCxF,AxGqBtB,AkBhBsB,APLAA,AwKDA,CnLsBC1H,AkBhBrB,CmFMsB,A9FAA,AiLNF,CjFSlB,ArFTqB,ARSrB,A8KTI,CrFKkB,AIIA,AnGJA,AMIA,C2FHCmN,AnFNApR,AXMAoR,AiDRT,CtCEhB,AgBDF,CsBD6BuS,AtBCA1T,ChBCC,CsFL1B,ADcA,A5FdA,ADcA,CgGH4B,A7FAA,AsKZAtL,CzEYCkI,AFXA,ADcA8J,A1FHA9J,AFXA,ADcA8J,A8CXf,C2COZ,A/FAA,A8BNN,ChBCmCuJ,AsCFAqB,A2HJb,CjJKc,CiJLC8E,ChFWC/X,AnGWtC,AIXsCA,GiGCG,ArGUA,AOVA,C8FACmD,AnFNZ,AXMYA,A4KZpB,CjKMqBzR,CAAb,AiKNc,C3HI1B,EkDQlB,AHGI,A1FHJ,AHGI,A8CX2CwhB,C2COC,AjFLA,AdKA,C+FACtT,AjFLnB,AdKmBA,CJWCjK,GwDlBhC,EAAqCoc,E2COP,A/FAA,E+FAW,A/FAA,EoDPzC,C6CGlB,A9FAA,AiDHQ,G2COwC,AnGWP,AIXO,C+FA9C,AnGWgEnc,AIXhE,CJWuC,CmGX2B,A/FAA,CJWC;AoJPrE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHI+K,AGGF,AIFF,ACGC,ANTD,AGLM,AP5CJhG,ACyDA,AKCE6D,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,AFAA,ANAA,AlBAA,AFDA,AlHQE,AIXEmC,AIGF,AKFF,ACGC,APTD,AILM,AT5CJhG,ACyDA,AOCE6D,AyHAJ,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVO,ADQH,A3DDJ,AkLGA,AGAA,AEdM,AhJeN,ACHA,ACGA,AHVE,AdSF,AEAA,ACAA,ACAA,AEAA,AkBCA,AnCDA,A+KRQ,EvFjDN7D,A/FAAA,EiGsDEgG,AOCAsK,ALAA7H,AEGA5E,AnGJAmC,ASCAsK,ANAA7H,AGGA5E,AdJA3N,EIWE,CwDpBA,CAEE,AgIEM2jB,CjIML,ArBPAzZ,CqEUC,A7FAA,AyKfA1E,C5EeC3D,A7FAAA,C8KTO,CxLgBLkD,AuDVAsc,A4HZP,ChFWQ,AFtDA,AjGiER,AIXQ,AFtDA,AqDuDA,C0CvDC5W,A/FAAA,AsD+CAlL,A2HJA,AjJKA,AsJCMqqB,C9EML,A7FAA,A2CRR,A5DOR,AsCNgB/X,CiEMC,A/FAA,AmDCA,AiINM,ChIFL,ADQd,AiINoB2P,C9EML,A1GUA,AaVA,C6FAC,A7FAA,A0CAAH,ArBPX,CqBOY,ArBPAvQ,GqBOGsR,C0CvDV,AM0DV,ArG1DU,AQ0DV,C2FHsB,AEGA,AhGHA,AGGA,AwBVjB,AsJCY,C9EMF,ATvDQ,AjGiErB,AaVa,AXvDQ,AgCgDzB,C+DhD0B,A/FAA,AsLiDpB,C9EMqB,ALAAnQ,AxFAA,ANAAA,C4FDzB,A/FAA,CJW2BlN,CAAC,CuGP5B,A7FAA,C6CHA,CgDG+ByS,AvGOA,AUPAA,CgGHhB,A1GUb,AaVa,A0CAiB6J,CAAC,CmDAC,A7FAA,C0CAlC,CvDUoC7d,CuDVC,E8CAE,A9FAA,C8FAC+O,A9FAAA,GmGAzB,A7FAA,E6FA8B,AHG7C,A1FH6C,AHG7C,EVO+C,CAACxN,CAAD,CAAjD,E0GViB,A1GUqC,AaVrC,E6FAuC,A7FAA,Q6FAvC,ALNnB,AxFMmB,ANNnB,CmGMA,A7FAA;AuIGA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHIgK,AGGF,ADTF,AGJM,AP5CF1H,ACyDF,AKCEsG,AMAJ5O,AnHFA,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQI,AkBhBF,AdKEgQ,AIGF,ADTF,AIJM,AT5CF1H,ACyDF,AOCEsG,AMAJ5O,AmHAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVQ,ADQFkmB,A3DDN,AkLGA,AGAA,AEdQ,AhJeR,ACHA,ACGA,AHVC,AdSD,AGAA,ACAA,AEAA,AkBCA,AnCDA,A+KRQ,IrFKJlW,AECAyD,AJvDAnL,AM0DAsG,AnGJAoB,AGCAyD,ALvDAnL,AQ0DAsG,AdJA1N,EsGGE2N,AWCA,A1GDAA,AaCA,AuCHAqX,C0CvDC,AY0DAjmB,A3G1DA,Ac0DAA,AuCHA,CiINO6qB,CvFjDL,A/EiDA3I,AhBjDA,CqG0DC,AvGOA,AUPA,A6CHAuD,CgDGC5iB,A7FAAA,A8KTM,CrFKL,ADGA,A9FHA,ADGA,E0GCZ,A7GOc8C,AgBPd,AuCHc,A3DDA,A4LLM2iB,CrFKLvY,AFvDa,AC0DbpB,AhFRb,AdKaoB,AFvDa,AC0DbpB,AqDVAqD,ADQAxQ,A4HZA4L,EtEeE+T,A7FAAA,ApBJA,AuLXA,C5HYP,A3DDQ,AuLXA3a,C5HYCyf,A3DDnB,C2DCU,C2CEW,A/FAA,AgLdJ,CjFcK1Y,A/FAAA,AoDFAkY,A4HZd,ChFWe,A/FAA,AoDPA,AgIEM,CrFKL1U,AnGWd,AIXcA,AoDPAxQ,C+CWpB,AMAJ,A7GOyB,AUPrB,AMAJ,AwCXuB,C+CWG,A7FAA,A8CXlB,ADQkB,AiINMiqB,CjIMLvF,CiINP,EnFMU,A9FAA,C4FDf,A/FAA,AoLLsB,CrFKL,A/FAA,AmDCtB,C8CAuBhS,A9FAAA,AgDA3B,CgDGF,A7FAA,EwFDF,AKCkCwF,ApGDlC,AOCkCA,GyFJrB,A/FAA,E+FA0B,A/FAA,AoLLrB,ErFKL,A/FAA,C+FAX,AIIA,AnGJA,AMIA,A8KT8C4P,GnFMH,A9FAA,C8FAC7U,A9FAAA,KiLNW,CAAC2U,UAAxC,GAAqD,MAArD,CnFDpB,A9FAA,EiLCkFnI,EAA9D,GAAmE,QAAnE,GAA8E2E,IAA1F,WxLgBmG5e,CAAlF,GAAsF,GAArG,CAAN;AoJPJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHG,AGGDR,AIFF,ACGA,ANXA,AGHM,AP5CFZ,ACyDF,AKCEgK,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AUCA,ACFA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQG,AkBhBF,AdKE,AIGDpJ,AKFF,ACGA,APXA,AIHM,AT5CFZ,ACyDF,AOCEgK,AyHAJ,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVO,AsHUP,AGAA,AEdO,AhJeP,ACHA,ACGA,AjBDA,AGAA,ACAA,AEAA,AkBCA,AnCDA,A+KPQmc,CtKdR,CoFqBEvlB,A9FAAA,C2FNA,A/FAA,CiGIEkO,AJvDA9O,AM0DAgK,AhGHA8E,ALvDA9O,AQ0DAgK,A8KRImc,EtFOFjc,A/FAAA,GgGHG,AOCA7L,ACGA4c,AV1DA,A7FsDA,ASCA5c,ACGA4c,AZ1DA,AsLkDI,CjFQH,A7FAA,A8KRIiL,CvFlDH,AM0DAhoB,ArG1DA,AQ0DAA,C4FDC,AJAA,A1FAA,ALAA,CqLPC,ClFOC,A9FAA,AgLPN,CtFOO8L,A/FAAA,AqLPIqL,G7EQnB,A7FAA,CwFL0D,AKKvChN,AnGLuC,AMKvCA,A0KRX,CvFlDYlL,A/FAAA,AsLkDI,CtFOH,A/FAA,C+FAC4L,A/FAAA,EuGFtB,ALAwB,AJvDb,ApFuDX,ANAwB,ALvDb,CwGuDcpG,ATvDAsE,AM0DrB,A1FHqBtE,AXvDAsE,AQ0DrB,CiGAJ,AV1DW,AM0De,AzFA1B,AZ1DW,AQ0De,C2FHCqH,A9FAAA,CoGGC,AV1DA,AnF0DA,AZ1DA,EsLkDJ8X,CjFQpB,A7FAA,CgGHJ,A7FAA,C0FGiClT,A7FAAA,CgGHCwD,A7FAAA,EqFEhC,A/FAA,EoGCE,A7FAA,A8KR4B,C9EKhC,A7FAA,C2KLoC,C9EKKC,ALAA,AxFAAA,ANAA,C8FAC7H,A9FAAA,CmGA1C,A7FAA,E6FA6C,A7FAA,iBwFR7C,A9FAA;A6IWA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHI3C,AGGFtL,AIFA,ACGA,AHdI,AP5CA,ACyDJ,AKCEmJ,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A9GHImC,AIGFtL,AKFA,ACGA,AHdI,AT5CA,ACyDJ,AOCEmJ,AyHAJ,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A9GHM,A3DAN,AkLGA,AGAA,A9ICA,ACHA,ACGA,AHXA,AdUA,AGAA,ACAA,AEAA,AkBCA,AnCDA,A+KPY,ElFOVnJ,A9FAAA,E2FHEsL,AIIAnC,AnGJAmC,AMIAnC,C4FDC,A9FAA,CmGCC,ATDAC,ApFCA,AXDAA,CmGAC,A9FAA,CmGCC,A7FAA,ClBJC1N,AsCPA4R,C+D/CCjH,AM0DA,ArG1DAA,AQ0DA,C6FAChJ,A7FAAA,A6CJA,C2CGC,A/FAA,CqLPOkoB,CrFIL,A/FAA,C6FtDC,A/FAA,AqDsDA7E,C+CGC1gB,AJAAoJ,A1FAApJ,ALAAoJ,AoDHA,C4CAC,A/FAA,C6FtDC,A/FAA,CoGyDX,A9FAA,A+CHY,CAAb,CiIJqB,ClFOL,AJAA,A1FAA,ALAA,AoDHAsX,ArBPtB,AsJG4B8E,CtFOLlc,A/FAAA,AoDHA,ArBPAzE,CyEWCuV,A7FAAA,AlBJxB,C2GII,A7FAA,CyFJA,AIIsB,AnGJtB,AMIsB,A6CJAiG,ArBP1B,AsJGmB,C5LIQ,CsCPC,AsJGhB,EjIIN,EAA0BK,CoDI1B,AJAF,AzFAE,AJAF,A6CJ6B,CoDI/B,ATDI,ApFCJ,AXDI,CoGC6BtN,A7FAAA,A6CJ7B,CoDI8B,A7FAA,CyCJCoN,C2CGCnX,A/FAAA,AoDHA,CAACqX,CAAD,CAAD,CgDIjC,A7FAA,CiGAuC,A7FAA,CoFDC,A/FAA,CoDHCD,CAAC,CoDICrG,A7FAAA,AyCJAsG,C2CGCrX,A/FAAA,AoDHF,CAAT,K2CGiB,A/FAA,C+FACC,A/FAAA,CwGCZ,A7FAA,C6FAc9B,A7FAAA,O6FAd,A7FAA,C6FAP,A7FAA,CoFDlC,A/FAA,E+FAkE2B,A/FAAA,M+FAM,A/FAA,C+FACxB,A/FAAA,O+FAP,A/FAA,C+FAe3G,A/FAAA,G+FAf,A/FAA,E+FAlE,A/FAA,K+FA2FmI,A/FAAA,M+FAM,A/FAA,C+FAC5L,A/FAAA,I+FAP,A/FAA,C+FAY,A/FAA,O+FAZ,A/FAA,E+FAqByD,A/FAAA,G+FArB,A/FAA;AiJC7F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHG,AGGC,AIFF,ACGA4L,ANHF,AGXM,AP5CEtG,ACyDP,AKCG6C,A7GFJ,AmDCA,AdAA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOE,AkBfF+S,AdKG,AIGC,AKFF,ACGAtP,APHF,AIXM,AT5CEtG,ACyDP,AOCG6C,AyHAJ,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXMqD,ADQD,A3DAD,AkLGJ,AGAA,AEfMkW,AhJgBN,ACHA,ACGA,AHXE,AdUF,AGAA,ACAA,AEAA,AkBCA,AnCDA,A+KPS,E7EQP9V,A7FAAA,EuFHE1D,AEGAC,AhGHAD,AGGAC,C8KVI,ChIFFqD,A5DQE,AuLZFkW,CnLsBCjjB,AJVElE,A4LJEiZ,C7EQH,AV1DAlO,A/EiDA,AJSA,AZ1DAA,CyG0DCnL,AzFTAsB,AJSAtB,AoBXAuK,CqEWC,A7FAA,C4FDC,ACCArI,A/FDA,AECAA,AyKhBA,AKMH,CvFhDI,A/FAA,AiL0CAiG,AKQI,C7EQd,AHdW,A1FcX,AHdW,CgGcC,AV1DA8C,AnF0DA,AZ1DAA,AsD8CA,CyC/CI,A/FAA,AsD+CH,A5DQP,AsCPO,CoEUC8B,A9FAAA,A2KfV,AjJKUqF,CsEHC7J,A7FAAA,AwKFA4D,CxEgBf,ANHgB,AnFNlB,AJSE,APHgB,CWNCyV,AsCHL,A5DQO,C+GIDvV,A3GMlB,AcNkBA,AlBJEhM,AuLZhB,C9EaegS,A9FAAA,AiDTA8B,C2HJCtJ,AKQNM,CxLcO/F,CwGpBV,AxGoBX,AWpBW,A6CEC,AtBCL,CsEHgB,ADcrB,A5FdqB,ADcrB,A8CZE,AtBCmBsE,CqEWC,ArFT1B,ARS0B,A8KRN,C7EQlB,A7FAA,CqKhBI,AjJKG,AsJGe,CtKDK,CoFQlB,A9FAA,C8FAoBlJ,A9FAAA,C6FFC,A9FAA,AXD5B,CyGC6BuN,AEG7B,AhGH6BA,AGG7B,AwBX6BrE,CtCOG,C4GVDlB,ADcA0P,A5FdA1P,ADcA0P,CwBXC,CoEUhC,A9FAA,IURqC,CsFLhB,ADcrB,A5FdqB,ADcrB,E8FdwCzP,A7FAAA,G0FW5C,A9FAA,C2BRgDqJ,EsEHvB,A7FAA,E6FA2B,A7FAA,SuBGlD;AkHWF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,AjEAG,AIFD,ACGA,AHdM3S,AP5CAiM,AM0DL,A7GFH,AmDCA,AdAA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOE,AkBfA,AVQC,AKFD,ACGA,AHdMjM,AT5CAiM,AQ0DL,AyHAH,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXK,A5DQG,AkLGR,AGAA,AEfMqB,AhJgBN,ACHA,ACGA,AHXC,AdUD,AGAA,ACAA,AEAA,AkBCA,AnCDA,A+KPY,GjFHV,A7FAA,E8CTS,CkDiBL,A7FAA,A2CjBF,A2HIEA,CxEgBC6S,A7FAAA,C0FdCngB,AP5CAiM,A/EiDA,APLAjM,AT5CAiM,AiL0CA,CnLsBC,AmLtBA,CKQOD,EvFlDJ,A/EiDA1L,AhBjDA,CwGuDCkH,A1GSX,AaTWA,AsKbL,ClF1CM,A/FAA,AsLkDM,ChFNL,A7FAA,AwKFAwF,AKQMwC,ChFNL7N,A7FAAA,COKR,CAAU,AiKPV,CAAF,AKQU,C9EKI,A7FAA,C6FACuB,A7FAAA,C8FGnB,A7FAA,E0FdM,A7FAA,A6KMsB,C7EQL,AHdA,A1FcA,AHdA,E6KMb,EAAuB,O9EK7B,A7FAA,C2FX+B,A7FAA,I+FWI,A7FAA,KKNjC,CAAN,IwFMA,A7FAA,E6FAmD,A7FAA,O6FAOsE,A7FAAA,O6FAO,A7FAA,C6FACtE,A7FAAA,e6FAR,A7FAA,C6FAwBqY,A7FAAA,K6FAxB,A7FAA,E6FA+BC,A7FAAA,E6FA/B,A7FAA,C6FAP,A7FAA,C6FHR,A7FAA,C6FGmD,A7FAA;AuIGhG,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHE,AGLwD,AIMxD,ACGEyE,ANHJvW,AGXU,AP/CQ,AC4DlBzJ,AKCC,A7GFD,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOC,AkBfA,AdKC,AILwD,AKMxD,ACGEggB,APHJvW,AIXU,AT/CQ,AC4DlBzJ,AOCC,AyHAD,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXG,ADQCimB,A3DAC,AkLGL,AGAA,AEfK,AhJgBL,ACHA,ACGA,AHVA,AdSA,AIAA,AEAA,AkBCA,AnCDA,A+KPgBwC,ClFDhB,AtGSA,AkBXA,AVEA,G8FQI,AKCAzI,AnGDA,AMCAA,AyCJAiG,CAAC,A4HlBU,ChFkBThV,ADGA,A9FHAA,ADGA,AoDHAlI,A4HlBF,C9EmBG,AJ1DD,AC4DC9I,A3FFA,AL1DD,AC4DCA,CkGFC,A9FAA,AiLLQwoB,CrFId,A/FAA,CmDAE,CAAO9C,EAAP,CiDVUrY,ANad,AvFbcA,ARad,AqLPsB,CjIIPuY,AiIJQwD,EtFON,A/FAA,CwGCC,ANHX,AvFGW,APHX,C8FAP,AGXmB,AjGWnB,AIXmB,CgGcCrJ,ANHAnO,AGXAuH,A1FcA4G,APHAnO,AIXAuH,E4CUhB,EiIJY,EhFNG,A7FAA,C6FAT,A7FAA,A6KMyB,CnFKnC,A9FAA,CiGX6B,A7FAA,A6KMb,CnFKc3G,A9FAAA,IoGGI,A7FAA,C6FAC1K,A7FAAA,CuFHnC,A9FAA,GoGGoB,A7FAA,C6FAoB,A7FAA,I6FApB,A7FAA,C6FDK,A7FAA;AsICzB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGEuY,AHdQjX,AP5CN,ACyDJ+D,AxGDF,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,ArGFE,ACGEkT,AHdQjX,AT5CN,ACyDJ+D,AgICF,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A9GHIyY,AuHGJ,AGAA,AEfI,AhJgBJ,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPgB+C,EtFOdxb,A/FAAA,EwGCEkT,A7FAAA,AyCJAuF,IiIJY+C,CtFOP,A/FAA,C8FzDC,A/FAA,CgGyDCxb,A/FAAA,AoDHA,CiDVC/D,A7FAAA,GsF5CGjI,A/FAAA,AqDsDA0kB,EoDIE,A7FAA,C0FdC,ANYD,AvFZC,ARYD,CwGEE,AHdAxY,A1FcA,AHdAA,A4CUf,E0CtDM,A/FAA,AsLkDmB,CAAC+b,E7EML,AHZD,AP5CA,AnFwDC,AHZD,AT5CA,CsG4CCjQ,AP5CnB,AtF4CmBA,AT5CnB,E+FAqB,A/FAA,IsG4CH,A7FAA,A6KMR,ChFNE,AP5CcxN,AtF4Cd,AT5CcA,CsG4CpB,A7FAA,C6KM8B,EvFlDf,A/FAA,C+FAUI,A/FAAA,I+FAV,A/FAA,G+FAiBF,A/FAAA,K+FAjB,A/FAA,C+FArB,A/FAA,K+FAiD,A/FAA,K+FAKH,A/FAAA,I+FAL,A/FAA,G+FAYG,A/FAAA,K+FAZ,A/FAA,KsLkDvC;ApCQhB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGF,AIFE,ACGEqU,ANHJ,AGXW,AP5CL,ACyDJhS,AKCFnO,A7GFA,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOA,AkBfAA,AdKE,AIGF,AKFE,ACGEmgB,APHJ,AIXW,AT5CL,ACyDJhS,AOCFnO,AyHAA,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXE8jB,ADQC,A3DDC9iB,AkLIJ,AGAA,AEfG,AhJgBH,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPgBynB,EtFOdta,A/FAAA,AqDXA2V,A5DOE9iB,E+GKAmf,A7FAAA,EqFJE3P,AIIA,ArFTA,AdKAA,AMIA,C6FACvQ,ArFTAA,ARSAA,C8KRSwoB,ClFOP3Q,ADFAnE,ArGSA1N,AQPA6R,ADFAnE,CXFG,C4GXF,AP1CC/H,ACyDA,AvFfD,AT1CCA,ACyDA,CkGFX,A9FAA,C2FEauC,A/FAAA,APJE,CuGCD,AGGd,ACCA,ArFTA,AdKc,AIGd,AECA,A8KRsB,CrFIP/K,AECA,AJvDT,A7FsDSA,AGCA,ALvDT,AsLkDiBimB,C7EQP,ANHC,AvFGD,APHC,C+FEA,AEbA,ADcA9Q,ArFTAoJ,AVQA,AGbA,ADcApJ,A8CZA,CmDYC,AV1DAzM,AnF0DA,AZ1DAA,AsD8CAuX,A5DOd,CuGCU,A/FAA,CmGId,A7FAA,CyFJqB,A/FAA,C8FCJ,A/FAA,CwGAQ,AVvDnB,AnFuDmB,AZvDnB,CsLkDU,CxLchB,AkBfA,ClBe0Bnd,CwLdS,ChIJlB,ExDkBjB,AwDlB8Bod,E2CQhB,AnGUkB,AIVlB,C+FAZ,A/FAA,E+FAiC,A/FAA,CoDRlB,CAAf,2DgIIc;ApCQhB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHI,AGGF,AKCEhP,AHdQlL,AP5CN,ACyDJuF,AxGDF,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOE,AIVE,AIGF,AMCE2F,AHdQlL,AT5CN,ACyDJuF,AgICF,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXE6W,AsHWF,AGAA,A9ICA,ACHA,ACGA,AHXA,AdUA,AIAA,AEAA,AkBCA,AnCDA,A+KPa,EtFOX7W,A/FAAA,AqDXA6W,EmDYElR,A7FAAA,AoBXArB,ElCiBE/M,CwLlBM,CvF9CJ,A/FAA,EFgEE,AwDlBA,CmDYC,A3GMAhB,AcNA,C0FdCkE,A7FAAA,CgGcC,AV1DAhI,AnF0DA,AZ1DAA,AsD8CA2iB,AgIIM,EtJHJ,CgEUC,A/FAA,CwGHS,A7FAA,CoFGPpV,A/FAAA,A+BVAlF,CsEHC,AP5Cb,AtF4Ca,AT5Cb,CsG4CcgQ,A7FAAA,C6CEC,CAAC+L,ExDkBhB,CkCjBmB,CAAC,GlCiBGxgB,CwDlBR,EAAWgP,IgDFI,A7FAA,C6FAChP,A7FAAA,CXoBnC,EACE,MwGrBgC,A7FAA,CXqBzBH,AwDnBU,CgDF2B,A7FAA,C6CEC,GgDFb,A7FAA,C6FAjB,A7FAA,C6FAP,A7FAA,AuBGa,CAAzB,IlCkBuB,AwDnBF,CxDmBGM,AwDnBtB,mBxDmBE;AoJPJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHI8L,AGGF,AIFA,ACGEmP,ANHJ,AGXW,AP5CN,ACqDY,AxGGjB,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,AFCA,AJDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQE,AIXEnP,AIGF,AKFA,ACGEmP,APHJ,AIXW,AT5CN,ACqDY,AgIKjB,ALAA,AEAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXEqF,ADQA,A3DFE,AkLKJ,AGAA,AEhBE,AhJiBF,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPgB,CtFGhB,A/FAA,CqDPEA,E2CQExU,AQIAmP,AvGJAnP,AUIAmP,EwFDE,AIFA,AlGEA,AKFA,A2CTA,A5DMEnf,AuLXFknB,ChFaC,AOCA5gB,AtGDA,ASCAA,EwFAE+K,ArGUApM,AOVAoM,AiDTAyR,ADQA4B,C4CAC,A/FAA,CkGGChY,A9FAAA,A+CHT,A4HbS,EnLwBE,C0GVC,ACGA,A3GOAzI,AaVA,ACGA,AqKjBAoiB,CzEcCviB,A7FAAA,C8FGC,A7FAA,CqFJC1D,A/FAAA,AoDRA,CAACokB,A5DME,CAACrkB,C+GCI,A7FAA,E4FEnB,ALAN,AxFAM,ANAN,AiDTiB,C2CQP,AECa6L,AjGDb,AGCaA,C4FDC7J,A/FAAA,AoDRA4Q,C8CWlB,A9FAA,AZLF,AuLXqB,C7EgBC3F,AIFA,AlGEAA,AKFA,AsKdA8W,CzEcC5d,A1GUzB,AaVyBA,AjBHE,CuGEnB,A/FAA,E+FAoB,AEC9B,AjGD8B,AGC9B,A4KdyB,C7EgBvB,A9FAA,A2KhBA,C9Ec8BqH,A9FAAA,C4FDtB,AGGuB,AlGHvB,AIGuB,CkGFC,A7FAA,CsFDCvN,AOCA0D,AtGDA1D,ASCA0D,GwFAnC,A9FAA,CiDTiB,C8CSA,ADAuBqM,A7FAvB,ADAuBA,C4FD9B,AGG+B,AlGH/B,AIG+B,AgDXA,C2CQCL,AOCf,AtGDeA,ASCf,C6FAgBuK,A7FAAA,I2CT1B,CkDSU,ALA3B,AxFA2B,ANA3B,AiDTE,CkDSA,A7FAA,CwFAgD,A9FAA,CmGAC/T,A7FAAA,CsFDzC,A/FAA,E+FA4C,A/FAA,G+FA5C,A/FAA,CsGCgD,A7FAA,CsFDClG,AOCAqB,AtGDArB,ASCAqB,E6FAR,A7FAA,C6FAW4Y,A7FAAA,GsFDpD,A/FAA,C+FAwDvL,A/FAAA,CsGCf,A7FAA,E6FAkBwL,A7FAAA,EsFDE,AOCpB,AtGDoB,ASCpB,CsFDqBvL,A/FAAA,CsGCtE,A7FAA,K6FA4E,A7FAA,EsFDP,A/FAA,E+FAW,AOCApO,AtGDA,ASCAA,K6FAK,A7FAA,CsFDhB,AOCiBsO,AtGDjB,ASCiBA,CsFD9E,A/FAA,C+FAN,A/FAA,KsGC8E,A7FAA,C6FAc3I,A7FAAA,O6FAO,A7FAA,C6FACxC,A7FAAA,O6FAR,A7FAA,C6FAgBuW,A7FAAA,K6FAhB,A7FAA,C6FAd,A7FAA,C6FAJ,A7FAA,E6FA2C/T,A7FAAA,O6FAO,A7FAA,C6FACxC,A7FAAA,O6FAR,A7FAA,C6FAgBuW,A7FAAA,K6FAhB,A7FAA,E6FAuBnU,A7FAAA,O6FAvB,A7FAA,C6FA+BoU,A7FAAA,E6FA/B,A7FAA,E6FA3C,A7FAA,K6FAmFhU,A7FAAA,O6FAO,A7FAA,C6FACxC,A7FAAA,O6FAR,A7FAA,C6FAgBuW,A7FAAA,K6FAhB,A7FAA,I6FAyB,A7FAA,C6FACC,A7FAAA,E6FAD,A7FAA,E6FAKhU,A7FAAA,O6FAO,A7FAA,C6FACxC,A7FAAA,O6FAR,A7FAA,C6FAgBuW,A7FAAA,K6FAhB,A7FAA,C6FAL,A7FAA,C6FAzB,A7FAA;AuIGjK,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHG,AGGD,AIFD,ACGGiF,ANHFlO,AGXO,APvDmB,AvGmE5B,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQC,AIXE,AIGD,AKFD,ACGGkO,APHFlO,AIXO,ATvDmB,AiIqE5B,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GXE,ADQD,A3DFOtR,AkLKR,AGAA,AEhBEonB,AhJiBF,ACHA,ACGA,AHXArF,AdUA,AIAA,AEAA,AkBCA,AnCDA,A+KPgB,EnFKdzQ,A9FAAA,A4KdA8V,ChFUA,AF9DyB,A7F8DzB,AF9DyB,CyGqEvB5H,A7FAAA,AlBNIxf,AsCLJ,C+D/CC,A/FAA,AgC+CAwgB,CsBDC,C2HLC,C9EcC,A9FAA,A4KdAxY,ChFaC,AKhBD,ApGgBC,AOhBD,AfcK,EyGGFsJ,A9FAAA,CXHKpR,AuLXd,AKSkBiqB,ChIJPjZ,A2HLAlF,AjJMb,CAAc8E,EiJNZ,CxEiBe,ANHA,AvFGA,APHA,C4KdCpG,CxEiBC,A7FAA,EuFHEhC,A9FAAA,AiDTf,CtBCN,CsJG+B,C5LEH,AuLX1B,AjJMsBgJ,CtCKKpR,C4DNH,AgIIQqnB,EnFKN,A9FAA,C8FAC,A9FAA,C2BR7B,CtCKgB,CAAoB3nB,E4LFM,CAACioB,ChIJzC,C5DMc,C4DNsB,A5DM9B,M4DNoC,G6CShB,A9FAA,C8FA1B,A9FAA,AiDT8C3oB,AgIId,CAAuB,IhIJb,AgIIV,ChIJoB,AgIItC,gChIJ4B,CAAN;A4FYtC,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHI,AQHqB,ANIvB4M,AGXK,AP5CH3E,AvGwDJ,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A9GHI,AUHqB,APIvB2E,AIXK,AT5CH3E,AiI0DJ,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVE2e,A5DKG,AkLKL,AKhBE,AhJiBF,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPgBiE,EnFKdje,A9FAAA,AiDRAga,CmDIA,A7FAA,AlBDE,C+GFwB,AVhDxB3e,AnFgDwB,AZhDxBA,CyG0DC,A7FAA,E0FtBQ,APpCN,AtFoCM,ATpCN,CiGsDClC,AKlBF,ApGkBEA,AOlBF,A6KcU8kB,CnFKP,AJvDA,A1FuDA,ALvDA,ANoDE,AuLXFne,GhFaG,AECAE,AjGDA,AGCAA,A4KdV,GhFaa0D,A/FAAA,CoDPC,CAAC8V,CyChDZ,A/FAA,CmGwDc,A9FAA,AiLLQ,CAAC4C,GrFIL,AECA,AjGDA,AGCA,C4FDCjmB,A/FAAA,CiGCtB,A9FAA,C8FFgD,A9FAA,C8FEvB,A9FAA,C4FDJ,A/FAA,AoDPK,CAACsjB,AgIGb,CrFIc,A/FAA,EoLJU,CrFIjB,A/FAA,AoDPK,C2COb,A/FAA,AoDPE,CAAkBzM,E2COE,A/FAA,EoDPpB,CAAuB,O2COzB,A/FAA,G+FAmC,A/FAA,AoDPAiN,IAAV,EAAgB,I2COpD,A/FAA,OoLJY;ApCQhB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHIjW,AGGFlR,AIFF,ALAE,AGXG,AP5CD6E,AvGwDJ,AqCCA,A4IAA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQAC,AIXIoM,AIGFlR,AKFF,ANAE,AIXG,AT5CD6E,AiI0DJ,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AGDA,A7GVI,ADOJ5E,A3DFQkB,AkLKR,AKhBC,AhJiBD,ACHA,ACGA,AHXA,AdUA,AIAA,AEAA,AkBCA,AnCDA,A+KPgB2nB,ElFOd9oB,A9FAAA,E2FHEkR,AFtDArM,A7FsDAqM,AFtDArM,ANoDI1D,C4GrCgB,A7FAA,C6F6BlB,A7FAA,A4CUA,C4CAC,A/FAA,AmDAAjB,CCPCinB,AgIGQ2B,ClFOP,AIFAjO,ATvDA,AzFyDA,AKFAA,AXvDA,AgC+CAjH,CiEOC,AGGAjS,AlGHA,AIGAA,CyFzDC,A/FAA,CFiEC,AwDlBR,AtBAJ,ClCkBaQ,CwDlBC,ADOd,A3DFkB,CsCLH,CAAE,CqBOAqjB,A3DFI,C0GKnB,A9FAA,AZLoB,CuGEHlkB,AGGA0W,AlGHA1W,AIGA0W,AZLX,A4LFmB,CvFlDP5Q,A/FAAA,AsLkDQojB,ChIHPxD,CkDQrB,A1GUA,AaVA,C6FAuB9Z,A1GUA9G,AaVA8G,A0CDvB,E4CAU,A/FAA,C+FAgB7J,AGGxB,AlGHwBA,AIGxB,CyFzDS,A/FAA,CoGyDiB,ALzDAyI,AzFyDA,ANzDAA,C+FAjB,A/FAA,CiGsDD,AOCV,AtGDU,ASCV,CoFvD+B,A/FAA,AsLkDf,CrFIgB,AGG9B,AIF8B+C,AtGDA,AIG9B,AKF8BA,A2KLQsc,EhIHN,CAAC1F,E2COzB,A/FAA,CsGCV,A1GUA,AaVA,CsFDuCnkB,A/FAAA,CsGCC+P,A7FAAA,CbUC,EwDlBP,AgIGlB,ErFIN,A/FAA,AoDPmCqU,C2COCrf,A/FAAA,EsGC9C,A7FAA,C2CRkC,C2COxB,AOCwC,A1GUAD,AIXxC,ASCwC,C2CRCkd,C2COC,A/FAA,G+FA1C,A/FAA,E+FA+ChiB,A/FAAA,IoDPvB,E2COxB,A/FAA,AoDPqDiiB,C2COCvS,A/FAAA,CJWvB,GAA2B,CwDlBlC,EAAqC2V,G2CO7D,A/FAA,CoDPwB,C2CO0C,A/FAA,AoDP9D,G2COJ,A/FAA,E+FAuErlB,A/FAAA,M+FAvE,A/FAA,C+FA8E0O,A/FAAA,K+FAK,A/FAA,C+FACC,A/FAAA,Q+FAD,A/FAA,E+FAW,A/FAA,M+FAX,A/FAA,C+FAnF,A/FAA,C+FAN,A/FAA;AgJIJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHG,AGGF,AIFCqC,ACGA,ANHA,AGXE,AP5CE,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQE,AIXC,AIGF,AKFCA,ACGA,APHA,AIXE,AT5CE,AiI0DN,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,A1GVI,A5DIC,AkLKL,A3ICA,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPgB,E9EKdA,A7FAAA,K8FGK7E,A7FAAA,C4FHC,A7FAA,CbUCvH,CiGjEC6F,A/FAAA,CwGuDCuG,A7FAAA,A2CPA8B,CgIESgX,GvFlDL,A/FAA,AsDgDA,CAAC3F,CkDOC,A7FAA,CoFvDC,A/FAA,GwGuDG/b,ACGnB,A9FHmBA,ACGnB,A0KR2B,C7EQPmS,A7FAAA,E0CVP,AgIEiB8M,CxLeP,CAAC,AwDjBAjD,EkDOE,A7FAA,C6FAC,A7FAA,CbUJ,AwDjBV,CxDiBb,CwDjB8BpC,AgIEQ,CAAC2F,C7EQvC,A7FAA,G6FAmC,A7FAA,I6FAnC,A7FAA,C6FZ0B,A7FAA,A0CEb,CmDU4B,A7FAA,C0CVC1F,EgIEZ,C9EKJ,A7FAA,A2KL2B,C9EKrD,A7FAA,E2CPa,CgIEiB,ChIFoBnB,AgIEpC,MhIFD,CAAX;A4FUJ,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,A7DFElV,ACGA,ANHA,AGXE,AP5CIlB,AvGwDR,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQC,AaVCkB,ACGA,APHA,AIXE,AT5CIlB,AiI0DR,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,A1GVG,AsHSH,AKjBA,AhJkBA,ACHA,ACGA,AHXA,AdUA,AIAA,AEAA,AkBCA,AnCDA,A+KPgBof,CxLahB,C0GREle,A7FAAA,C2CXe,CAAD,EAIVgF,EyChDElG,A/FAAA,AsLkDQof,C9EKP,A7FAA,AsKfApD,AjJOAzV,GwEQGrF,ATvDA,ApFuDAA,AXvDA,E+FAEpB,A/FAAA,AsD4CE,CyC7CE,A/FAA,AsD6ChB,EgIMuB,CAACod,C9EKP,A7FAA,GqBRnB,CwEQuB,A7FAA,AsKfvB,AjJOuBhc,CiJPEF,CzEevB,A7FAA,C6FFgD,A7FAA,C6FEvB,A7FAA,AsKf3B,EAA8BtB,CjJO9B,AsJGgB,CAAuB,CtJHPmD,GiJPhC,EAAsCuW,CjJOtC,AsJGgB,EtJHwB,AsJGQ,CLVhD,EAA4C,KKU5B;ApCQhB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHElU,AGGF,AIFE,ACGA,ANHA,AGXE,AP5CIjF,AvGwDR,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A9GHEiF,AIGF,AKFE,ACGA,APHA,AIXE,AT5CIjF,AiI0DR,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,A1GVC,A5DGG,AkLMJ,AKjBE,AhJkBF,ACHA,ACGA,AHXEqG,AdUF,AIAA,AEAA,AkBCA,AnCDA,A+KPgB8Y,ChIjChB,C2CqCEla,A/FAAA,A8BPAoB,GiEOG,A/FAA,CRHGtR,AuLXF,ElFxCEiL,A/FAAA,AgC+CA,AsJGQmf,CrFIP,AGGApT,AlGHA,AIGAA,EZNI,AsCJF1F,C+D/CC,A/FAA,ANmDEjR,CuLXDqK,ClFxCC,A/FAA,EoGyDd,A9FAA,C8FAiBwC,A9FAAA,A0BVA,AsJGQ,C5LCrB,A4LDsBob,CvFlDP1d,A/FAAA,AiLwCb,CvLWgB,C0GMtB,A9FAA,A0BVqBlC,EoEUE,A9FAA,C2KjBC,GKUR,CrFIYpI,A/FAAA,A8BPA,CAAC,CsJGS0K,IrFI7B,A/FAA,AoLJiC,CLVxC,AKUyCA,ELVN,EKUC,CAAUqf,GrFINta,A/FAAA,I8BPd,AsJGU,CtJHpC,AsJGsD,CrFI/C,A/FAA,AoLJ6B,ErFIpC,A/FAA,AoLJyD1O,KAA3C;ApCQhB,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGA6L,AIFA,AT1DgB,AvG2DlB,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQApJ,AIXE,AIGAoJ,AKFA,AX1DgB,AiI6DlB,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AtKPQ3M,AkLMR,AKjBImK,AhJkBJ,ACHA,ACGA,AHVEwB,AdSF,AIAA,AEAA,AkBCA,AnCDA,A+KPgB4b,ElFOd5a,A9FAAA,A0BTAhB,EtCGM3L,AuLXJmK,E7EiBE,A9FAA,C8FACyL,AL5DD,AzF4DCA,AN5DD,CsLqDU2R,CrFIP5X,A/FAAA,A8BNA,CoESP,A9FAA,A2KjBQ,EhFcR,AnGWU,AIXV,A8BNUhE,ClCiBC/K,AmLzBA,CvLWK,AuLXd,KjJQe,AsJEQ,CAACqoB,ExLe5B,CAAuBvnB,AkCjBA,EAArB,CAHsC,ClCoBxC,AkCfE,GlCe4B,CwLfd,CAAwBmoB,OxLeDnoB,EwLfvB,ExLec,CAAcoD,IAAd,EAAoB;AoJPlD,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHC,AGGA,AIFC,ACGA,ANHA,AJvDI,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHQE,AIXD,AIGA,AKFC,ACGA,APHA,ALvDI,AiI0DN,AHAA,ANAA,AcAA,ArHDA,AuECA,AFDA,A0ECA,AtKPK,AkLML,AKjBG,AhJkBH,ACHA,ACGA,AHRE,AdOF,AIAA,AEAA,AkBCA,AnCDA,A+KNgB,CrFpBD,A/FAA,E+FuBZd,A/FAAA,GiGCG,ArGUA3D,AOVA,CoGGC6L,A7FAAA,GmF1DG,AjGiEA,AEjEA,EiG+BK,A/FAA,C+FAf,AEwBa4D,ArGUA,AIlCb,AGwBaA,E0FvDEhQ,AjGiEb,AEjEaA,MyG0Db,ANHI,AJvDI,AnF0DR,APHI,ALvDI,CyG0DY+S,A7FAAA,I6FApB,ANHwB,AJvDA,AnF0DxB,APHwB,ALvDA,C+FApB,A/FAA,EyG0DuB,AV1DA,AnF0DA,AZ1DA,KyG0D3B,AV1DgCvI,AnF0DhC,AZ1DgCA,CmGuDhC,A9FAA,E8FAmCwF,A9FAAA,C0FvDR,A/FAA,G+FAYtF,A/FAAA,ImGuDI,A9FAA,C0FvDhB,A/FAA,EmGuDmB8C,A9FAAA,M8FAM,A9FAA,Y8FAYyD,A9FAAA,M8FA7B,A9FAA,C8FRa,A9FAA,C8FQwB,A9FAA;A6IG1E,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHA/C,AOCE,ALAA,AGXE,AP5CE,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A9GHAA,ASCE,ANAA,AIXE,AT5CE,AiI0DN,AHAA,ANAA,AvGDA,AuECA,AFDA,A0ECA,AtKPC,AkLMD,A3ICA,ACHA,ACGA,AHRE,AdOF,AIAA,AEAA,AkBCA,AnCDA,Q+FbQ0K,A7FAAA,GsF5CGrO,A/FAAA,IiGsDI,AFtDT,A7FsDS,AFtDT,CiGsDU,A/FAA,E6FtDEG,A/FAAA,CsG4CC,A7FAA,G6FAG,A7FAA,CsF5ChB,A/FAA,IsG4CqBwN,A7FAAA,Y6FAL,A7FAA,C6FAlB,A7FAA,GwFUW,A/FAA,E+FA8B,A/FAA,yB+FA9B,A/FAA,C+FAf,A/FAA;AgJIA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ADAA,APCA,AoCDA,A7DCA,AqHDA,ApEHAhK,AGGApL,AKCE,AHdE,AP5CE,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOE,AIVFoL,AIGApL,AMCE,AHdE,AT5CE,AiI0DN,AHAA,ANAA,AvGDA,AuECA,AFDA,A0ECA,AYDA,AKlBE,AhJmBF,ACHA,ACGA,AHRE,AdOF,AIAA,AEAA,AkBCA,AnCDA,A+KPgBukB,MlFOV,AKCAxb,AnGDA,AMCAA,AqKnBA,C7EkBC1H,AtGOA,AQPAA,A2KlBA4F,C3EKCkP,AP5CA,AtF4CAA,AT5CA,AsLkDQoO,GxLcL3mB,CAAC,C2GNV,AV1DWV,AnF0DX,AZ1DWA,AiLuCA,CAAC4R,AKWQ,CrFIP,AQIA,AHdX,AxGoBW,AIVA,AUIA,AHdX,A6KMmBqW,CrFIP,AnGUd,AIVc,EJUEvnB,CiGhEZ,AjGgEa,AEhEb,EoGyDN,A9FAA,C8FAsBuQ,AtGOAxQ,AQPAwQ,A2KlBf,CAAgBtF,CKWP,ELXT,CAAD,AKW6B,ClFOP,A9FAA,C8FAC7K,A9FAAA,AgLPb,ExLce,AmLzBA,CnLyBCd,CmLzBC2L,GAAG,E7EkBpC,AtGOE,AQPF,E8FAwC,AtGOAjL,AQPA,CROC,EAAvC,CmGVa,A/FAA,CJU8BH,CmGVC,A/FAA,E+KfEgR,CnLyBC,CAAC5Q,CsGPlD,A9FAA,E8FAqD,A9FAA,CROR,AmLzBS,CnLyBCF,AmLzBA+Q,ChFeCxP,A/FAAA,I+FAV,A/FAA,E+FAgB,A/FAA,EJUE,CAACtB,AmLzBlC,CnLyBiC,AmLzB9D,CnLyB2C,CmLzBuB;A/BmBpE,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGA,AIFA,ACGE,ANHF,AJvDG,AvGwDL,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,A9GHE,AIGA,AKFA,ACGE,APHF,ALvDG,AiI0DL,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKPA,AkLMA,AKlBI,AhJmBJ,ACHA,ACGA,AHRE,AdOF,AIAA,AEAA,AkBCA,AnCDA,A+KPgBiK,M9EKV,A7FAA,CwFAC6F,A9FAAA,CoGGC,A7FAA,A0KRQ7F,CrFIP,A/FAA,ARHAzK,CuLZC,EKWU,C9EKP8P,A7FAAA,A2KLQrF,CLXPzG,CxEmBC2H,A7FAAA,EuFHb,A9FAA,AiLLc,CrFIE7J,A/FAAA,AoLJQgoB,C5LC1B,CyGIoB,A9FAA,CmGAd,ALAe,AxFAf,ANAe,C4FDZ,AQIa,ANHAne,AjGDb,AUIa,APHAA,AXJA,C+GOCuT,A7FAAA,AqKnBb,CAAc,ChFeC,A/FAA,AoLJT,C9EKU,A7FAA,A2KLQtW,GnFKL,A9FAA,C8FAC0H,A9FAAA,EoGGtB,A7FAA,C0KRQ,CAA0B,C9EKxC,A7FAA,E6FAmCR,ACGA,A9FHAA,ACGA,GuFHnC,A9FAA,IiLLwC6Y,C9EKG,A7FAA,E8FGzC,A7FAA,C4FH4Crb,A7FAAA,C8FGC,A7FAA,E0KRA,ErFI/C,A/FAA,AoLJmD,C9EKC,ACGA6R,A9FHA,ACGAA,U6FAL,A7FAA,E4FHiBpO,A7FAAA,C8FGCpF,A7FAAA,IqKnBzD,CzEgB2B,A7FAA,AsKhBjC,CzEQ8C,A7FAA,C6FQwB,ACGA,A9FHA,ACGA,C6FACuT,A7FAAA,S6FA1B,A7FAA;AsIAjD,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHC,AGGC,AIFA,ACGE,ANHF,AGXE,APvDC,AvGmEL,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHME,AITD,AIGC,AKFA,ACGE,APHF,AIXE,ATvDC,AiIqEL,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKPI,AkLMJ,AKlBG,AhJmBH,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPoBsI,CrFEL,A/FAA,C+FAf,A/FAA,C6F1E2B,A/FAA,E+FsBtB,A/FAA,CmGuDC1X,ArGQA/K,AORA+K,AXJEpQ,E+GOA,AHdAgZ,A1FcA,AHdAA,E6KMY8O,GxLaP,CqGRX,A9FAA,AXJE,C+GOW7b,A7FAAA,CuFHC,ArGQC7G,AORD,AXJE,G4GPd,A7FAA,CXmBiB,CqGRAwL,AGXA,AjGWAA,AIXA,A6KMU,C7EQT,A7FAA,A0KRUqY,C7EQTvJ,A7FAAA,EdKG,G2GLlB,A7FAA,C0KRuB,CAAX,CnFKJ,A9FAA,CPQd,C2GL+B,A7FAA,CuFHC,A9FAA,K8FAK9O,A9FAAA,IoGGnC,A7FAA,E6FAyC,A7FAA,IuFHX,A9FAA,CoGGgB+O,A7FAAA,GuFHG,A9FAA,C8FAC,A9FAA,C8FAC1T,A9FAAA,CoGGV,A7FAA,G6FAcA,A7FAAA,GuFHG,A9FAA,C8FAC2G,A9FAAA,GoGGG,A7FAA,C6FAC8M,A7FAAA,K6FAtB,A7FAA,SuFH7B,A9FAA,C8FZkC,A9FAA,C8FYiC,A9FAA;A6IGnF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AEAA,AIAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHApR,AGGE,AKCC,ANHD,AGXI+K,AP5CF/R,AvGwDJ,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,AFAA,ACAA,AIAA,ARAA,AlBAA,AFDA,AlHOE,AIVFgH,AIGE,AMCC,APHD,AIXI+K,AT5CF/R,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKPQ,AkLMR,A3ICA,ACHA,ACGA,AHTE,AdQF,AIAA,AEAA,AkBCA,AnCDA,A+KPiB,G7EbW,A7FAA,C6FqBxB,AV1DAA,AnF0DA,AZ1DAA,EsG4CE+R,AxGoBA/T,AWpBA+T,AuBKAjJ,C+DjDC,A/FAA,E+FAE,A/FAA,AsLgDO,GxLgBJ,CwGpBC,A7FAA,CuBKC,CiEKC,AnGUA,AIVA,C+FAC,AKVA,AP7CX,A7FuDW,AOVA,AT7CX,CgCkDYxC,GsELGzF,AxGoBApE,AWpBAoE,GuBKG,IsELP,AxGoBd,AWpBc,C6FAY4Q,A7FAAA,OuBKO1H,IsELI,A7FAA,C6FAC2H,A7FAAA,CuBKtC,CAVsC,CAYtC,CiEGa,A/FAA,E+FA+B,A/FAA,KoGVP,A7FAA,E6FAc,A7FAA,I6FAd,A7FAA,C6FAvB,A7FAA,C6FAV,A7FAA,IwFUS,A/FAA,C+FAf,A/FAA;AgJIA,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHA1K,AGGE9J,AIFA,ALAA,AGXG,AP5CDZ,AvGwDJ,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,AlBAA,AFDA,AlHOE,AIVF0K,AIGE9J,AKFA,ANAA,AIXG,AT5CDZ,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKPK,AkLML,AKlBE+iB,AhJmBF,ACHA,ACGA,AHPE,AdMF,AIAA,AEAA,AkBCA,AnCDA,A+KPa,ElFOXniB,A9FAAA,A2KlBAmiB,ElFvCE/iB,A/FAAA,CsG0CA,A7FAA,CXsBE0B,C0GTCsL,A7FAAA,EoFvDE,A/FAA,EsG4CE,AP5CA,AtF4CA,AT5CA,CoGyDC,AtGOA,AQPA,E8FAE,A9FAA,A2KlBA,ChFeC,A/FAA,A+KfAnG,ChFeC,A/FAA,CsGCd,A1GSezG,AaTf,EyFFmD,A9FAA,CkGEjC,ATvDAmD,ApFuDA,AXvDAA,CwGuDC,A7FAA,AsKhBP,CzEgBQ8E,A7FAAA,CsKhBCF,ElFvCZ,A/FAA,CFgET,AmLzBwB,CAAC3L,ClFvCC,AjGiExBiF,AEjEwB,CwGuDC,A7FAA,C6FACuL,A7FAAA,GsKhBhB,CAAZ,CnL0BS,GmGXI,AnGWAvL,AIXA,E+FAyB,AOCtC,AtGDsC,ASCtC,KbUoB,IAAIC,CmGXwBlD,A/FAAA,I+FAV,A/FAA,CJWR,CmGXwB,AnGWvBmD,AIXuB,KJW9B,KAAiBvB,SAAvC,CADF,KAEK,IAAI,CAACqB,OAAL,EACH,OAAO,KAAP,CAT8C,CAWhD;AoJXF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGAZ,AIFA,AFXI,AP5CA,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A9GHE,AIGAA,AKFA,AFXI,AT5CA,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AYDA,AKjBE,AhJkBF,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPS,ElFOPA,A9FAAA,G8FAG,A9FAA,AgL9BG,C9E4BF2L,A7FAAA,AsKfA+T,C7EiBC,A9FAA,AgLPI6B,ErFIF,A/FAA,C6FtDC,A/FAA,AiLwCA,EKbF,CAuBS,C9EKf,A7FAA,CoFvDa5lB,A/FAAA,AiLwCA4D,C7EiBCS,AIFA,AlGEAA,AKFA,GyFET,A9FAA,EkGFcmM,ATvDX,ApFuDWA,AXvDX,CoGyDY,A9FAA,CgLPLrL,CLVf,EhFcwBnD,AFtDA,A7FsDAA,AFtDA,AiLwCA+hB,ClFxCpB,A/FAA,CsLkDgB,CvFlDO,A/FAA,CiGsDpB,A/FAA,A+KdqB,AKUJ,C9EKV,A7FAA,EsFDiB,A/FAA,A+KdApY,CzEeC,A7FAA,EsKfE,CAAC3L,EzEeEwQ,A7FAAA,IsKfN,GAAanG,GzEeZ,A7FAA,GsKfR,CzEe2B,A7FAA,C6FAC,A7FAA,C6FACwB,A7FAAA,O6FAO,A7FAA,C6FACuO,A7FAAA,CsFD7D,A/FAA,iBsGCc,A7FAA,C6FZkC,A7FAA,C6FYiC,A7FAA;AuIGnF,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHC,AGGG,AIFF,ACGA,ANHA,AGXI,AP5CA,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWE,AIdD,AIGG,AKFF,ACGA,APHA,AIXI,AT5CA,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKRI,AkLOJ,AKhBEoM,AhJiBF,ACHA,ACGA,AHRE,AdOF,AIAA,AEAA,AkBCA,AnCDA,A+KPYrjB,CrFEG,A/FAA,C+FAf,A/FAA,A+KXEqjB,InL2BIvhB,AJlBE9E,A4LAIgD,C7EQL7B,ANHA4O,AvFGA5O,APHA4O,A2BLAM,CoEOC,A9FAA,CmGCN,A7FAA,C6FAQ,AV1DA1I,AnF0DA,AZ1DAA,EiLyCE,C7EgBCsE,ALzDA,AjGoEX,AQXWA,ANzDA,ANkDE,AuLTF2X,AKSM,CAAC5e,CxLkBL,CiGpEC,A/FAA,ANkDE7F,CuLTN,AjJSV,EiJTiB+K,AKSP,CnFKV,A9FAA,A2BLkB,AsJAM4f,C7EQxB,AV1DmB1f,AnF0DnB,AZ1DmBA,AgCkDA,CAACsB,CyEQCoK,ANHA9F,AvFGA8F,APHA9F,CiLLO,CvFlDd,A/FAA,AiLyCJ,AKSmB+Z,CvFlDLvf,A/FAAA,ANkDE,C0GOpB,A9FAA,AZPqB5K,AuLTF4L,EjJSE,C+DlDvB,A/FAA,AiLyCwB,AjJSA6E,CiJTCxQ,C7EgBC4D,AKC9B,AnGD8BA,AMC9B,E0KRwB,CAAeuB,ELT7B,CAAV,C9EcqC,A9FAA,C8FAC,A9FAA,A2BLtC,AsJAwB,ClFOlB,A9FAA,AgLPI,C5LAgB,CAAxB,CyGKmC,A9FAA,C+FEM,A9FAA,C6FFC0G,A9FAAA,I+FEIU,A9FAAA,G6FFX,A9FAA,E8FAgB,A9FAA,S+FEV,A9FAA,K8FAwB3I,A9FAAA,S8FAjE,ADFmC,A7FEnC,ADFmC,E+FEyC,ADFAoM,A7FEA,ADFAA,Q8FAzC,A9FAA,C8FArC,A9FAA,C8FhBgD,A9FAA,C8FgByC,A9FAA;A6IG3F,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHA9B,AGGM,AKCL,AHdK,AP5CA,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWI,AIdJA,AIGM,AMCL,AHdK,AT5CA,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A0ECA,AtKRItO,AkLOJ,AKfE,AhJgBF,ACHA,ACGA,AHPE,AdMF,AIAA,AEAA,AkBCA,AnCDA,A+KPS,E5LALA,G4LzBI,CtJ0BFoQ,ElCiBE5K,CmL1BCwhB,C3EECjc,AP5CA,AjGoEN,AWxBMA,AT5CA,ANkDE,G0GOC,A9FAA,AZPE,C4GND,A7FAA,AuBOZ,CiEGa,AFtDA3K,A7FsDA,AFtDAA,CiGsDC,A/FAA,A8BHA,CsEPC,A7FAA,AfMb,C0GOE,A9FAA,C2Kfa,CAAC2L,ClF1CV,A/FAA,AgCmDW6E,CsEPC4H,A7FAAA,CwKFH,EAAM/N,ClF1CC,A/FAA,C+FApB,A/FAA,EsG4CW,AP5CY,AtF4CZ,AT5CY,EsG4CEoO,A7FAAA,AwKFZ,AjJSH,EiJTiBsL,ClF1CCxZ,A/FAAA,AgCmDA,CsEPjB,A7FAA,E6FAX,A7FAA,AwKFa,ClF1CU,A/FAA,AiL0C3B,ChFYa,A/FAA,A8BHwBiG,EiEGE,AFtDA,A7FsDA,AFtDA,K+FAKhG,A/FAAA,GgCmDZ,C+DnDO,A/FAA,G+FAY,A/FAA,AgCmDA,CAAC,CAACqB,E+DnD1B,A/FAA,C+FAvB,A/FAA,IgCmDwD,C+DnDC,A/FAA,AgCmDA2G,K+DnDKjI,A/FAAA,I+FAL,A/FAA,CiGsDhD,A/FAA,C+FAf,A/FAA,C6FtD2E,A/FAA,K+FAKA,A/FAAA,CgCmDhE,CAhBwB,CAkBtC,C+DrDyE,A/FAA,C+FAUK,A/FAAA,I+FAtB,A/FAA;AkJ0D/D,ACCA,AFAA,AOAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHAsD,AGGK,AIFH,ALAA,AJvDI,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWI,AIdJA,AIGK,AKFH,ANAA,ALvDI,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FNI,AkLMJ,AKfC,AhJgBD,ACHA,ACGA,AHLE,AdIF,AIAA,AEAA,AkBCA,AnCDA,A+KPK,GAlCY,G5LmCT9N,C8GID8P,ALAA9C,AxFAA8C,ANAA9C,C0FvDC,AjGoEA7M,AEpEA,CNmDG,GIiBC,AJjBEZ,CqGnDDK,AjGoEAA,AEpEAA,EiGsDE,A/FAA,C+FAC,A/FAA,CRHG,CyGIjB,A9FAA,AXJkBA,CqGnDd,AjGoEE,AEpEF,CwGuDJ,A7FAA,CwFAmB,A9FAA,CPaC,C0GbCmQ,A1GanB,AabmBA,CjBJnB,CIkBE/K,CqGdJ,A9FAA,C8FlBgD,ArGgC1C,AOhC0C,C8FkBtB,A9FAA,EPcjB7E,IAAI,CAAC,CAAD,CAAT,E0GdiC,A7FAA,CsFDxB,AOCyB,AtGDzB,ASCyB,EsFDE,A/FAA,EsGCH,A7FAA,E6FAOsL,A7FAAA,O6FAP,A7FAA,E6FAgB,A7FAA,csFDxC,A/FAA,C+FAf,A/FAA,QsGCuC,A7FAA,E6FAyCmE,A7FAAA,Q6FAzC,A7FAA,C6FArC,A7FAA,C6FfgD,A7FAA,C6FeyC,A7FAA;AuIG3F,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHA9B,AOCE,ACGF,AHdM,AP5CA,AvGwDN,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A9GHAA,ASCE,ACGF,AHdM,AT5CA,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A3ICA,ACHA,ACGA,AHLE,AdIF,AIAA,AEAA,AkBCA,AnCDA,A+KPIic,EAAAA,O7EQKlU,A7FAAA,C0FdCtL,A7FAAA,GsF5CG7C,A/FAAA,CsG4CC,A7FAA,CwFUC,A/FAA,C+FAC,AFtDV,A7FsDU,AFtDV,EyG0DN,A7FAA,C0FdmB,A7FAA,A6KME,E7EQA,A7FAA,A0KRE,EhFNjB,A7FAA,E6FAmB,A7FAA,mBwFUV,A/FAA,E+FA+B,A/FAA,IoLJZ,arFInB,A/FAA,C+FAf,A/FAA;AgJIA,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AMAA,ARCA,AoCDA,A7DCA,AqHDA,ApEHAoG,AGGI,AIFF,ACGA,ANHA,AGXM,AP5CH,AvGwDL,AiLCA,ADAA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWI,AIdJA,AIGI,AKFF,ACGA,APHA,AIXM,AT5CH,AiI0DL,AHAA,ANAA,AvGDA,AqEAA,A5FPI,AkLOJ,A3ICA,ACHA,ACGA,AjBDA,AIAA,AEAA,AkBCA,AnCDA,A+KPQ,M7EQFhC,A7FAAA,CuFHCuG,A9FAAA,CPaCrN,AwLlBMyZ,C5LAJze,CIkBA,AwLlBM,ClFOL,AKCA,AnGDA,AMCA,ClBRP,C4LAe,C7EQL,A7FAA,AlBRC,CuGIA,AKVA2H,ApGUA,AOVAA,CwFUC,AGGAqE,ADFd,AjGDc,AIGAA,ADFd,CiLLqBmd,C7EQrB,A7FAA,CuFHiB,A9FAA,EiLLA,ChFNG,AxGwBAtqB,AWxBA,C6FAC+I,A7FAAA,C0FWrB,A9FAA,AiLL4BwhB,CnFfoB,A9FAA,C8FoBxB,A9FAA,CPatB,EAAyB,CsGXlB,AEbI,AhGaJ,AGbI,C2FagBnd,AEbAgM,AhGaAhM,AGbAgM,A6KMZ,EAAX,OrFIO,AGGJ,AlGHI,AIGJ,E2FH+B,A/FAA,EkGGE,A9FAA,GgGbG,A7FAA,C6FAC1N,A7FAAA,C2FaC4B,A9FAAA,GgGbF,A7FAA,E6FAO,A7FAA,K6FAP,A7FAA,C6FAhC,A7FAA,C6FAP,A7FAA,E2FaoC,A9FAA,C8FAoBF,A9FAAA,S8FA5D,A9FAA,M2FHW,A/FAA,E+FAkEnI,A/FAAA,S+FAlE,A/FAA,C+FAf,A/FAA;AgJIA,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,ApEHAgK,AGGG,AEbI,APrDF,AvGiEL,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWM,AIdNA,AIGG,AGbI,ATrDF,AiImEL,AHAA,ANAA,AvGDA,AqEAA,A5FPQrO,AkLOR,A3ICA,ACHA,ACGA,AHNE,AdKF,AIAA,AEAA,AkBCA,AnCDA,A+KPQ,GlFJ6C,AL7E1B,AzF6E0B,AN7E1B,CNiFnBA,CqGlDH,A/FAA,CgCoDCuQ,EsJFQ9K,CtJEL,GAAGuG,GiEEG,A/FAA,AoLJM,CrFIL,A/FAA,ARJI,E4LAIgT,C5LADlf,AsCEJ,CAACuQ,AsJFM,GAACgX,C5LAnB,Q4LA4B,CtJElC,AsJFmCD,KrFItB,A/FAA,E+FAyB,A/FAA,IoLJhB,GAAyBC,GrFIC3iB,A/FAAA,G+FAV,A/FAA,E+FAe,A/FAA,CoLJG,CAACyiB,UAAnD;ApCQR,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,ApEHE,AGGA1iB,AIFA,ACGA,ANHA,AJvDE4C,AvGwDJ,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWM,AIdJ,AIGA5C,AKFA,ACGA,APHA,ALvDE4C,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,A5FPQvH,AkLOR,A3ICA,ACHA,ACGA,AHNE,AdKF,AIAA,AEAA,AkBCA,AnCDA,A+KPQ,ElFON2E,A9FAAA,EyFzDE4C,A/FAAA,ANkDIvH,C0GOH,A9FAA,CmGCC,A7FAA,AoBNAgiB,CoEKC,AIFAhM,ALAAxI,AJvDA,AzFyDA,AKFAwI,ANAAxI,ALvDA,CsLkDOsc,CrFIL,AFtDA,A7FsDA,AFtDA,ANkDI,C4LAG,E5LAA,C8GKd,ACGW,ANHX,AxFAA,ACGW,APHX,AiLLiBlH,C5LAX,E0GOQje,AIFA,ALAA,AJxDX,AzF0DWA,AKFA,ANAA,ALxDX,AsLmDiB,CtJEL,AsJFMgB,C7EQLia,A7FAAA,CwFDX,A9FAA,C8FAa/b,AIFA8G,AlGEA9G,AKFA8G,AqBHAuB,CmEGlB,A9FAA,C8FtBgD,A9FAA,C8FsB3B,A9FAA,CoGGjB,A7FAA,A0KRgB,ClFOf,A9FAA,AgLPC,ElFOmB,A9FAA,A0BLA,CAAC+V,CyEMC,A7FAA,C4FHb,A7FAA,EsFDgBrd,AOC9B,AtGD8BA,ASC9B,GsFDA,A/FAA,IuGII,A7FAA,I6FAqC,A7FAA,C6FAC,A7FAA,K6FAK6H,A7FAAA,AoBN/C,cyEM0C,A7FAA,C6FAoBC,A7FAAA,S6FA9D,A7FAA,E6FAyE,A7FAA;AsIA3E,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,ApEHC,AGGG,AIFF,ACGE,AHdE4M,AP5CFzV,AvGwDJ,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWM,AIdL,AIGG,AKFF,ACGE,AHdEyV,AT5CFzV,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A3ICA,ACHA,ACGA,AHNE,AdKF,AIAA,AEAA,AjBAA,A+KPQ,CrFEO,A/FAA,E+FEZU,A/FAAA,C6FtDCV,A/FAAA,EsG4CEyV,A7FAAA,AuBQA4I,CwEGC7hB,A7FAAA,C2KLOwjB,C7EQLjE,AV1DA,AnF0DAA,AZ1DA,E+FAE,A/FAA,CiGoDI,AnGgBHna,AIhBG,AoLFG,CrFElB,AOGE,AFXW,ApGQb,ASGE,AFXW,CXwBP,C2GVF,A3GOyB,AcPzB,A0KRiBqkB,C9EKL,ACGA,AHdA,AxGwBA,AabA,ACGA,AHdA,AuBQA,CwEGd,A7FAA,A2KLqB,CAACpI,CtJEL,CsERCtZ,AP5CA8C,AtF4CA9C,AT5CA8C,IgCoDI2F,C+DpDb,A/FAA,CyG0DepL,A7FAAA,A0KRL,ChFNL,A7FAA,CgGcA,AHdY,AP5CA,AnF0DZ,AHdY,AT5CA,AsLkDpB,E7EQsBuF,A7FAAA,G0FdGwN,A7FAAA,CgGcjB,A7FAA,AoBNG,EyEMiB,A7FAA,CoBNC,EAAlB,GAAuB,KsERd,A7FAA,AuBQmB,CsER/B,A7FAA,C6FAV,A7FAA,EuBQJ;AkHMF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,ApEHAjK,AGGI,AIFF,ACGIoK,ANHJ,AGXG,AP5CC,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWK,AIdLpK,AIGI,AKFF,ACGIoK,APHJ,AIXG,AT5CC,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FRQ,AkLQR,A3ICA,ACHA,ACGA,AHLE,AdIF,AIAA,AEAA,AjBAA,A+KPQ,KxLUO,C2GFTA,A3GWF,AcXEA,AoBLAlI,CwEECiK,ALAApN,AxFAAoN,ANAApN,CiLLOyc,CtJGL,CyEKC,A7FAA,C6FACxd,AV1DA3B,AnF0DA2B,AZ1DA3B,ANiDI,A4LCE,C9EKf,ALAA,AxFAA,ANAA,CXNezK,AsCIJsQ,CsJHOgX,CrFIL,AOCA,ALAA,AJvDT,A7FsDS,ASCA,ANAA,ALvDT,CiGsDU,AQIN,AvGJM,AUIN,AoBLM,EyEKEhiB,AV1DA,AnF0DAA,AZ1DA,CwGuDhB,A7FAA,C8FGQ,ANHR,AvFGQ,APHR,C8FxBgD,A9FAA,A2BsB7B,CyEKCuF,ANHA,AvFGAA,APHA,A2BFpB,C+DrDqBH,A/FAAA,ANiDR,CsCIS,AsJHM,E7EQpB,A7FAA,AlBToBpK,C+GSxB,AV1DY,AnF0DZ,AZ1DY,AsLkDe,E5LDzB,AsCIqB8P,C+DrDC,A/FAA,CNiDK,E4LCf,CvFlDd,A/FAA,EsLkDoC2O,EAAtB,GAA2B,CtJGvB,GAAqBzO,GAArB,CAAtB,AsJHkB,GrFIL,A/FAA,AoLJ2CoT,ErFIJ,A/FAA,A8BDA,EsJH9C,EtJGkDxT,QAAQ,KAAK2R,WAAW,IAAIA,EiECvE,A/FAA,C+FAf,A/FAA,Q8BDiG,KAAK,CAApC,CAAZ,EAAoD,KAAKzR,aAAL,GAAqByR,WAArB,CAApD,KAA0F,KAAKzR,aAAL,GAAqB2R,UAArB,CAzBxG,CA2BtC;AkHGF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,ApEHAjjB,AGGI,AIFF,ACGG,AV1DC,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A9GHAA,AIGI,AKFF,ACGG,AZ1DC,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FRY,AkLQZ,A3ICA,ACHA,ACGA,AjBDA,AIAA,AEAA,AjBAA,A+KPQ+qB,IAAAA,C7EMJ,A7FAA,CqFFE,A/FAA,C+FAC9qB,AOCAyb,AtGDAzb,ASCAyb,CyFEC,A9FAA,CgLPK,C5LDGza,A4LCF6pB,CvFlDH1pB,A/FAAA,EoGyDEoM,A9FAAA,AgLPA,CrFIb,A/FAA,AoLJQ,CrFIO6B,A/FAAA,AoLJI4K,E9EKjB,ATvDI,ApFuDJ,AXvDI,EsLkDE,CrFIR,AOCoB,ATvDA,A7FsDpB,ASCoB,AXvDA,AsLkDI,C9EKtB,ATvDI,ApFuDJ,AXvDI,CNiDM,CuGKW5K,A/FAAA,CRLO,G0GQtB,A9FAA,C2FHR,A/FAA,EoLJwB2b,ElFOQhmB,A9FAAA,MgLPA,EAAI,ClFO5B,A9FAA,I8FAqC,A9FAA,K8FAK2I,A9FAAA,c8FAL,A9FAA,K8FAwB3I,A9FAAA,S8FAjE,A9FAA,E8FA4E,A9FAA;A4IChF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAM,AIFJ,ACGC,ANHD,AGXE,AP5CC,AvGwDL,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A1GAM,AKFJ,ACGC,APHD,AIXE,AT5CC,AiI0DL,AHAA,ANAA,AvGDA,AqEAA,A5FRgB/D,AkLQhB,A1IFA,ACGA,AHJE,AdGF,AIAA,AEAA,AjBAA,A+KPY,G7EIV,A7FAA,I4FCK0a,ALAAjN,AxFAAiN,ANAAjN,A2BDA4C,CtCLSrQ,C+GSP,AHdAqY,A1FcA,AHdAA,I6KMU0R,C9EKjB,A7FAA,CwFAA,A9FAA,EmGAe,A7FAA,CwFAC,A9FAA,EXNU,AsCK1B,CwECA,AFXE,A3FWF,AFXE,AfKyB9pB,A4LCF,CAAC+pB,CnFK1B,A9FAA,A2BDqBvZ,CmEzB2B,A9FAA,C8F0BzB,AGXA2I,AjGWA,AIXAA,C6KMN,CtJIQ,CAAC1I,AsJJhB,G5LDgB,C4GLxB,A7FAA,AfKY,CAAyBlQ,AsCKlB,CAAW,EtCLlB,GsCKuB6P,aAAhB,CAArB,CA5BsC,CA8BtC;AkHEF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAK,AIFH,ACGEoI,AHdA,APlDC,AvG8DL,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHUI,AQVC,AKFH,ACGEA,AHdA,ATlDC,AiIgEL,AHAA,ANAA,AvGDA,AqEAA,A5FRa,AkLQb,A1IFA,ACGA,AjBDA,AIAA,AEAA,AjBAA,A+KPS,GvFvFkB,A/FAA,CyG+FvBA,A7FAAA,CwFNuB,ALpDtB,AzFoDsB,ANpDtB,AsLgDG,ClFSF,A9FAA,CkGFCrL,A7FAAA,A2KLI4L,C7EQH,A3GSAxT,AcTA,C6FAC,A7FAA,E0FdE4T,AxGuBA,AWvBAA,A6KIH,C9EON,A7FAA,A2KLc,C7EQR,A7FAA,CdSM,C0GZC,ACGA,A9FHA,ACGA,G0FdX,AxGuBcha,AWvBd,CgGcI,A7FAA,C4FHN,A7FAA,C8FGmB,A7FAA,C0KRL0L,CxLiBF,CAAU,C2GThB,A7FAA,C6FAJ,A7FAA,A0KRgB,EAAI,kBxLiBsBvF,EAAE,GAAG,OAAOA,EAAE,CAACE,OAAV,GAAoB,GAAvB,GAA6B,EAArD,CAAV,CAAV;AoJTJ,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAI,AIFF,ACGC,ANHD,AGXC,AP5CC4B,AvGwDJ,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHUI7B,AQVA,AKFF,ACGC,APHD,AIXC,AT5CC6B,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,A5FRS,AkLQT,A1IFA,ACGA,AHHE,AdEF,AIAA,AEAA,AjBAA,A+KPY,IvFlDRA,AjGmEA7B,AEnEA6B,GwGuDGgG,ALAAb,AJvDA,AjGmEA,AaZAa,ANAAb,ALvDA,AgCuDAe,ClCYC7H,CiGnEC,A/FAA,M+FDJ,AjGoED,AEpEC,CmGwDH,A9FAA,CmGAA,A7FAA,CbYgBH,AkCZhB,CmEAiB,A9FAA,CmGAC,A1GYhB,AaZgB,CqBAC,GmEAnB,A9FAA,CmGAA,AL5BgD,AxF4BhD,AN5BgD,C8F4BxB,A9FAA,A2BAxB,CA/BsC,CAiCtC;AkHCF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGD,ANHC,AGvEwF,APgBtF5B,AvGwDJ,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHUI,AaZF,ACGD,APHC,AIvEwF,ATgBtFA,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A1IFA,ACGA,AjBDA,AIAA,AEAA,AjBAA,A+KPY,ChFlEsD,A7FAA,E6F4D/DuF,A7FAAA,CsF5CCvF,A/FAAA,GwGuDGwJ,A7FAAA,EoFvDE,A/FAA,CFmEC3H,AwLjBM0kB,CvFlDL,A/FAA,EFmEP,C0GZF,A1GAa,AaAb,CbYa,E0GZE,A7FAA,C2FXC,A7FAA,C6FAClS,A7FAAA,A6KMM,CvFlDL/M,A/FAAA,EwGuDlB,A7FAA,A2KL0Bwc,C9ErBsB,A7FAA,C6F0B1B,ATvDb,ApFuDa,AXvDb,C+FAcvc,A/FAAA,C+FAd,A/FAA,E+FAiB,A/FAA,EsLkDQ,CAAC6c,ShFNnB,A7FAA,E6FAwB9T,A7FAAA,E6KMd,CAAuB,GhFNH,A7FAA,C6FACoF,A7FAAA,A6KMrB,CAAhB,YhFNM,A7FAA,E6FA8C,A7FAA,Y6FAY,A7FAA;AyIc5E,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ALAA,AGXA,AP5CI,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHUG,AaZD,ANAA,AIXA,AT5CI,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FTQpZ,AkLSR,A1IFA,ACGA,AHFE,AdCF,AIAA,AEAA,AjBAA,A+KPYiqB,I5LFJjqB,E4LEIiqB,CtJMLtX,EsEZE,A7FAA,CsF5CC,A/FAA,GsG4CR,A7FAA,CfIgB,CqGhDHzS,A/FAAA,AsLkDM,CtJMnB,AsJNoB6nB,C5LFD,CAAC,CAAd,AsCQW,E+DxDT,A/FAA,GgCwDR,CAlCsC,C+DtBd,A/FAA,AgCyDxB,C+DzDI,A/FAA,CsLkDM,CvFlDiB,A/FAA,AsLkDM,OvFlDC,A/FAA,AsLkDxB,EvFlDiB,A/FAA,AsLkDe,QAAhC;ApCQZ,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAI,AIFF,ACGFpJ,AHdC,AP5CK,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A1GAI,AKFF,ACGFA,AHdC,AT5CK,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FTQre,AkLSR,A1IFA,ACGA,AjBDA,AIAA,AEAA,AjBAA,A+KPY2pB,ChFRM,A7FAA,C6F5DgD,A7FAA,E6F8D9DhhB,A7FAAA,AfII3I,E4LEI2pB,C5LFD,E0GSF3d,AKCA,AnGDAA,AMCA,C6FACtL,AV1DAkK,AnF0DAlK,AZ1DAkK,ANgDIrL,CqGhDH,A/FAA,G+FAG,A/FAA,CNgDK,A4LEE,C5LFDK,A4LEEioB,G7EQtB,AHdmB,AP5CA1d,AnF0DnB,AHdmB,AT5CAA,CyG0DC5J,AHdAkX,A1FcAlX,AHdAkX,EfIZ,C0GSJ,ALzDE,AzFyDF,ANzDE,CoGyDkBxL,AKCxB,AnGDwBA,AMCxB,C0KRY,E7EQe,A7FAA,C0KRO,KlFO9B,A9FAA,G8FAgC7I,A9FAAA,AgLPxB,C7EQyBmN,A7FAAA,IwFDjC,AEbe,AhGaf,AGbe,CgGcQ,A7FAA,C0FdgB,A7FAA,CgGcCC,A7FAAA,O0FdzB,A7FAA,CgGcQ,A7FAA,C0Fd0B,A7FAA,CgGcC,A7FAA,Q0FdQuI,A7FAAA,O6FAT,A7FAA,G6FAmB,A7FAA;AyIcxE,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAI,AIFF,ACGA,ANHA,AGXA,AP5CI,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHUE,AQVE,AKFF,ACGA,APHA,AIXA,AT5CI,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FTK,AkLSL,A1IFA,ACGA,AHFE,AdCF,AMAA,AjBAA,A+KPYsO,MnFKN/U,AGXA0G,AxGuBA5T,AOZAkN,AIXA0G,A6KMMqO,C7EQL3I,A7FAAA,AoBFA3R,EoECEZ,A9FAAA,CyFzDCzE,A/FAAA,EsG4CE,A7FAA,CsF5CC,AjGmEA,AEnEA,AgCwDX,CmEDY,A9FAA,CiGXC,A7FAA,CsF5CC,AjGmEA5C,AEnEA,AgCwDA,CmEDC2G,A9FAAA,AiLLM,CAACsd,ChFNtB,A7FAA,C6FDsE,A7FAA,C6FGtE,AP9CmBne,AtF8CnB,AT9CmBA,AgCwDnB,CyEEA,AV1DoB,AjGmEA,AcTpB,AZ1DoB,AgCoBkB,CoEqCpC,AKCmBkU,AV1DAvU,AjGmEA3F,AQVnB,AMCmBka,AZ1DAvU,AgCyDrB,CoEAsB0B,ADFA,A7FEAA,ADFA,C8FACsG,A9FAAA,E0FvDnB,AjGmEgB,AEnEhB,CFmEJ,CwLjBU,CAAwBoX,GlFOhC,A9FAA,G8FAgCvmB,AKClC,AnGDkCA,AMClC,EuFHe,A9FAA,CoGGsB,A7FAA,A0KR3B,ElFOR,A9FAA,E6FFuC,A9FAA,CoGGzC,A7FAA,IuFHA,A9FAA;A6IGF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjEAG,AKCD,ANHA,AGTA,A9GUF,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWE,AQXC,AMCD,APHA,AITA,AwHYF,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A1IFA,ACGA,AjBDA,AMAA,AjBAA,A+KNY,MxLiBNgC,CqGbCmN,A9FAAA,EoGGE1B,A7FAAA,IdUI,E2GVE,A7FAA,C6FACnQ,A7FAAA,EdUE8C,EqGbhB,A9FAA,G8FAqB,A9FAA,C8FAC8O,A9FAAA,CoGGf,A7FAA,C6FAiB/R,A7FAAA,CdUxB,EACE,C2GXK,A7FAA,C6FAsBnB,A7FAAA,CuFH7B,A9FAA,C8FjCgD,A9FAA,C8FiChB,A9FAA,CoGGzB,A7FAA,C6FA2B,A3GWzB,AcXyB,I6FA3B,A7FAA,CdWL,C2GXsCmR,A7FAAA,K6FAjC,A7FAA,E6FAwCC,A7FAAA,Q6FAxC,A7FAA,C6FAP,A7FAA;AsIAF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,AjExBqD,AIsBnD,ACGD,ANHC,AGTA,AP9CI,AvGwDN,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,A1GxBqD,AKsBnD,ACGD,APHC,AITA,AT9CI,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,A5FVI/Q,AkLUJ,A1IFA,ACGA,AHFE,AdCF,AMAA,AjBAA,C6FxBA,AKsBA,AnGtBA,AMsBA,ClBRIA,C+GWD,A7FAA,I4FHIkT,A7FAAA,AqBCA9F,IwEDL,A7FAA,CqBCA,C+DxDWjC,A/FAAA,CwGuDC,ATvDA,ApFuDA,AXvDA,AN+CE,CsCSD,E+DxDEA,A/FAAA,AN+CE,C8GQjB,ATvDgB,ApFuDhB,AXvDgB,CwGwBgC,ATxB/BJ,ApFwB+B,AXxB/BA,CwGuDC,A7FAA,AqBClB,CtCTE,AsC7BoC,CAuCtC,C+DzDI,A/FAA,E+FAmB,A/FAA;AkJ0DzB,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGF,ANHE,AJvDM9C,AvGwDR,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYE,AadA,ACGF,APHE,ALvDMA,AiI0DR,AHAA,ANAA,AvGDA,AqEAA,A5FVIlI,AkLUJ,A1IFA,ACGA,AjBDA,AMAA,AjBAA,A+KPY4nB,E5LHR5nB,IIsBE,AwLnBM4nB,EvFlDJ1f,A/FAAA,EN+CI,CqG/CD,A/FAA,EFqEEtC,AJtBE,EqG/CAuF,A/FAAA,C+FAC,A/FAA,EN+CZ,CqG/CeC,A/FAAA,AsLkDM,CvFlDL,AjGqEd,AErEc,AsLkDMid,CvFlDLtd,A/FAAA,I+FAb,AjGqEiB,AErEjB,IsLkDI,GAA0B,GxLmBpC,EAAmC,uCwLnBzB;ApCQZ,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A5DCA,AV1DO,AvGwDP,AgLCA,AWDA,ACCA,A1HCA,ACAA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYInI,AcXJ,AZ1DO,AiI0DP,AHAA,ANAA,AvGDA,AqEAA,A5FVI/C,AkLUJ,A1IFA,ACGA,AHFE,AdCF,AMAA,AjBAA,A+KNY,E5LJRA,EIsBA+C,GkCbG8K,QAAL,ClCac,CAAC9H,AJtBE,CAACrF,AsCSF,KAAhB,ClCac,AkCrDwB,CtC+BrB,AsCWjB,ClCWwB,AJtBtB,IIsBY,EAAgBI,IAAhB,CAAZ;AoJXJ,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGF,ANHE,AGXA,A9GYF,AgLCA,AWDA,ACCA,AzHCA,AHAA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYG,AadD,ACGF,APHE,AIXA,AwHcF,AHAA,ANAA,AvGDA,AqEAA,A5FVC,AkLUD,A1IFA,ACGA,AjBDA,AMAA,AjBAA,GTUE,I0GZKia,ALAA5H,AxFAA4H,ANAA5H,EiGXE,AxGyBA,AWzBA,I6FAI7K,A7FAAA,M+FWX,A7FAA,C2FXO,A7FAA,C6FAY,A7FAA,C+FWC,ALApB,AxFAoB,ANApB,G8FAuB8D,A9FAAA,EmGAvB,A7FAA,I2FX6B7D,A7FAAA,C0FWC,A9FAA,C8FAC4K,A9FAAA,KiGXZ,A7FAA,E6FAmB3K,A7FAAA,M6FAnB,A7FAA,E0FWI,AGXuB,AjGWvB,AIXuB,I0FWI,A9FAA,M8FAlD,A9FAA,C8FrCgD,A9FAA,C8FqCU,A9FAA;A6IG5D,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGF,ANHE,AGXEmR,AP5CE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYI,AadF,ACGF,APHE,AIXEA,AT5CE,AiI0DN,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A1IFA,ACGA,AHDE,AdAF,AMAA,AjBAA,A+KPYiO,IhFNRjO,A7FAAA,E6KMQiO,C9EKL5M,A7FAAA,AqBEApO,ClCYCjM,EwGzBE,A7FAA,C6FACgY,AxGyBA,AWzBAA,C6KMO,CvFlDLtQ,A/FAAA,AsLkDMmgB,CxLmBLziB,EiGrER,A/FAA,AgCyDJ,EsEbQ,A7FAA,C6FAN,A7FAA,AuBae,CsEbCwG,A7FAAA,CXyBC,C0GdnB,A1GcoBhM,AadpB,A2KLU,EtJOV,CwEFuB,A7FAA,AqBzCe,AsJoCT,CtJS7B,CsEfE,A7FAA,A6KMQ,ChFNgB,AxGyBxB,AWzBwB,E+FW1B,A7FAA,E2FXE,A7FAA,E6FA8B,A7FAA,U6FAUqF,A7FAAA,G6FAV,A7FAA,E6FAe,A7FAA;AyIcjD,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AqHDA,A7DFE,ACGF,ANHE,AGXI,AP5CD,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYI,AadF,ACGF,APHE,AIXI,AT5CD,AiI0DL,AHAA,ANAA,AvGDA,AqEAA,A5FVA1G,AkLUA,A1IFA,ACGA,AHCE,AdFF,AMAA,AjBAA,A+KPYgM,MAAAA,C9EKL+P,A7FAAA,AjBRA,CIsBC3Y,AJtBAzB,E4GHE+E,A7FAAA,A6KMM,CAACsF,EhFNX,A7FAA,E6FAS,A7FAA,A6KMH,C5LHZ,A4LGsBqf,CxLmBL,EJtBE,CIsBCvkB,GwLnBR,C9EKV,A7FAA,A2KL4BqD,G9EKH,A7FAA,EjBREvJ,CIsBC,CAACiG,AwLnBnB,C9EKV,A7FAA,AjBRiB,A4LGmB,E5LHJ,IIsBJ,EAAUpF,EwLnBFyoB,CxLmBR,CAA1B,KwLnByC,EAAI;ApCQjD,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AwDHE,ACGF,AHdQ5gB,APzDH,AvGqEL,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGFE,ACGF,AHdQA,ATzDH,AiIuEL,AHAA,ANAA,AvGDA,AqEAA,A5FVI,AkLUJ,A1IFA,ACGA,AHCE,AdFF,AMAA,AjBAA,A+KPgBmhB,GvFpGW,A/FAA,E+FkDtB,A/FAA,CN+CG7oB,C8GQDoa,A7FAAA,C2FXC1S,A7FAAA,A6KMQmhB,E5LHJ,GAAG,C4GHD,A7FAA,C6FAC/jB,A7FAAA,EfGI7E,C4GHL,A7FAA,C6FAN,A7FAA,C6KMoB,CAACqoB,C9EK3B,A7FAA,AjBRa,CAAUpoB,E8GQA,A7FAA,G2KLG,CAAZ,C9EKd,A7FAA,EjBRgC,CAACT,MAAV,GAAmB,CAA7B,CAAX;AwJWJ,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AwDHE,ACGF,ANHE,AGXM,AP5CJkH,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHWI,AabF,ACGF,APHE,AIXM,AT5CJA,AiI0DJ,AHAA,ANAA,AvGDA,AqEAA,AsFAA,A1IFA,ACGA,AjBDA,AMAA,AjBAA,A+KPa,IvFlDTA,A/FAAA,GwGuDG0T,ALAA5a,AJvDA,ApFuDA4a,ANAA5a,ALvDA,AsLgDK,EvFhDH,AjGoEA,AEpEA,IwGuDP,ALAA,ArGaWU,AabX,ANAA,CPaY,E0GbE,ALAA,AxFAA,ANAA,C8FAd,AJxDG,AjGqEY,AObf,ALxDG,CmGe6C,ArGsD9C,AOtD8C,C8FyC/B,A9FAA,CmGAjB,A1GakBA,AablB,C6FtCgD,A1GmD7B,AanD6B,C6FsC5B,A7FAA,EbaEN,GAApB,EAAyB,EAAEM,CAA3B,EACE8B,YAAY,CAACT,SAAS,CAACrB,CAAD,CAAV,EAAe,IAAf,EAAqBH,IAArB,CAAZ;AoJXN,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AyDAA,AHdO,AP5CHiD,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYG,AcXH,AHdO,AT5CHA,A8H0DJ,ANAA,AvGDA,AqEAA,A5FXI,AkLWJ,A1IFA,ACGA,AHAE,AdDF,AMAA,AjBAA,A+KPS,IvFlDLA,A/FAAA,CsLiCI,C5LaA/C,AsCYFiS,CsJRKkT,EvFlDF,A/FAA,E+FAE,A/FAA,CsLiCH,CAiBS,CtJQH,CtCZG,CAAC5lB,CsCYD6L,G+D1DG5L,A/FAAA,EN8CZ,C4LISkF,CtJQO,CtCZG,AsCYFwN,C+D1Dd,A/FAA,AN8CP,CqG9CuB/N,A/FAAA,C+FAhB,A/FAA,AN8CmB,A4LIR,EvFlDQ,A/FAA,AsLkDJ,QtJQT,KAA0B,KAAzC;AkHAF,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AwDHE,ACGF,ANHE,AJvDI,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGFE,ACGF,APHE,ALvDI,A8H0DN,ANAA,AlCDA,A5FXQ,AkLWR,A1IFA,ACGA,AHAE,AdDF,AMAA,AjBAA,A+KPYzB,MAAAA,C9EKL2J,ALAA+F,AxFAA/F,ANAA+F,A2BGAF,EtCZM,CqG9CH,A/FAA,GN8COjS,A4LIE,CnFKjB,A9FAA,AXTgB,A4LIEyE,CvFlDLnF,A/FAAA,CwGuDb,A7FAA,CwFAe,A9FAA,AXTI,CAAb,C8GSW6L,A7FAAA,A2KLP,C5LJYnL,AsCYtB,AsJRwBupB,CvFlDhB,A/FAA,AN8Ce,CyGSvB,A9FAA,C8F3CgD,A9FAA,A2B8C3B,CmEHC,A9FAA,AXTIxpB,AsCYJiS,AsJRM,CAACwX,C9EKL,ATvDA,ApFuDA,AXvDA,CwGuDCpd,ATvDrB,ApFuDqBA,AXvDrB,E+FAuB,A/FAA,GgC0D3B,CtCZmC,AsCrCG,CtCqCF9M,AsCcpC,AsJVwB,CAAemF,C9EKtB,ATvDiB4E,ApFuDjB,AXvDiBA,IN8C5B,A4LIkB,C9EKe,A7FAA,A2KL7B,CvFlD8B,A/FAA,AN8CIrJ,CqG9CHuK,A/FAAA,AN8CI,EAAvC,C8GSN,A7FAA,C6FxCgD,A7FAA,AjB+BC,C8GSH,ATvDZ,ApFuDY,AXvDZ,C+FAa,A/FAA,C+FAb,A/FAA,C+FAP,A/FAA;AkJ0D7B,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AsDdMjD,AP5CA,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYE,AWzBIA,AT5CA,A8H0DN,ANAA,AlCDA,A5FXYzH,AkLWZ,A1IFA,ACGA,AHEE,AdHF,AMAA,AjBAA,A+KPS,KAnBD,ChFaFyH,A7FAAA,AfEMzH,GIuBH,CiGrECuH,A/FAAA,AN8CM,CAACpH,CAAC,C4GFL,AP5CA,AjGqEX,AWzBW,AT5CA,CsG4CC2X,A7FAAA,CfEO,CqG9CLtO,A/FAAA,AN8CA,CAAJ,GAActJ,EqG9CJ,A/FAA,C+FACyK,A/FAAA,MN8CY,C4GFL,A7FAA,AfEMxK,C4GFLkD,A7FAAA,AfEI,CAAvB,EqG9CI,A/FAA,C+FAmBgB,A/FAAA,C+FAC,A/FAA,IsG4CN,A7FAA,CsF5CW,A/FAA,CsG4CC,AP5C1B,AtF4C0B,AT5C1B,C+FAV,A/FAA,GsG4CwB,A7FAA,C6FAjB,A7FAA,C6FAP,A7FAA;AyIcN,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AwDHE,ALAA,AGXG,AP5CC,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYC,AadC,ANAA,AIXG,AT5CC,A8H0DN,ANAA,AlCDA,A5FXS,AkLWT,A1IFA,ACGA,AHEE,AdHF,AMAA,AjBAA,A+KPK,CxLvBL,IwGUI,A7FAA,E+FkBG+I,ALAAmF,AxFAAnF,ANAAmF,G0FvDG9H,A/FAAA,C+FAC,A/FAA,EmGuDT,A9FAA,C0FvDY,A/FAA,EmGuDE,A9FAA,C8FAd,A9FAA,CmGAA,AL7CgD,AxF6ChD,AN7CgD,C8F6C/B,AJvDAT,A1FuDA,ALvDAA,EwGuDE,A7FAA,C6FAC,A7FAA,C6FACsB,ATvDjB,ApFuDiBA,AXvDjB,OwGuDwB,A7FAA,C6FAC8B,A7FAAA,W6FA7B,A7FAA,C6F1CgD,A7FAA,C6F0CN,A7FAA;AuIG5C,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AyDAA8Q,ANHE,AGXC,AP5CG,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ApGCAA,APHE,AIXC,AT5CG,A8H0DN,ANAA,AlCDA,A5FXK,AkLWL,A1IFA,ACGA,AjBDA,AMAA,AjBAA,A+KrEiB,CAAjB,EhF+CS,A7FAA,C6FAP,A7FAA,KgGuBO,A7FAA,C6FAC3d,AV1DAJ,AnF0DAI,AZ1DAJ,C+FAC,A/FAA,G+FAG,A/FAA,C+FAR,A/FAA,IyG0DN,A7FAA,C6FAoB2e,A7FAAA,U6FApB,A7FAA,G6FAiC,A7FAA,U6FAU1O,A7FAAA,K6FAV,A7FAA,E6FAiBC,A7FAAA,Q6FAjB,A7FAA,E6FA2B3E,A7FAAA,E6FA3B,A7FAA,E6FA+B,A7FAA;AsIAhE,ACCA,AKAA,AHDA,ANAA,A1JCA,AyJDA,AnEAA,AFCA,AoCDA,A7DCA,AwDHE,ACGAA,ANHA,AGXD,A9GYD,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYA,AadE,ACGAA,APHA,AIXD,AqHcD,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHCE,AdFF,AMAA,AjBAA,C+F7BmB,A7FAA,CgG8BjBA,AH5FgE,A1F4FhEA,AH5FgE,EgG4F9D,AHdA4L,A1FcA,AHdAA,CgGcC,A7FAA,E4FHExL,A7FAAA,AqBIAuG,EyEDEZ,A3GWAtM,AcXAsM,O4FHP,A7FAA,G6FAiB,A7FAA,EbcnB,CAAsBvP,AkCVpB,EwEJA,A7FAA,C6F5CgD,AF7CP,A3F6CO,AF7CP,AuB6FlBoJ,CwEJC,A7FAA,E2FXEiN,AxGyB5B,AWzB4BA,EXyBE9T,EkCVE,CAAC4N,ClCUjC,C2GXK,A7FAA,C6FA+B,A3GWA3O,AcXA,QdWpC,EAA8C0B,EkCVrB,EyEDpB,AH5FsC,A1F4FtC,AH5FsC,CgG4FvC,AH5FJ,A1F4FI,AH5FJ,CgG4FE,A7FAA,AoBCkD,ClCUpD,EAAuD,GkCVrD,CAtDsC,CAwDtC;AkHHF,ACCA,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGD,ANHC,AJvDI,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYE,AadA,ACGD,APHC,ALvDI,A8H0DN,ANAA,AlCDA,A5FZIhG,AkLYJ,A1IFA,ACGA,AHGE,AdJF,AMAA,AjBAA,CkGDA,A7FAA,ClBXIA,IIwBEiG,CAAJ,AJxBO,CAACjF,IAAN,CqG7CSqK,A/FAAA,AN6CE,CqG7CT,A/FAA,E+FAU,A/FAA,CN6CGpK,IAAJ,CAASrB,GAAT,EAAcgB,IAAd,CAAX;AwJaJ,ACCA,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,AFXF,AP5CQ4J,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYE,AadA,AFXF,AT5CQA,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHGE,AdJF,AMAA,AjBAA,I+FbIkP,A7FAAA,EXyBEnU,EiGrEEiF,A/FAAA,IFqEN,MiGrEgB,A/FAA,C+FACa,A/FAAA,C+FAC,A/FAA,C+FACL,A/FAAA,I+FAH,A/FAA,E+FAS7C,A/FAAA,G+FAT,A/FAA,E+FAcpH,A/FAAA,C+FAd,A/FAA,C+FAV,A/FAA,GsG4C6B,A7FAA,G6FAG,A7FAA,S6FAS2Y,A7FAAA,iC6FAT,A7FAA,C6FA2C7L,A7FAAA,M6FA3C,A7FAA,E6FAmD,A7FAA;A0Ie3F,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCAiR,ANHE,AGXA,AP5CM/d,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHYE,AcXF+d,APHE,AIXA,AT5CM/d,A8H0DR,ANAA,AlCDA,A5FbI,AkLaJ,A1IFA,ACGA,AjBDA,AMAA,AjBAA,M+FbM4Y,AxGyBAzT,AWzBAyT,AfAE3Z,CyGWDoT,A9FAAA,C0FvDCrS,A/FAAA,CyG0DC,AV1DA,AnF0DA,AZ1DA,CyG0DCI,A7FAAA,CuFHR,A9FAA,AXXW,CAACd,CqG5CDgL,A/FAAA,CmGuDC,AJvDA,AjGqEZ,AOdY,ALvDA,C+FACL,A/FAAA,GmGuDb,A9FAA,AXXM,C+GcR,ANrDkD,AJLrC,AnF0Db,APrDkD,ALLrC,CyG0DOsJ,ANHA,AGXlB,AP5CkBjU,AnF0DAiU,APHA,AIXlB,AT5CkBjU,GN4CK,CAAjB,E+GcR,AV1DQ,AnF0DR,AZ1DQ,EN4CsB,C+GcD,A7FAA,AlBdEJ,QAA3B,E+GcmC+Q,A7FAAA,AlBdE,K+GcZ,A7FAA,E6FAiBC,A7FAAA,Q6FAjB,A7FAA,E6FA2B3E,A7FAAA,E6FA3B,A7FAA,E6FA+B,A7FAA;AuIC5D,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGA,ANHA,AJvDMjB,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaEhH,AafA,ACGA,APHA,ALvDMgH,A8H0DR,ANAA,AlCDA,A5FbQ1L,AkLaR,A1IFA,ACGA,AHEE,AdHF,AMAA,AjBAA,ETaE0E,EJ1BM1E,E+GcFuf,A7FAAA,C4FHCjM,A7FAAA,AqBKA5S,CyEFC,AV1DAgL,AnF0DA,AZ1DAA,C+FAC,A/FAA,EyG0DE,A7FAA,CmF1DCA,A/FAAA,C+FAC,A/FAA,AgC4DX,C+D5DYJ,A/FAAA,AN4CI,CI0BH,AJ1BI1K,C+GcH4e,A3GYA7a,AcZA6a,AoBEA,CAAd,C+D5DM,A/FAA,AgCCgC,CA6DtC,GwEPA,A7FAA,Ebea,C0GfUjT,A1GevB,AafuBA,AjBXP,CAAV,K+GcN,A7FAA,C4FH8B,A7FAA,C6FAC+G,A7FAAA,e6FAR,A7FAA,I6FA2B,A7FAA,M6FAlD,A7FAA,C6FhDgD,A7FAA,C6FgDU,A7FAA;AwII5D,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCEiM,ANHA,AGXA,AP5CK,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHcE3Z,AcbA2Z,APHA,AIXA,AT5CK,A8H0DP,ANAA,AlCDA,A5FbK,AkLaL,A1IFA,ACGA,AjBDA,AMAA,AjBAA,EkGCEA,A3GaA3Z,AcbA2Z,E6FAE,A7FAA,C6FAC3L,A7FAAA,C0FdCqG,A7FAAA,EX2BE,GAAG9W,C2GbT,A7FAA,E0FdY,A7FAA,CgGcCwJ,A7FAAA,E6FAb,AHdenJ,AxG2BA,Acbf,AHdeA,CX2BCa,KwG3BK,A7FAA,C6FACe,A7FAAA,CX2BtB,KwG3Be,A7FAA,C6FAcqU,A7FAAA,oC6FAd,A7FAA,G6FAqDO,A7FAAA,c6FAc,A7FAA,G6FAG,A7FAA,E6FAjB,A7FAA,E6FAqBvQ,A7FAAA,e6FAe,A7FAA,C6FACuQ,A7FAAA,c6FAD,A7FAA,E6FAiBlB,A7FAAA,O6FAjB,A7FAA,E6FA0B,A7FAA;A0IepI,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGAyG,AHdErb,A9GYJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,ArGFE,ACGAqb,AHdErb,AqHcJ,ANAA,AlCDA,A5FbC,AkLaD,A1IFA,ACGA,AHGE,AdJF,AMAA,AjBAA,CbxBA,C+GyBEqb,A7FAAA,ClBZF,C+GYI,AHdArb,A1FcA,AHdAA,CgGcCwb,A7FAAA,E4FHEnE,A7FAAA,AqBMAhI,EsEjBE,A7FAA,E6FAErF,A7FAAA,GuBiBT,CyEHA,A7FAA,E4FHA,AFZkI,A3FYlI,AFZkI,AuBkBnH,CyEHCmD,A7FAAA,E4FHE,A7FAA,C6FAlB,A7FAA,C6FlDgD,A7FAA,AqBwDhD,CwENqB,ACGrB,A9FHqB,ACGrB,AoB3DsC,CAgEtC;AmHJF,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCEkO,ANHA,AGXEzV,AP5CE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaE,AcZAyV,APHA,AIXEzV,AT5CE,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AjBDA,AMAA,AjBAA,EkGCEyV,A7FAAA,E6FAE,AHdAzV,A1FcA,AHdAA,CgGcC+V,A7FAAA,CdYCja,CqGfC8N,A9FAAA,KiGXK,AxG0BA,AW1BA,CsF5CClL,A/FAAA,CsG4CC,A7FAA,EsF5CR,A/FAA,CFsEWlE,C2GZf,A7FAA,G6FAmBgN,A7FAAA,EuFHnB,A9FAA,G8FAwB,ArGexB,AOfwB,EPeE,C2GZ1B,A7FAA,EuFHA,A9FAA,C8FtDgD,A9FAA,C8FsDjB,A9FAA;A8IIjC,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,AFdkI,APzC/H,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaI1L,AafF,AFdkI,ATzC/H,A8H0DL,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHIE,AdLF,AMAA,AjBAA,G+FhB0G,A7FAA,C6FApC,AxG6BlEA,AW7BkE,CsFxDjE,A/FAA,CsG2DC6D,AP5CA,AtF4CAA,AT5CA,CwGuDC+R,A7FAAA,AqBOAhI,GlCQG,GAAGrQ,AkCRX,GAAc,CAAd,CwEPA,A7FAA,AqB1DsC,ClCyErB,AkCNjB,ClCMkBkB,C0GfC,AFXA,A3FWA,AFXA,C6FAC2V,A7FAAA,I+FWpB,A7FAA,CbeW,GAAiBxW,MwG1BT,AxG0Be,AW1Bf,CX0BgB4B,CwG1BCoT,A7FAAA,KX0BR,CAAc,IAAd,CAA1B,CwG1BiB,A7FAA,E6FA+B,A7FAA;A0IepD,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGA,ANHA,AGXEtU,A9GYJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaIf,AafF,ACGA,APHA,AIXEe,AqHcJ,ANAA,AlCDA,A5FbA,AkLaA,A1IFA,ACGA,AHME,AdPF,AMAA,AjBAA,I+FbIA,AxG0BAf,AW1BAe,EgGcE,A7FAA,C4FHCuX,ACGA8D,ANHA5L,AxFAA8H,ACGA8D,APHA5L,EoGGE,AHdA,A1FcA,AHdA,AfAArS,C+GcCme,A3GYA,AcZAA,C0FdC,AxG0BAlb,AW1BA,EfAX,C8GWE,ALAA,AxFAA,ANAA,AXXYtE,C4GDsC,A7FAA,E+FYnC,ALAA,AxFAA,ANAA,AXXjB,EAAmBsB,E8GWjB,A7FAA,C8FGA,A7FAA,CdYE,C2GZoB,A7FAA,AlBdxB,EI0B0B,AJ1BA,CyGWCuE,ArGevB,AOfuBA,E8FAV,A9FAA,E8FAc,A9FAA;A8II/B,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGE,ANHA6N,AGXA7J,AP7DC,AvGyEL,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaG,AafD,ACGE,APHA6J,AIXA7J,AT7DC,A8H2EL,ANAA,AlCDA,A5FbI,AkLaJ,A1IFA,ACGA,AHME,AdPF,AMAA,AjBAA,GwF5H2B,AjGsIzB,AEtIyB,CmG0HvB6J,AGXA7J,AjGWA6J,AIXA7J,CsF5CC,A/FAA,EwGuDEwH,A7FAAA,AjBXErR,C+GcD0f,A7FAAA,CdYC,C2GZC,A7FAA,AlBdN,CyGWO,A9FAA,C8FACzR,AGXA,AjGWAA,AIXA,CgGcC,A7FAA,AlBdEjO,C4GAD,A7FAA,C+FWZ,A7FAA,CjBXE,E8GWc,ACGA6M,ANHP,AxFAO,ACGAA,APHP,E8FAShH,A9FAAA,EmGAlB,ALAS,AxFAT,ANAS,C8FAP,A9FAA,SoGGA,A7FAA;AuICJ,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCI,ANHD,AGdiD,APzChD8B,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaI,AcZA,APHD,AIdiD,ATzChDA,A8H0DJ,ANAA,AlCDA,A5FbI,AkLaJ,A1IFA,ACGA,AHME,AdPF,AMAA,AjBAA,G4FJE,AGZmB,AjGYnB,AIZmB,C0F5C6B,AGyCoB,APtClEA,A1FH8C,AIyCoB,ATtClEA,CmGuDC,A9FAA,CiGXC6B,A7FAAA,CsF5CC,A/FAA,AN4CElI,C+GcDge,A7FAAA,CmF1DC,A/FAA,CyG0DC,A7FAA,C6FACK,A7FAAA,ClBdP,GAAare,GqG7CZ,A/FAA,EN6CD,C4GAiB,A7FAA,C6FACyY,A7FAAA,EgGcd,A7FAA,I6FAoB2F,A7FAAA,E6FAE,A7FAA,C6FACzE,A7FAAA,K0FdV,A7FAA,E6FAiBzC,A7FAAA,KgGc9B,A7FAA,I6FAuCkH,A7FAAA,E6FAE,AHd5B,A1Fc4B,AHd5B,CgGc6Bjf,A7FAAA,C0FdC,A7FAA,KgGcJ,A7FAA,G6FAYif,A7FAAA,E6FAE,A7FAA,C6FAC/O,A7FAAA,a6FA1D,A7FAA,E6FAyE,A7FAA,K6FAK8K,A7FAAA,K6FAL,A7FAA,C6FAWiE,A7FAAA,E6FAE,A7FAA,C6FAC/O,A7FAAA,a6FAd,A7FAA;AuIC7E,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGC,AHdC1M,AP5CAA,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaI,AafF,ACGC,AHdCA,AT5CAA,A8H0DJ,ANAA,AlCDA,A5FbC,AkLaD,A1IFA,ACGA,AjBDA,AMAA,AjBAA,I+FbIA,AP5CAA,AtF4CAA,AT5CAA,EwGuDEqI,A7FAAA,G2FXG,AP5CA,AtF4CA,AT5CA,EsG4CE,AP5CA,AtF4CA,AT5CA,EwGuDE,A7FAA,C6FAC+E,A7FAAA,C2FZqC,A7FAA,KsF3C/BzF,A/FAAA,EwGuDlB,A7FAA,E6FAsB,A7FAA,GoFvDb,A/FAA,C+FAiBvG,A/FAAA,C+FAjB,A/FAA,E+FAoBwG,A/FAAA,U+FApB,A/FAA,E+FAgC,A/FAA;AmJ2D3C,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFI,ACGH,AHdGhC,AP5CE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,AmCDA,ANAA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaI,AafA,ACGH,AHdGA,AT5CE,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHKE,ARNF,AjBAA,CkGTA,A7FAA,E6FUG,A7FAA,C0FdCA,A7FAAA,GuBmBG2J,CwERC,A1GeA7N,AafA,C6FAC8U,A7FAAA,CoFvDClS,A/FAAA,CgC+DR,CsEnBU,A7FAA,CsF5CN,A/FAA,CsG4CQ,AxG0BA,AW1BA,AuBmBA,ClCOChC,GkCPb,CAvEsC,CAyEtC,EwEVE,A7FAA,E6FAoBkU,A7FAAA,EbehB,KAAuBpW,M0GfM,A7FAA,G6FAGyE,A1GepC,AafoCA,EbeE,K0GfK,A7FAA,C6FAC,A7FAA,iB6FAD,A7FAA,C6FAP,A7FAA,C6FA2B2R,A7FAAA,a6FA3C,A7FAA;AwIIxB,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFI,ACGJ,ANHE,AGdiD,A9GenD,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ADAA,AJAA,ApBDA,AlHaMvX,AafF,ACGJ,APHE,AIdiD,AqHiBnD,ANAA,AlCDA,A5FdA7B,AkLcA,A1IFA,ACGA,AHOE,ARRF,AjBAA,G+FhBqB,A7FAA,C6FNiD,A7FAA,AfQlE,CAACE,C4GCCiI,AxG0BAtG,AW1BAsG,C0FWCmK,A9FAAA,EmGAE6H,A7FAAA,GbeG,CAACnZ,CqGfX,A9FAA,AXZF,CAAevB,C8GYX,A7FAA,CwFAa,ArGeX,AOfW,CPeC,AJ3BlB,C8GYmB,A7FAA,EwFAjB,AGXmB,AjGWnB,AIXmB,AfDA,CyGjD6B,AGkD5BiZ,AjGlD4B,AIkD5BA,C+FWCU,ALAA,AxFAAA,ANAA,QPejB,EAA2BhV,AJ3BA,G8GYd,AFXE,A3FWF,AFXE,C+FWgB6G,A1Ge/B,Aaf+BA,C2FXCmM,A7FAAA,CX2BpB/T,K0GhB0B,AFXvB,A3FWuB,AFXvB,C+FWwB2M,A7FAAA,C2FXC,A7FAA,CX2BpB,CAAC3M,K0GhBR,A7FAA,C6FAf,A7FAA,EbgBc,GAAoBA,QAAQ,CAACA,QAA7B,GAAwCA,QADpD,EADoC,CAIpC;AqJdN,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFI,ACGJ,AHdIT,AP5CE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBM,AalBF,ACGJ,AHdIA,AT5CE,A8H0DN,ANAA,AlCDA,A5FdI,AkLcJ,A1IFA,ACGA,AHOE,ARRF,AjBAA,I+FbIA,A7FAAA,GfDKjE,E8GYAqR,AFXA,A3FWAA,AFXA,CsF5CChM,A/FAAA,AN2CN,C4GCO,AP5CA,AtF4CA,AT5CA,AN2CE7D,GqG3CC,A/FAA,CsG2CgC,A7FAA,CfA1C,C8GYA,A7FAA,AjBZe,EqG3CAwJ,A/FAAA,CwGuDCsB,A7FAAA,CjBZhB,EqG3CU,A/FAA,AN2CW,CqG3CDlB,A/FAAA,GwGuDG,A7FAA,C6FACiG,ATvDd,ApFuDcA,AXvDd,AN2CgB/P,CqG3CDb,A/FAAA,IN2CzB,EqG3CE,A/FAA,CwGuDF,A7FAA,CoFvDiC,A/FAA;AmJ2DrC,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFG,ALAD,AGXEoJ,AP5CI,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGFG,ANAD,AIXEA,AT5CI,A8H0DR,ANAA,AlCDA,A5FdC,AkLcD,A1IFA,ACGA,AXDA,AjBAA,CbhBA,G4GGIA,A7FAAA,G0FWG+J,A9FAAA,KiGXK,A7FAA,E6FAE,A7FAA,C0FWZ,A9FAA,G8FAgB,A9FAA,C8FAhB,A9FAA;A8IIF,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFC,ALAC,AGd4C,APzCtCrL,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHeM5C,AajBL,ANAC,AId4C,ATzCtC4C,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHME,ARPF,AjBAA,G+FhBqB,A7FAA,C6FTiD,A7FAA,E6FYhEiB,AxG4BA7D,AW5BA6D,C0FWCqK,A9FAAA,A2BSAJ,C+DhEClL,A/FAAA,G+FAG,A/FAA,CFwEC,EiGxEE,A/FAA,CFwECrF,IiGxEI8H,A/FAAA,EsG4CE,AxG4BA,AW5BA,C0FWnB,AGXoB+O,AxG4BA3V,AOjBpB,AIXoB2V,CsF5CR,A/FAA,AgCgEZ,C+DhEsB3O,A/FAAA,CmGuDC,A9FAA,C2BSC,E+DhEZ,A/FAA,CmGuDZ,AJvD2BvC,AjGwEvB,AOjBJ,ALvD2BA,EgCgE3B,CA5EsC,CA8EtC,C+DlEY,A/FAA,C+FAqB,A/FAA,CsG4Cd,AP5CP,AtF4CO,AT5CP,EsG4CwB6P,AP5CArT,AtF4CAqT,AT5CArT,C+FAxB,A/FAA,C+FAN,A/FAA,IsG4Ca,A7FAA,E6FAyB,A7FAA;A0Ie9C,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCA6Z,ANHE,AGXEjb,AP5CI,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHeK,AcdLib,APHE,AIXEjb,AT5CI,A8H0DR,ANAA,AlCDA,A5FfA7E,AkLeA,A1IFA,ACGA,AXDA,AjBAA,I+FbI6E,A7FAAA,G0FWG6P,A9FAAA,AXbA,CAACrS,C+GgBC,AHdA,A1FcA,AHdA,CgGcCF,A7FAAA,C0FdC0M,A7FAAA,EsF5CEjD,A/FAAA,AN0Cb,GAAgB,C4GEC,AP5CT,AtF4CS,AT5CT,CsG4CU6B,AP5CAzB,AtF4CAyB,AT5CAzB,CyG0DlB,A7FAA,C6FAoBqQ,A7FAAA,EmF1DZ,A/FAA,GyG0DR,AV1DyB,AnF0DzB,AZ1DyB,AN0CzB,CyGaE,A9FAA,EoGG0B,A7FAA,CuFHC,A9FAA,C0FvDCzQ,A/FAAA,EsG4CnB,A7FAA,C0FWT,AGX+B2C,AjGW/B,AIX+BA,C0FtDiB,AJUzB,A1FVyB,ALUzB,CmGuDU,AJvDAvC,A1FuDA,ALvDAA,GyG0DG/F,A7FAAA,C6FAV,AV1DH,AnF0DG,AZ1DH,C+FAewD,A/FAAA,CyG0DC,A7FAA,E0FfK,A7FAA,EsF3CrB,A/FAA,C+FAqBxD,A/FAAA,C+FArB,A/FAA,C+FAjB,A/FAA;AmJ2DR,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFA,ACGE,ANHA,AGXEwE,AP5CG,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGFA,ACGE,APHA,AIXEA,AT5CG,A8H0DP,ANAA,AlCDA,A5FdAzK,AkLcA,A1IFA,ACGA,AHOE,ARRF,AjBAA,I+FbIyK,A7FAAA,EgGcEyV,A7FAAA,CmF9DA,A/FAA,AN+CC,AsCsBA5L,CyEPC,A7FAA,AlBfAhS,C8GYCqV,A7FAAA,E8FGE,A7FAA,AlBfX,C4GCY,A7FAA,CsF5CC,A/FAA,CsG4CC,A7FAA,AfDA,AsCsBZ,EyEPcwI,A7FAAA,AlBfhB,C8GYA,ATvDiBla,ApFuDjB,AXvDiBA,AgCiEA,CwEVCiH,ATvDA,ApFuDAA,AXvDA,K+FAK,A/FAA,EwGuDvB,A7FAA,E6FA2B,A7FAA,AqBUAzG,C+DjECmF,A/FAAA,CgCiEX,EyEPf,A7FAA,AoBO6B,C+DjER,A/FAA,C+FAUI,A/FAAA,I+FAV,A/FAA,C+FAe3K,A/FAAA,M+FAzB,A/FAA,E+FAiC,A/FAA;AmJ2D9C,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFEiR,AFd4C,APzCtC,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcIpL,AahBFoL,AFd4C,ATzCtC,A8H0DR,ANAA,AlCDA,A5FdAtS,AkLcA,A1IFA,ACGA,AHOIsU,ARRJ,AjBAA,EiGFEhC,A7FAAA,C2FdmB,A7FAA,C6FZiD,AxG0ClEpL,AW1CkE,AuBoClEoN,EsErBElK,A7FAAA,CfDC,C8GYC,A7FAA,AjBZA7H,G8GYG+P,A7FAAA,AqBUA,ClCMC,AJ5BZ,AsCsBYzD,GlCMGtI,AJ5BA,E8GYE,A7FAA,AjBZjB,CsCsBW,EAASE,CwEVCiD,AFXA,AxG2BA,AahBAA,AFXA,C6FACiR,AxG2BAtU,AW3BAsU,AuBqBX,CAAP,GlCMiB,CAAjB,C0GhBwB,A7FAA,C6FAC,A7FAA,O2FXR,A7FAA,E6FAiBnB,A7FAAA,S+FWV,A7FAA,C6FA1B,A7FAA,I2FXmB,A7FAA,E6FAiC,A7FAA;A0IetD,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGA,ANHA,AGXE3U,AP5CIsE,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcG,AahBD,ACGA,APHA,AIXEtE,AT5CIsE,A8H0DR,ANAA,AlCDA,A5FdAnJ,AkLcA,A1IFA,ACGA,AHOG,ARRH,AjBAA,GyBME,CsEnBE6E,A7FAAA,AuB5DoC,CAmFtC,CwEZI,ACGAqb,A9FHA,ACGAA,CuFHCvL,A9FAAA,AXZA,C8GYC,ACGA,AV1DAxL,ApFuDA,ACGA,AZ1DAA,AN2CA3G,C+GeC6d,AHdA,A1FcAA,AHdA,E6FAE,AP5CA,AtF4CA,AT5CA,G+FAG,A/FAA,CN2Cd,CyGYE,A9FAA,EXZgB,C+GeZ,ANHa,AJvDAjY,AnF0Db,APHa,ALvDAA,CmGuDjB,AGXkBvD,AjGWlB,AIXkBA,AfDpB,CyGxDkD,A9FAA,C8FoE5B,A9FAA,AXZA,E8GYE8S,ACGA,AV1DV,ApFuDUA,ACGA,AZ1DV,CsG4CH,A7FAA,C6FAetO,AP5ClB,AtF4CkBA,AT5ClB,EyG0DF,A7FAA,I4FHA,ACG0B,A9FH1B,ACG0B,C4FH9B,ACG+B6W,AHdtB,A3FWT,ACG+BA,AHdtB,E+FWwB,ACGA,AHdA5W,A3FWA,ACGA,AHdAA,CgGcC8W,A7FAAA,K0FdzB,A7FAA,C+FW+B,A7FAA,C2FXC,A7FAA,G+FWGzI,A7FAAA,E8FG5C,A7FAA,E6FAgD,A7FAA,I4FHR,A7FAA,C6FAazK,A7FAAA,O6FAb,A7FAA,C6FAP,A7FAA,C6FFR,A7FAA,C6FEsC,A7FAA;AwIIjE,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGEgT,ANHF,AGXI,AP5CC,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,ArGFE,ACGEA,APHF,AIXI,AT5CC,A8H0DP,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AXDA,AjBAA,IkGCIA,A7FAAA,E6FAE,A7FAA,C6FACE,AV7DM,AnF6DNA,AZ7DM,GsG+CHpU,A7FAAA,GsF5CG,A/FAA,CsG4CC,A7FAA,G6FAG4O,A7FAAA,EgGcb,A7FAA,G6FAkB,A7FAA,G0FdG,A7FAA,CgGcrB,AHdsBnB,A1FctB,AHdsBA,O6FAD,A7FAA,C6FAR,A7FAA,C6FAkBK,A7FAAA,I6FAlB,A7FAA,E6FAX,A7FAA;A0IeN,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AdzDQ,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcE,AEvEM,A8H0DR,ANAA,AlCDA,A5FfA9Z,AkLeA,A1IFA,ACGA,AXDA,AjBAA,MTcMkH,CJ7BC,CAACzE,MI6BM,EJ7Bd,GI6BmBwC,AJ7BA,EAAnB,OI6BE,EAA4B;AqJZ9B,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGE,ANHF,AGXI,AP5CEkE,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcI,AahBF,ACGE,APHF,AIXI,AT5CEA,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHOE,ARRF,AjBAA,MiGFMkI,A7FAAA,CwFAC3C,A9FAAA,A2BUA6F,C+DjECpL,A/FAAA,CyG0DCuX,A7FAAA,C0FdC1U,A7FAAA,CsF5CC,A/FAA,GwGuDG,AFXR,AP5CQS,ApFuDA,AFXR,AT5CQA,AgCiEZ,EsErBc,A7FAA,C+FWC,A7FAA,AqBUA,CmEVf,A9FAA,CoGGE,A7FAA,C6FAgByT,A7FAAA,CuFHC,A9FAA,A2BUnB,CyEPoB,A7FAA,AoB7EkB,CyE6EjBG,A7FAAA,AoBSrB,C+DnEsB,A/FAA,EmGuDtB,A9FAA,C8FvEgD,AJgBvB,A1FhBuB,ALgBvB,CmGuDC,A9FAA,I0FvDI3T,A/FAAA,CwGuDC4F,ACG7B,A9FH6BA,ACG7B,E6FA+B4N,A7FAAA,E6FAE,A7FAA,C6FACM,A7FAAA,C4FHpC,A7FAA,GoFvDyB,A/FAA,C+FAgBva,A/FAAA,C+FAhB,A/FAA,C+FAH,A/FAA,G+FAwB,A/FAA,GyG0D5C,A7FAA,E6FAiDia,AV1DAvT,AnF0DAuT,AZ1DAvT,EyG0DE,A7FAA,C6FACsT,A7FAAA,OmF1DR,A/FAA,C+FAgBha,A/FAAA,C+FAhB,A/FAA,C+FAxC,A/FAA,IyG0DJ,A7FAA;AuICJ,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGC,AHdK2U,AP5CD,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcI1T,AahBF,ACGC,AHdK0T,AT5CD,A8H0DP,ANAA,AlCDA,A5FfA,AkLeA,A1IFA,ACGA,AXDA,AjBAA,GkGHE,A7FAA,CdiBE1T,G0GhBGuG,A7FAAA,C2FXCmN,A7FAAA,CgGcC,A7FAA,AlBhBAlY,GI6BG,CJ7BZ,EI6Be6D,CwG3BC,A7FAA,AfFA,C4GECgT,A7FAAA,AfFC,I8GahB,A1GgBmB,AahBnB,CbgBoBlT,E0GhBE,A7FAA,EbgBH,CAAN,C0GhBawU,A7FAAA,C2FXZ,A7FAA,C6FAR,AxG2BsBvV,AW3BtB,G6FAyB,A7FAA,I6FAzB,A7FAA,CX2BJ,G0GhBoB,A7FAA,C6FAkB4H,A7FAAA,O6FAlB,A7FAA,E6FA2B,A7FAA,I6FA3B,A7FAA,E6FAiCmE,A7FAAA,Q6FAjC,A7FAA,C6FAtB,A7FAA,C6FNyB,A7FAA,C6FMyC,A7FAA;AwIIpE,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCI,ANHF,AGXMuJ,A9GYR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,ADAA,ADAA,AiBAA,AIAA,ALAA,ApBDA,AlHcI,AcbA,APHF,AIXMA,AqHcR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHQE,ARTF,AjBAA,MTcM9W,CqGhBCgK,A9FAAA,A2BWA0G,CsEtBCoG,A7FAAA,IX2BI,CAAC1V,EkCLX,CsEtBc,A7FAA,C6FACiU,A7FAAA,CuBsBC,CmEXhB,A9FAA,A2BWA,GmEXoB,A9FAA,GPgBlB,EqGhBF,A9FAA,C8FzEgD,A9FAA,C8FyErB,AGXb,AjGWa,AIXb,C6FAR,A7FAA,G6FAyB,A7FAA,I6FAzB,A7FAA;A0IeR,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGE,AHdIyB,AP5CF,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHcG,AahBD,ACGE,AHdIA,AT5CF,A8H0DN,ANAA,AlCDA,A5FfA5a,AkLeA,A1IFA,ACGA,AHSE,ARVF,AjBAA,GTUE,I0GZK8X,A7FAAA,AjBbA,AsCyBArD,CsEvBCmG,A7FAAA,AfFAjY,CI6BC,CJ7BT,GqG1CawG,A/FAAA,AN0CAzG,E8GaX,A7FAA,C2FXc,AP5CV,AtF4CU,AT5CV,CsG4CW0W,A7FAAA,AfFjB,C8GakB,A7FAA,I6FAhB,A7FAA,AqBYA,GAAuB,GsEvBT,A7FAA,C6FAR,A7FAA,AuBuBN,GsEvB8B,A7FAA,I6FAxB,A7FAA;A0IeR,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCI8G,ANHF,AGXM7W,AP5CH,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHcI,AcbA6W,APHF,AIXM7W,AT5CH,A8H0DL,ANAA,AlCDA,A5FfArJ,AkLeA,A1IFA,ACGA,AHSE,ARVF,AjBAA,IkGCIkgB,A7FAAA,E6FAE,A7FAA,C6FACK,ANHApS,AvFGAoS,APHApS,AXbA,AsCyBAuG,CsEvBCrL,AxG2BA,AW3BAA,AfFAzG,O4GEO,AxG2BAsE,AW3BA,C0FWb,AGXcwS,AjGWd,AIXcA,G0FWGxM,A9FAAA,AXbnB,C+GgBI,A7FAA,ElBhBkBxK,C+GgBC,A3Gaf,Acbe,GuFHG,A9FAA,AXb1B,AsCyBE,CyETE,ANHuByL,AvFGvB,APHuBA,CPgBC,CkCJC,GsEvBG,A7FAA,C6FACnC,A7FAAA,AuBuB/B,CA1FsC,CA4FtC,CmEdiB,A9FAA,CiGXa,A7FAA,CX2B5B,CwG3BmC,A7FAA,CX2BC,CqGhBC,A9FAA,GiGXT,A7FAA,C6FAjB,A7FAA,C0FWb,AGXM,AjGWN,AIXM,C0FhE0C,A9FAA,C8F2EF,A9FAA;A8IIhD,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGC,AHdI,AP/DF,AvG2EL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHcM,AahBJ,ACGC,AHdI,AT/DF,A8H6EL,ANAA,AlCDA,A5FfAhM,AkLeA,A1IFA,ACGA,AHWE,ARZF,AjBAA,GwF/I2B,A/FAA,E+FsFtB,A/FAA,CwGuDCkN,A7FAAA,C2FhBA,A7FAA,AfGC,CAACrK,IAAR,C8GaE,AFXW,A3FWX,AFXW,E+FWE,A7FAA,AjBbAH,IAAf;AyJiBA,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFI,ACGH,ANHC,AGXMkY,AP5CJrS,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHcMrB,AahBF,ACGH,APHC,AIXM0T,AT5CJrS,A8H0DJ,ANAA,AlCDA,A5FfAvI,AkLeA,A1IFA,ACGA,AXDA,AjBAA,CkGXA,A7FAA,GmF9CIuI,A/FAAA,EFuEErB,CqGhBC8H,AJvDA,A1FuDAA,ALvDA,AN0CA,C8GaC,AFXA4L,A3FWA,AFXAA,AfFA9X,CqG1CC,A/FAA,EN0CT,GI6Bc,AJ7BAJ,C8GaCwK,A7FAAA,C2FXC,AP7CX,AtF6CW,AT7CX,CsG6CYiM,AxG2BA5S,AW3BA4S,C0FWf,A9FAA,AXbF,GyGaqB,A9FAA,CmGAC,ALAA,AxFAA,ANAA,CmGACW,ALAA5M,ArGgBA,AahBA4M,ANAA5M,CPgBC7G,G0GhBhB,A7FAA,CbgBe,CwG3BP,AxG2BC,AW3BD,C0FWc,AGXtB,AjGWsB,AIXtB,C0FWuB2I,A9FAAA,CmGAC,A1GiBxBhI,AajBwB,C2FXCqC,A7FAAA,MX4BlB,CwG5BP,A7FAA,E+FWJ,ALAF,ArGiBgB,AajBd,ANAF,C8F7EgD,ArG8F/B/D,AO9F+B,CmG6EN,ALAA,AxFAA,ANAA,KmGAK+W,A7FAAA,EbiB/B,EAAWnV,C0GjBe,A7FAA,G6FAagG,A7FAAA,IbiBvC,CAAH,E0GjBiD,A7FAA,C6FAC4M,A1GiBxB,AajBwBA,CbiBvB5S,G0GjBE,A7FAA,KbiBH,EAAW5B,QAAX,CADnC,CAFkC,CAIlC;AqJdN,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFI,AFXIsV,AP5CJ/V,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBK,AalBD,AFXI+V,AT5CJ/V,A8H0DJ,ANAA,AlCDA,A5FfA7E,AkLeA,A1IFA,ACGA,AHUE,ARXF,AjBAA,IwFzDI6E,A/FAAA,CFoEA,EJ1BG,AsC0BA8P,CwEbC,AFXAiG,A3FWA,AFXAA,AfFA7X,CqG1CC,A/FAA,E+FAE,AjGyEA,AEzEA,IwGuDImK,A1GkBAlG,AalBAkG,C2FXC,A7FAA,AuBwBd,CsExBekM,A7FAAA,EuBwBE,C+DpECxM,A/FAAA,AgCoElB,CA9FsC,CwEiFlB,A1GkBX,AalBW,AjBbtB,AsC4BE,CwEfqBS,A7FAAA,CbkBC,CiGzEb,A/FAA,AN0Cc3K,G4GET,AP5CY,AtF4CZ,AT5CY,CsG4CpB,A7FAA,AfFR,C8GaQ,A7FAA,E2FXwB4G,A7FAAA,G+FWG,A7FAA,G2FX3B,A7FAA,O+FWJ,A7FAA,E6FA2C,A7FAA,K6FAKyE,A7FAAA,Q6FAL,A7FAA,G6FAgBb,A7FAAA,O6FAO,A7FAA,C6FACG,A7FAAA,O6FAxB,A7FAA;AwII/C,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFG,ACGHyS,ANHE,AGXK,AP5CD,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBM5Y,AalBH,ACGH4Y,APHE,AIXK,AT5CD,A8H0DN,ANAA,AlCDA,A5FfA9f,AkLeA,A1IFA,ACGA,AHYE,ARbF,AjBAA,MTgBMkH,CqGlBC0N,A9FAAA,AXbA,CAAC5R,C+GgBC,A7FAA,C6FACb,A7FAAA,GmF1DG,A/FAA,CFyEC,CAACiF,GiGzEGwE,A/FAAA,CyG0DlB,A7FAA,C6FAoBmC,A7FAAA,EmF1DP,AjGyEP,AEzEO,C+FAU/B,AjGyEA1G,AEzEA0G,GN0CvB,CyGaE,AJvDI,A1FuDJ,ALvDI,CyG0DN,A7FAA,ClBhB6BtJ,CyGaC,A9FAA,CoGGC,ANH7B,ArGkBI,AcfyB,APH7B,C8F/EgD,A9FAA,C8F+EjB,A9FAA,AXbjC,Q+GgByCgE,A7FAAA,G6FAV,A7FAA,E6FAe4G,A7FAAA,E6FAf,A7FAA,E6FAmB,A7FAA;AuIClD,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCEgF,ANHA,AGXG,AP5CA,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBK,AcfHA,APHA,AIXG,AT5CA,A8H0DL,ANAA,AlCDA,A5FfAtS,AkLeA,A1IFA,ACGA,AXDA,AjBAA,EkGCEsS,A7FAAA,G0F3BoD,APnCjD,AjG2EM,AWxC2C,ATnCjD,C+FIC,A/FAA,CN0CC,C+GgBC,A7FAA,AlBhBArP,C+GgBCd,A7FAAA,EdeE,CJ/BX,GAAeO,G+GgBb,A7FAA,C6FAiBqL,A7FAAA,AlBhBnB,Q+GgBE,A7FAA,C6FA0BlN,A7FAAA,I6FA1B,A7FAA,C6FA+B,A7FAA,I6FA/B,A7FAA,E6FAqC6F,A7FAAA,G6FArC,A7FAA,E6FA0C,A7FAA,U6FAUma,A7FAAA,I6FAV,A7FAA,E6FAgB,A7FAA;AuIC5D,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFEnO,ACGEpF,AHdA7C,A9GYJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBMvD,AalBJwL,ACGEpF,AHdA7C,AqHcJ,ANAA,AlCDA,A5FfAzK,AkLeA,A1IFA,ACGA,AHWE,ARZF,AjBAA,EiGFE0S,A7FAAA,E8FGEpF,AHdA7C,A1FcA6C,AHdA7C,EgGcE,A3GeAvD,AcfA,C6FAC2Z,A7FAAA,AlBhBA,AsC2BAnS,CwEdC,A7FAA,AjBbAxL,C8GaCrC,A7FAAA,E8FGH,A7FAA,C6FAF,AHdQ,A1FcR,AHdQ,C+FWV,A7FAA,C6FAY,AFXA,AxG6BA,AalBA,AFXA,CX6BCmB,G0GlBb,A7FAA,AqBcA,ClCII,CAAcsD,CkCJC,EtC3BrB,GAA0B5C,AsC2BxB,CAlGsC,ClCsGlC,AkCFJ,EtC7BF;AyJiBA,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFC,ACGE,ANHD,AG1BoD,APnCjD,AvG8DL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBK,AalBJ,ACGE,APHD,AI1BoD,ATnCjD,A8HgEL,ANAA,AlCDA,A5FfA1C,AkLeA,A1IFA,ACGA,AXDA,AjBAA,GkGDE,AH3BmB,APzHM,AnFoJzB,AH3BmB,ATzHM,CsG0G2C,A7FAA,CsFdjE,AjG+DI,AE/DJ,CsG4CC2a,AxG+BF,AW/BEA,C0FWC9F,A9FAAA,AXbA,CAAC1R,Y4G5BS,A7FAA,E6FAf,A7FAA,G0FyCA,A9FAA,EXbF,CyGa4B,A9FAA,EXbET,EyGaEyP,A9FAAA,EXbhC,WyGa4B,A9FAA,C8FAkB,A9FAA,I8FAlB,A9FAA,C8FA1B,A9FAA;A8IIF,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,AJCC,ANHA,AGXCyI,AP5CErS,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,ApGCC,APHA,AIXCqS,AT5CErS,A8H0DJ,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYE,ARbF,AjBAA,CkGHA,A7FAA,C0FVEqS,A7FAAA,EsF5CErS,A/FAAA,G+FAG,A/FAA,AgCsEAuF,E+DtEE,A/FAA,CsG4CC,A7FAA,C6FACyL,A7FAAA,QuB0BT,E+DvEG,A/FAA,CgCuEiB,CsE1BZ,A7FAA,C6FAR,A7FAA,G6FAyB,A7FAA,AuB0BzB,CArGsC,CAuGtC,EsE5BA,A7FAA;A0IeF,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFApV,AFXEwK,AP5CE9J,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,ArGFAV,AFXEwK,AT5CE9J,A8H0DJ,ANAA,AlCDA,A5FfA7E,AkLeA,A1IFA,ACGA,AXDA,AjBAA,E+FbE2O,A7FAAA,EsF5CE9J,A/FAAA,EwGuDE,A7FAA,C6FACW,A7FAAA,AjBbA,CAACpC,CqG1CC,A/FAA,CsG4CC,A7FAA,C6FACyL,AP5CA,AtF4CAA,AT5CA,MsG4CD,A7FAA,AfFV,E4GEmB,A7FAA,CsF5CCnC,A/FAAA,AN0CA,C8GapB,A7FAA,C6FAsBiL,A7FAAA,O2FXOjR,A7FAAA,C+FWC,ATvDnB,ApFuDmB,AXvDnB,AN0CmBrD,C8GaClB,ATvDA8D,ApFuDA9D,AXvDA8D,CsG4CZ,AP5CR,AtF4CQ,AT5CR,EsG4CuB,AP5CA,AtF4CA,AT5CA,AN0Cd,EAAgB,I8GapC,A7FAA,E6FA0C,A7FAA,W6FA1C,A7FAA,E6FAuD,A7FAA;AwIIvD,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGF,ANHAsM,AGXI,AP5CE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBItL,AalBF,ACGF,APHAsL,AIXI,AT5CE,A8H0DN,ANAA,AlCDA,A5FhBsC,AkLgBtC,A1IFA,ACGA,AHaE,ARdF,AjBAA,ITgBItL,CAAC,EkCFE2N,CsE3BClO,AxG6BAR,AW7BAQ,CgGcCiT,A7FAAA,AlBjBoC,CqGzCnCtN,A/FAAA,CsG4CC,AP5CA,AtF4CA,AT5CA,ANyC2B,E+GiBtC,ANHa,AvFGb,APHa,CoGGCwC,ANHA1M,AJvDA,AnF0DA0M,APHA1M,ALvDA,CsG4CCuE,A7FAAA,G6FAG,A7FAA,C6FAC8I,AP5CA5D,AtF4CA4D,AT5CA5D,CyG0DnB,A7FAA,E6FAsBnF,A7FAAA,CuFHtB,AGXe,AP5CT,A1FuDN,AIXe,AT5CT,CyG0DN,ANHwBqO,ArGkBA,AcfxB,APHwBA,CPkBChR,C2GfCkI,A7FAAA,CoBaxB,CsE3B0B,A7FAA,EgGc5B,A7FAA,AoBa8B,ClCEN,AkCFtB,CyEb8B,A3Ge5B,Acf4B,AoB3FQ,CmEwFxC,A9FAA,A2BkBE,GmElBkC,A9FAA,S8FAS8I,A9FAAA,S8FAT,A9FAA,EiGXhC,A7FAA,C0FWqD,A9FAA,CiGXC,A7FAA;A0Ie1D,AKAA,AHDA,ANAA,ADAA,AnEAA,AFCA,AoCDA,ALFE,ACGA,ANHA,AGXI,AP5CA,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,ArGFE,ACGA,APHA,AIXI,AT5CA,A8H0DN,ANAA,AlCDA,A5FjBiD,AkLiBjD,A1IFA,ACGA,AHeE,ARhBF,AjBAA,CbjBA,K+GkBMrO,ANHAsO,AvFGAtO,APHAsO,EoGGJ,A7FAA,E6FAQ,AHdAzL,AP5CAuD,AnF0DA,AHdAvD,AT5CAuD,C+FAC,A/FAA,EmGuDE,A9FAA,C0FvDC,A/FAA,C+FAR,A/FAA,CmGuDU,AGXA,AjGWA,AIXA,CgGcCgC,A7FAAA,E0FdE+L,A7FAAA,E0FWEnG,A9FAAA,EoGGE,A7FAA,C6FACxR,A7FAAA,G0FdG,A7FAA,CgGcV,AHdWmW,A1FcX,AHdWA,CgGcC,A7FAA,O6FAZ,ANHf,AvFGe,APHf,EoGGoC3S,A7FAAA,C0FdX,A7FAA,CgGcV,AHdX,A1FcW,AHdX,CgGcI,AHfgD,A1FehD,AHfgD,C6FChB,A7FAA;A0Ie1C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE,ACGA,ANHA,AGXI,AP5CA,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHeI,AajBF,ACGA,APHA,AIXI,AT5CA,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AXDA,AjBAA,MkGCMuF,ANHAgJ,AvFGAhJ,APHAgJ,EPiBE/N,CqGjBC,ArGiBA,AOjBA,CoGGC,AV1DAkC,AnF0DA,AZ1DAA,EmGuDE,ArGiBA,AOjBA,C0FvDC,AjGwEL,AExEK,CyG0DC,ANHZ,AvFGY,APHZ,E0FvDckD,A/FAAA,C+FAC,AjGwEAnF,AExEA,CyG0Df,AV1DgB8E,AnF0DhB,AZ1DgBA,EyG0DE,A7FAA,EmF1Dd,A/FAA,GFwEmB,CAAC3K,MAAT,GAAkB4F,CAA3B,IAAgC,CAACC,QAAQ,CAACG,MAA9C,EAAsD;AqJb1D,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE5B,ACGEoJ,AV1DE5I,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHeMiB,AajBJzB,ACGEoJ,AZ1DE5I,A8H0DN,ANAA,AlCDA,A5FjBAjG,AkLiBA,A1IFA,ACGA,AHcE,ARfF,AjBAA,EiGFEyF,A7FAAA,E8FGEoJ,A7FAAA,EmF1DE5I,AjGwEAiB,AExEAjB,C+FAC,A/FAA,ANwCA,AsCgCA4O,CtChCCvR,E+GkBE,A7FAA,C6FACtB,AV1DAmH,AnF0DAnH,AZ1DAmH,CwGuDC,A7FAA,E6FAE,ATvDA,AjGwEA,AajBA,AXvDA,CyG0DV,AV1DW9H,AjGwEAgG,AcdX,AZ1DWhG,ANwCf,C+GkBgB2K,A7FAAA,ElBlBE,C8GWqC,A7FAA,C8FOnD,A7FAA,CmF1DE,AjGwEA,AExEA,CyGuD0B,A7FAA,C6FGT,A7FAA,CdcC,CkCAtB,GlCAI,AJhCsB3I,AsCgCA,ClCD8B,CAEpD,EJjCY,AsCgCc8O,EtChCE,WsCgCN,CAAkB,IAAlB,CAA1B;AmHbF,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFEzM,ACGA,ANHA,AGXI,A9GYN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHgBM,AalBJA,ACGA,APHA,AIXI,AqHcN,ANAA,AlCDA,A5FjBI,AkLiBJ,A1IFA,ACGA,AHcC,ARfD,AjBAA,EiGFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,CjBfG,CyGeDqP,A9FAAA,CiGXCzL,A7FAAA,EfJIhJ,I8GeEoF,ALAd,AGXc,A3FWAA,ANAd,AIXc,CfJN,CyGeQ,A9FAA,AXfE,C8Geb,A7FAA,E2FXc,A7FAA,C+FWC,A7FAA,G2FXhB,A7FAA,E6FAqB,A7FAA,yBfJjB,CAAN;AyJmBJ,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ACGF,ANHEsP,AGXI4F,AP5CF,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,ArGFI,ACGF,APHE5F,AIXI4F,AT5CF,A8H0DN,ANAA,AlCDA,A5FjBC,AkLiBD,A1IFA,ACGA,AXDA,AjBAA,CbnBA,GyGiBI5F,A9FAAA,G8FAG,A9FAA,CmGAC,ALAAhT,AGXA4Y,A3FWA,ANAA5Y,AIXA4Y,I0FWJ,A9FAA,CmGASnN,ALAAsH,AJvDA1I,ApFuDAoB,ANAAsH,ALvDA1I,C+FAC,A/FAA,EsG4CE,A7FAA,C6FACkN,AP5CAlN,AtF4CAkN,AT5CAlN,C+FAC,A/FAA,C+FACJ,A/FAAA,CmGuDf,A9FAA,G0FvDE,A/FAA,E+FAmB,A/FAA,EwGuDjB,A7FAA,E2FXQ,A7FAA,C6FAR,A7FAA,E+FWwBhH,A7FAAA,C2FXC,A7FAA,I6FAzB,A7FAA,I+FWJ,A7FAA,E6FAuC,A7FAA;AwII3C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFM,ALAF8P,AGXI6F,AP5CA,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHeM,AajBA,ANAF7F,AIXI6F,AT5CA,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHcArI,ARfA,AjBAA,I4FFIwC,A9FAAA,IiGXI6F,A7FAAA,EX4BEtT,CqGjBC,ArGiBA,AOjBA,C0FvDCwF,A/FAAA,CwGuDC,A7FAA,AqBiBA,CmEjBCiI,ArGiBA,AOjBAA,A2BiBA5S,C+DxEC,A/FAA,CsG4CC,A7FAA,C6FACgX,A7FAAA,C+FWX,ATvDY9M,AjGwEA/L,AajBZ,AXvDY+L,C+FAC,A/FAA,C+FACL,A/FAAA,CmGuDC,A9FAA,C8FACC,A9FAAA,CPiBR,AkCAd,C+DxEQ,AjGwEgB,AExEhB,AgCwEgB6I,EmEjBpB,A9FAA,GiGXY,A7FAA,C6FAR,A7FAA,G6FAyB,A7FAA,AuB4BjC,GAAoC,CsE5B5B,A7FAA,QuB4BqCA,SAAT,GAAqB,gBlCC/B5N,QAAQ,CAAC7F,MADX,GACoB,GADpB,GAC0BkG,MAAM,CAAClB,IAAD,CADhC,GACyC,aADzC,GAEE,0CAFF,GAGE,gBAHZ,CAAR;AqJbN,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFK,ACGH,ANHC,AGXKuU,AP5CA,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBMtT,AapBD,ACGH,APHC,AIXKsT,AT5CA,A8H0DR,ANAA,AlCDA,A5FjBA5a,AkLiBA,A1IFA,ACGA,AHcE,ARfF,AjBAA,MkGCM6O,A3GiBAvH,AcjBAuH,AoBcAkG,ClCGC,AJnCA,C4GIC6F,AxG+BAvX,AW/BAuX,AfJArX,GAAR,C+GkBY,AV1DAwJ,AjG2EN,AcjBM,AZ1DAA,CyG0DCa,A7FAAA,AoBcA,C+DxEC,A/FAA,ANwCA,CImCC,CwG/BC,A7FAA,AuB4BA,CsE5BCwL,AP5CAnT,AtF4CAmT,AT5CAnT,C+FAC,A/FAA,G+FAG6G,A/FAAA,AgCwEA2H,G+DxEG,A/FAA,C+FACpT,A/FAAA,CNwCC,C+GkBpB,A7FAA,C6FAsBA,AHdZ,A1FcYA,AHdZ,C6FAR,A7FAA,EsF5CS,A/FAA,CsG4Ce,A7FAA,EgGc9B,AV1DgCyL,AnF0DhC,AZ1DgCA,EyG0DE,AHd5B,A1Fc4B,AHd5B,AuB4BN,C+DxEmC,A/FAA,C+FACzL,A/FAAA,IyG0DI,A7FAA,EmF1DzB,AjG2EX,AE3EW,EyG0D6B2e,A7FAAA,CmF1DC/Z,A/FAAA,C+FAvC,A/FAA,yByG0DkC,A7FAA,E6FAN,A7FAA;AuICpC,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AJCE,AHdMqD,AP5CA,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBMhC,AcjBJ,AHdMgC,AT5CA,A8H0DR,ANAA,AlCDA,A5FlB4B,AkLkB5B,A1IFA,ACGA,AHcE,ARfF,AjBAA,MkGCMuF,A3GiBAvH,AcjBAuH,AoBcAmG,ClCGC,CwG/BC1L,AxG+BA9B,AW/BA8B,CfL2B,AsCiC1B,GyEdG,AV1DAyD,AnF0DA,AZ1DAA,ANuCgB,AsCiChB,CyEdCoT,A7FAAA,C0FdC,AP5CA,AtF4CA,AT5CA,AgCwEZ,CsE5BazZ,AxG+BT,AW/BSA,G6FAD,AxG+BI5C,AW/BJ,C6FAN,AP5CWgJ,AtF4CX,AT5CWA,G+FAG,A/FAA,C+FACzL,A/FAAA,CF2EjB,I2GjBA,A7FAA,C6FAuB+e,AV1DrB,AnF0DqBA,AZ1DrB,E+FAuBjX,A/FAAA,G+FAG,A/FAA,I+FAI2D,A/FAAA,GyG0DpC,AV1D6B,AnF0D7B,AZ1D6B,C+FAvB,A/FAA,CyG0DmC,A7FAA,ImF1DI3D,A/FAAA,EyG0DE,A7FAA,CmF1DC,A/FAA,GyG0DG4W,A7FAAA,CmF1DCjT,A/FAAA,G+FAG,A/FAA,C+FACrD,A/FAAA,K+FAJ,A/FAA,C+FAU,A/FAA,C+FAV,A/FAA,E+FAaxD,A/FAAA,C+FAb,A/FAA,C+FAP,A/FAA,kByG0DE,A7FAA,E6FAN,A7FAA;AuIC3C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ACGF,ANHA,AGXK,AP5CCA,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBMqB,AapBF,ACGF,APHA,AIXK,AT5CCrB,A8H0DR,ANAA,AlCDA,A5FnBwC,AkLmBxC,A1IFA,ACGA,AXDA,AjBAA,CbnBA,KIqCMqB,CAAC,CiG3ECrB,AjG2EAI,AE3EAJ,CyG0DC4I,ANHAmG,AJvDA,AnF0DAnG,APHAmG,ALvDA,EwGuDE,A7FAA,CwFAT,ArGoBI,AOpBJ,C0FvDWjI,A/FAAA,EyG0DE,AV1DP,AjG2EO1G,AcjBA,AZ1DP,CwGuDQoH,ACGAzL,A9FHAyL,ACGAzL,GdiBV,C2GjBG,A7FAA,C6FAY,A7FAA,I6FAZ,A7FAA,C6FAP,A7FAA,I4FHS,A7FAA,C6FAoB0L,A7FAAA,S6FA3B,A7FAA;AwIIJ,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFG,ACGF,ANHA,A3GCD,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBMpG,AapBH,ACGF,APHA,AyHGD,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHaE,ARdF,AjBAA,C4FZA,A9FAA,EmGDuD,A7FAA,Gb+BjDA,CAAC,CAACG,CkCJCsN,IlCIH,GAAU7N,AkCJd,EAAgB,MlCIM,CAAC7F,MAAnB;AqJhBN,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFEsE,AFXIiV,AP5CE,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBMtW,AapBJqB,AFXIiV,AT5CE,A8H0DR,ANAA,AlCDA,A5FpBA5a,AkLoBA,A1IFA,ACGA,AHaIgV,ARdJ,AjBAA,EiGFErP,A7FAAA,EqBgBEqP,CwEhBC,A7FAA,C2FXC4F,AxG+BAtW,AW/BAsW,C+FWC,A7FAA,AjBlBA,AsCkCA,CtClCCpX,AsCkCAxB,I+DvEIiE,A/FAAA,AgCuER,C+DvES,A/FAA,ANqCb,AsCkCa8O,CsE3BC,A7FAA,C6FACsE,A7FAAA,C+FWC1T,A7FAAA,AjBlBA,EqGrCE,A/FAA,CwGuDX,ATvDC,ApFuDD,AXvDC,CwGuDYd,A7FAAA,AqBgBhB,CsE3BU,AP5CO,AtF4CP,AT5CO,CsG4Cf,A7FAA,EX+BkB,C0GpBjB,AFXkB6B,AxG+BAY,AapBlB,AFXkBZ,CX+BD,AJtCEjD,C8GkBC,A1GoBrB,AapBqB,C2FXrB,A7FAA,CfPU,EAAe;AyJsB/B,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAJ,AGXM,AP5CI,AvGwDV,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBK,AapBD,ANAJ,AIXM,AT5CI,A8H0DV,ANAA,AlCDA,A5FpBI,AkLoBJ,A1IFA,ACGA,AHaIsR,ARdJ,AjBAA,C4FFC,A9FAA,G2BgBGA,ItClCM,GsCkCC,CtClCGzU,CyGkBD,A9FAA,C0FvDCyM,A/FAAA,AgCuEAgI,E+DvEE,A/FAA,CNqCN,CAAU,GqGrCCjI,A/FAAA,AgCuEA,CAACb,E+DvEE,A/FAA,C+FAC5K,A/FAAA,CgCuErB,K+DvEM,A/FAA,E+FAuB,A/FAA,iBNqCvB,CAAN;AyJsBJ,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAF,AGXG,AP5CO,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBG,AapBC,ANAF,AIXG,AT5CO,A8H0DZ,ANAA,AlCDA,A5FpBC,AkLoBD,A1IFA,ACGA,AHaG,ARdH,AjBAA,CbtBA,KyGoBM,A9FAA,Q0FvDQwL,A/FAAA,C+FAF,A/FAA;AmJ2DZ,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAA1I,AJvDQ,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,ArGFI,ANAAA,ALvDQ,A8H0DZ,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AXDA,AjBAA,I4FFIA,A9FAAA,ImGAI,A7FAA,C6FAC,A7FAA,CwFAC,A9FAA,C8FACqB,A9FAAA,GmGAGiI,A7FAAA,EoFvDEpB,A/FAAA,C+FAC,A/FAA,C+FACJ,A/FAAA,I+FAN,A/FAA,E+FAY,A/FAA,CmGuDpB,A9FAA,C8FAsBsG,A9FAAA,EmGAtB,A7FAA,CoFvDyB3G,A/FAAA,CwGuDC,A7FAA,GoFvDN,A/FAA,G+FAYS,A/FAAA,C+FAC,A/FAA,C+FACJ,A/FAAA,CmGuDC,A9FAA,C8FAC9J,A9FAAA,E0FvDhB,A/FAA,C+FAZ,A/FAA,K+FAoC,A/FAA,CmGuD5C,A9FAA,E8FA+C,A9FAA,E0FvDEyJ,A/FAAA,I+FAL,A/FAA,EmGuD5C,A9FAA,C0FvDwD,A/FAA,CmGuDC,A9FAA,I0FvDIC,A/FAAA,I+FAL,A/FAA,G+FAY,A/FAA,I+FAxB,A/FAA;AmJ2DhD,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFM,ALAAnG,AGXF,AP5CO,AvGwDX,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBE,AapBI,ANAAA,AIXF,AT5CO,A8H0DX,ANAA,AlCDA,A5FrBA1F,AkLqBA,A1IFA,ACGA,AHYE,ARbF,AjBAA,M4FFM0F,A9FAAA,CXnBC,C4GQC2D,A7FAAA,AfRA3F,CyGmBC,ArGoBAI,AOpBA,A2BeAkR,EmEfExC,AJ1DD,A1F0DCA,AL1DD,CgCyER,CtClCF,E4GQe,AxG+Bb,AW/Ba,CfRC,CqGpCC,A/FAA,CsG4CCoI,A7FAAA,K0FWK,A9FAA,C8FACnI,A9FAAA,EiGXE,A7FAA,C6FAC0G,A7FAAA,CfRA,KyGmBhB,A9FAA,C8FAuB,A9FAA,KiGXR,A7FAA,C6FAtB,A7FAA,G0FWuClE,A9FAAA,yB8FAT,A9FAA,G8FAqC,A9FAA;A8IIvE,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFK,ALAG,AJvDI,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AiBAA,AIAA,ALAA,ApBDA,AlHkBC,AapBI,ANAG,ALvDI,A8H0DZ,ANAA,AlCDA,A5FtB6B,AkLsB7B,A1IFA,ACGA,AHYC,ARbD,AjBAA,CyBKA,IwEZ2B,A7FAA,C6FKrB,A7FAA,GjBpB8B,CAAP,KyGoBd,A9FAA,E0FvDErJ,A/FAAA,GmGuDGkJ,A9FAAA,C0FvDR,A/FAA,G+FAYzI,A/FAAA,C+FAZ,A/FAA,ImGuDG,A9FAA,E8FAP,A9FAA;A8IIR,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAG,AGXH,AP5CQA,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFI,ANAG,AIXH,AT5CQA,A8H0DZ,ANAA,AlCDA,A5FvBwC,AkLuBxC,A1IFA,ACGA,AXDA,AjBAA,CbvBA,MyGmBW,A9FAA,CiGTHhD,A7FAAA,C0FWC,A9FAA,G0FvDGgD,A/FAAA,C+FAC,A/FAA,C+FACL,A/FAAA,CsG4CC,A7FAA,GsF5CH,A/FAA,EsG4CQ,A7FAA,CsF5CCc,A/FAAA,GsG4CjB,AP5CoB,AtF4CpB,AT5CoB,C+FACrD,A/FAAA,CsG4CC,A7FAA,IsF5CL,A/FAA,C+FAUsD,A/FAAA,E+FAV,A/FAA,C+FAT,A/FAA,8CmGuDoE,A9FAA,U8FFrE,A9FAA,E8FEiF,A9FAA,S8FFjF,A9FAA;A8IMX,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AVN6D,AGPvD6N,AP5CK,AvGwDX,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkBA9V,AOxB6D,AIPvD8V,AT5CK,A8H0DX,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYA,ARbA,AjBAA,CyBaC,ImEnBG,A9FAA,CiGPEA,A7FAAA,MX+BM,CAACzY,AkCLA,CsE1BC,A7FAA,C6FACoX,A7FAAA,OX+Bf,CAAuB3W,IwG/BT,A7FAA,C6FAR,A7FAA,G6FAyB,A7FAA,GX+B/B,CwG/BM,A7FAA,EX+B+B,SAASA,WAAT,CAAqByD,IAArB,EAA2Bf,QAA3B,EAAqC;AqJhB1E,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AVFG,AGXGsV,A9GYN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkBE,AOpBC,AIXGA,AqHcN,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYE,ARbF,AjBAA,G4FRE,A9FAA,C8FME,A9FAA,EiGXEA,A7FAAA,AuB0BA,GlCKG7T,EqGpBEkG,A9FAAA,C8FAP,A9FAA,E8FAU,AGXA,AjGWA,AIXA,C0FWE,AGXDkM,AjGWC,AIXDA,MX+BM,CAAC,IAAD,CwG/BP,A7FAA,C6FAR,AxG+BsB9S,AW/BtB,G6FAyB,A7FAA,CX+BV,EAAaf,CwG/B5B,A7FAA,OX+Be,EAAuB,KAAvB,CAAnB;AqJhBF,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAH,AGXKsV,AP5CI,AvGwDV,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkBC,AapBG,ANAH,AIXKA,AT5CI,A8H0DV,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYIzW,ARbJ,AjBAA,C4FVA,ArG0BA,AO1BA,G2BuBIA,EmEfE,AGXAyW,AjGWA,AIXAA,G+FWGnN,A7FAAA,CqBeC,CAACjI,GsE1BG,A7FAA,C6FAC4T,A7FAAA,Q+FWX,A7FAA,C6FAoB1L,A7FAAA,CqBepB,CsE1BU,A7FAA,AuB0BY6E,CsE1BpB,A7FAA,G6FAwB,A7FAA,G+FW1B,A7FAA,C2FXE,A7FAA,E+FW8B1N,A7FAAA,GqBeG,CAAC1C,CwEfpC,A7FAA,QqBeA,EAA+C,QAA/C,EAAyD;AmHX7D,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFG,ALAH,AGXMkH,AP5CG,AvGwDT,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFG,ANAH,AIXMA,AT5CG,A8H0DT,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYM3D,ARbN,AjBAA,M+FbM2D,A7FAAA,AuB0BA3D,GAAG,EAAE8M,EsE1BE,A7FAA,C6FACkH,A7FAAA,SuB0BS,CAACjH,MsE1BM,A7FAA,C6FACxN,A7FAAA,EuB0BpB,CAAuB,MsE1BJ,A7FAA,E6FAY,A7FAA,I6FAZ,A7FAA,AuB0BgB,CsE1BjC,A7FAA,C6FAP,A7FAA;A0IeN,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALzBuD,AFYlD,A9GYL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkBAH,Aa3CuD,AFYlD,AqHcL,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYQ,ARbR,AjBAA,CiGzBA,A7FAA,Wb2CY,CAAC3C,EkCLE,KAAK2S,ElCKpB,CAAuBnS,EAAvB,GAA4BmC,CkCLb,EAAP,SlCKgC,CAAC3C,SAAb,CAAuBS,WAAnD;AqJhBA,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFA+U,ATvDQ,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFAA,AXvDQ,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,ACGA,AHYO,ARbP,AjBAA,OyBWW,CwEbH,A7FAA,C6FACxV,A7FAAA,AqBeA,C+DtEC0K,A/FAAA,C+FAF,A/FAA,OwGuDR,A7FAA,C6FAmBQ,A7FAAA,O6FAnB,A7FAA,G6FA6B6F,A7FAAA,W6FAW,A7FAA,C6FAC7F,A7FAAA,O6FAzC,A7FAA,gCqBegF,UAFrE,EAEiF,SAFjF;AmHTX,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFAsK,ALAA,AGXIiD,AP5CG,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkBA9V,AapBA6S,ANAA,AIXIiD,AT5CG,A8H0DP,ANAA,AlCDA,AsFAA,A1IFA,AFW6D,ART7D,AjBAA,I4FFI1F,AGXA0F,AjGWA1F,AIXA0F,CuBsBA,GwEXI,A7FAA,C6FACzY,A7FAAA,G2FXG,AxG+BA,AW/BA,C6FACmX,AxG+BAnX,AW/BAmX,K+FWb,A7FAA,C6FAmB7B,ALAnB,AGXY,A3FWOA,ANAnB,AIXY,C6FAR,A7FAA,EX+BJ,CwG/BuB,AxG+BAvU,AW/BA,I6FAnB,A7FAA,E+FWJ,A7FAA,G6FAgCgQ,A7FAAA,MboBhC,GACI,E0GrBuC,A7FAA,C6FAC9E,A7FAAA,MbqB/BlL,G0GrBb,A7FAA,YbqBI,CAAyBmD,IAAzB,EAA+Bf,QAA/B,EAAyC;AqJjB7C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,APbG,A9GYH,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBM,AWhCH,AqHcH,ANAA,AlCDA,AsFAA,A1IFA,AFeG,ARbH,AjBAA,G+FvCU,A7FAA,AuB8CR,CsE9CA,A7FAA,AuBoDE,KlCMSyB,EkCNFkG,CAAP,EAAU,CAAE,MlCMS,CAAC,IAAD,EAAO5G,IAAP,EAAaf,QAAb,EAAuB,IAAvB,CAAnB;AqJjBN,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFAqS,ALAA,AGXE9I,AP5CI,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBK,AarBL8I,ANAA,AIXE9I,AT5CI,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFeC,ARbD,AjBAA,CTgBA,AkCXA,CsElBEA,A7FAAA,E0FWE,A9FAA,E2BiBJ,EwEjBQ,AFXA,A3FWA,AFXA,C+FWC1M,AFXAQ,A3FWAR,AFXAQ,E0FWEwS,AGXT,AP5CS9T,A1FuDA8T,AIXT,AT5CS9T,CsG4CC,A7FAA,K0FWR,AJvDE,A1FuDF,ALvDE,CwGuDN,A7FAA,C6FAmB0M,A7FAAA,EoFvDElB,A/FAAA,CmGuDC,AGXpB,AP5CI,A1FuDgB,AIXpB,AT5CI,EsG4CkBkN,A7FAAA,G+FWxB,A7FAA,G6FA8B,A7FAA,EwFA1B,A9FAA,EiGX8B,A7FAA,C6FAC/R,A7FAAA,C0FWCmN,A9FAAA,GiGXZ,A7FAA,C+FWgBzO,AFXA,A3FWAA,AFXA,E0FWE,A9FAA,CmGAZ,ALAa0O,AxFAb,ANAaA,CiGXnB,A7FAA,C+FWqB9H,A7FAAA,C2FXCsN,A7FAAA,C+FWhB,A7FAA,E6FAmB,A7FAA,KwFA7C,AGXoB,AjGWpB,AIXoB,C6FAtB,A7FAA,G0FWwD,A9FAA,O8FAO5W,A9FAAA,Q8FAQ,A9FAA,C8FAC7B,A9FAAA,S8FAT,A9FAA,C8FAmBgT,A9FAAA,M8FAM,A9FAA,C8FACC,A9FAAA,W8FA1B,A9FAA,C8FAP,A9FAA,K8FAkD,A9FAA,U8FA5G,A9FAA,E8FAwH,A9FAA;A8IIxH,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE9H,ALAA4H,AGXA,AP5CI,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFE5H,ANAA4H,AIXA,AT5CI,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFiBA,ARfA,AjBAA,EiGFE5H,ALAA4H,AxFAA5H,ANAA4H,EmGAE,A7FAA,C6FACxO,A7FAAA,G6FAD,A7FAA,C6FAF,AFXOkU,A3FWP,AFXOA,IsF5CIzR,A/FAAA,G+FAP,A/FAA,CmGuDW,AGXf,AjGWe,AIXf,G0FWkBnF,A9FAAA,Q8FAQ,A9FAA,C8FAC7B,A9FAAA,S8FAT,A9FAA,C8FAmBgT,A9FAAA,M8FAM,A9FAA,C8FACC,A9FAAA,W8FA1B,A9FAA,C8FAlB,A9FAA;A8IIF,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFC,ALACjR,AGXD,AP5CI,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBA,AarBC,ANACA,AIXD,AT5CI,A8H0DL,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,CiGJA,AFzEA,A3FyEA,AFzEA,C0F2EEA,A9FAAA,CmGAC,A7FAA,EoFtFE,A/FAA,C+F+BC,A/FAA,EmGuDE,A9FAA,C8FACqB,ArGqBAkC,AOrBAlC,WPqBT,GqGrBE,ArGqBqB,AOrBrB,C8FAsBsM,A9FAAA,Q8FAtB,A9FAA,E8FAgCqD,A9FAAA,M8FAM,A9FAA,C8FACC,A9FAAA,W8FAvC,A9FAA,E8FAoD,A9FAA;A8IItD,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFA,ALAIvQ,A3GCJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBE,AarBF,ANAIA,AyHGJ,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,I4FFIA,A9FAAA,EPqBE,CAAC,EqGrBE,A9FAA,E8FAE,A9FAA,CPqBC8C,KAAV,EAAiB,CqGrBC9C,A9FAAA,K8FAT,A9FAA,C8FAe8E,A9FAAA,M8FAf,A9FAA,E8FAuB,A9FAA;A8IIlC,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFA,ALAM,AGXN1J,AP7EK,AvGyFL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBI,AarBJ,ANAM,AIXNA,AT7EK,A8H2FL,ANAA,AlCDA,AsFAA,A1IFA,AFeA,ARbA,AjBAA,GwFtL2B,A/FAA,CgCmMvBiV,C+DtEC,A/FAA,CsG4CC,A7FAA,C6FAChV,A7FAAA,EXgCE4D,CqGrBCoR,A9FAAA,IiGXV,A7FAA,CXgCI,CAAYnS,CwGhCC2X,A7FAAA,EuB0BjB,MmEfyB,A9FAA,C8FAC7Z,A9FAAA,I8FAhB,ArGqBN,AOrBM,C8FAqB,ArGqBA,AOrBA,I8FArB,A9FAA,CPqB0BwF,CqGrBCsD,A9FAAA,GPqBjC,EAAsC,CqGrBhC,A9FAA,C8FAJ,A9FAA,E8FAwC,A9FAA,CPqBC/B,GwGhC/C,A7FAA,G0FWqD,ArGqBjD,AOrBiD,I8FAP,A9FAA;A8II9C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFA,ALAM,AJvDFW,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBI,AarBJ,ANAM,ALvDFA,A8H0DJ,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,IwFzDIA,A/FAAA,G+FAG,A/FAA,E+FAE,AjG4EAZ,AE5EA,CmGuDC,A9FAA,IPqBN,GAAa,EqGrBEmK,A9FAAA,E0FxDd,AjG6ED,AE7EC,MmGwDC,A9FAA,E8FAuB,A9FAA,O8FAO,A9FAA,K8FAP,A9FAA;A8II7B,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AVFM,AJvDFjN,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBI,AOrBE,ALvDFA,A8H0DJ,ANAA,AlCDA,AsFAA,A1IFA,AFcA,ARZA,AjBAA,IwFzDIA,A/FAAA,AgCqEA,IlCOI/C,CiG5EC,A/FAA,E+FAE,A/FAA,AgCqEAqT,EmEdExL,A9FAAA,IPqBI,AkCPb,ClCOctI,CqGrBC,A9FAA,C0FvDCsL,A/FAAA,EgCqEE,CmEdChD,A9FAAA,CPqBf,KqGrBqB,ArGqBA,AOrBA,C8FACiE,AJvDnB,AjG4EP,AOrB0BA,ALvDnB,C+FAoB3H,A/FAAA,C+FApB,AjG6EL,AE7EK,AgCqEP,E+DrE8B,A/FAA,EgCqEEkP,GlCQvB,GkCR6B,CAACC,CmEdpB,ArGsBL9P,AOtBK,QPsBV,CAAczE,CkCRvB,EmEdoD0R,A9FAAA,CPsB3C,CAAmB,AkCR0B,KlCQrBzO,EkCR4BE,ImEd3D,ArGsBO,AOtBP,CPsBA,GkCRmE,CAAC7B,SAAT,CAAmBgT,MAAM,CAACC,WAA1B,CAAP,KAAkD,UAA5G,EAAwH;AmHVxH,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AVFK,AJvDC,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHoBI,AOtBC,ALvDC,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFcEF,ARZF,AjBAA,EyBYEA,Q+DrEQ/L,A/FAAA,CF6EC,EiG7EE,A/FAA,G+FAGiC,AjG6EA9F,AE7EA8F,CgCqEC,GAAGpH,E+DrEE,A/FAA,C+FACuI,A/FAAA,CF6EZ,CAAcnK,GkCRG,CAACD,ClCQlB,CAAoB,GiG7Ef,A/FAA,C+FAmB8D,A/FAAA,C+FAnB,AjG6EoBnC,AE7EpB,C+FAV,A/FAA,CgCqEc,CAAmBqR,GlCQ5B,EAAiCrT,CkCRC,CAACsT,OlCQnC,CAAP,GkCRgB,CAAlB;AmHVF,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFAuC,ALNsD,AJjDhD,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHoBG,AatBHA,ANNsD,ALjDhD,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFcExT,ARZF,AjBAA,EyBYEA,CmEpBA,A9FAA,KmGMM,A7FAA,AqBcA,CwEdChC,A7FAAA,AqBcAqD,C+DrEC6G,A/FAAA,C+FAC,A/FAA,G+FAG,A/FAA,IwGuDd,A7FAA,C6FAmBrK,ATvDA4J,ApFuDA5J,AXvDA4J,IwGuDnB,ATvDM,ApFuDN,AXvDM,AgCqEJ,CAAsBkG,EwEdE,A7FAA,MqBcxB,EAAgCqD,EwEdEnD,A7FAAA,IqBcI,CwEdd,A7FAA,AqBceoD,EwEdEnD,A7FAAA,Q6FAjB,A7FAA,CqBcxB,CwEdmD,A7FAA,CqBcC;AmHVtD,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE,ALAD,AJvDK,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHoBC,AatBC,ANAD,ALvDK,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFcIpN,ARZJ,AjBAA,C4FXA,A9FAA,G2BuBIA,EwEdEiD,A7FAAA,CwFAC,A9FAA,E2BcE,C+DrEC+E,A/FAAA,CwGuDC,ATvDA,ApFuDA,AXvDA,AgCqEA,GwEdG,ATvDA,ApFuDA,AXvDA,C+FAR,A/FAA,IwGuDaY,A7FAAA,EqBcE9D,MAAV,EAAkB,IwEd3B,A7FAA;AwIIF,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE,ALAAuL,AJvDI7I,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFE,ANAA6I,ALvDI7I,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFcM,ARZN,AjBAA,E4FFE6I,A9FAAA,ImGAIoH,ATvDAjQ,ApFuDAiQ,AXvDAjQ,C+FAC,A/FAA,C+FACL,A/FAAA,EgCqEEkJ,E+DrEJ,A/FAA,C+FAOlM,A/FAAA,ImGuDI,AJvDX,A1FuDW,ALvDX,C+FAYG,A/FAAA,EwGuDhB,ALAkB,AxFAlB,ANAkB,C0FvDd,A/FAA,IgCqEmB,CAACtI,GmEdGqU,A9FAAA,C2BcnB,CAAqB,IAArB,EAA2BvL,MAA3B,CmEdU,A9FAA,A2Bcd,CmEduCA,A9FAAA,C2BcC,KmEd1B,A9FAA,E8FAiC,A9FAA,A2BcA,IAAP;AmHV9C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,AVFI,AJvDE1D,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHoBA,AOtBI,ALvDEA,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFcM,ARZN,AjBAA,MwFzDMA,A/FAAA,C+FAC,A/FAA,EF6EE4B,CkCRC,CmEdC8B,AJvDA0C,A1FuDA1C,ALvDA0C,C+FAC,A/FAA,C+FACL,A/FAAA,ImGuDI,AJvDN,A1FuDM,ALvDN,C+FAO3K,AjG6ElB,AE7EkBA,CF6ECyC,AkCRAgO,K+DrEb,A/FAA,CF6EN,EAA2BzL,AkCRrB,EmEduB,A9FAA,A2BcA,ElCQ7B,EqGtBI,ArGsB6Bf,AOtB7B,G2BcgC,KlCQpC,AkCR6B,ElCQc;AqJlB3C,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHoBE,AatBA,ANAC,AyHGH,ANAA,AlCDA,AsFAA,A1IFA,AFeM,ARbN,AjBAA,G4FJE,A9FAA,GmGEI,A1GsBAwC,AatBA,C6FACA,A7FAAA,IbsBI,C0GtBC,A7FAA,C6FAC+J,A7FAAA,AqBeAlI,ClCOC,KkCPK,IwEfjB,A7FAA,AqBeqBA,EwEfE,A7FAA,IqBeI,CAACiE,cAAP,YAAiC2E,aAAlD;AmHXN,AKAA,AHDA,ANAA,ADAA,AnEAA,AkCAA,ALFI,ALAH,AJvDK,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHmBgB5K,AarBZ,ANAH,ALvDK,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFeK,ARbL,AjBAA,ITmBgBA,I0GrBR,A7FAA,CbqBa,EAAE,EiG5EV0E,A/FAAA,C+FAC,A/FAA,CwGuDC2F,A7FAAA,CbqBD,CiG5EG3F,A/FAAA,C+FAC,A/FAA,C+FACJ,A/FAAA,CwGuDX,A7FAA,GoFvDF,A/FAA,EwGuDmB,ATvDA,ApFuDA,AXvDA,QwGuDrB,A7FAA,E6FA+B,A7FAA;AwIInC,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFMgG,ATvDE,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHkB8BrK,AapBxBqK,AXvDE,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFQsD,ARNtD,AjBAA,GyBME,ClCY4BrK,E0GpBxBqK,A7FAAA,IboB8B,EiG3ExBjF,AjG2E0B/H,AE3E1B+H,EwGuDE,A7FAA,CoFvDC,A/FAA,EwGuDEiF,A7FAAA,CoFvDC5F,A/FAAA,C+FAC,A/FAA,C+FACL,A/FAAA,CF2EN,GiG3EN,A/FAA,CwGuDiB,A7FAA,I6FAIlE,A7FAAA,K6FAK,A7FAA,C6FACmM,A7FAAA,e6FA7B,A7FAA;AwIIN,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFA,AJvDQ,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHiBiDnQ,AOnBjD,ALvDQ,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFeC,ARbD,AjBAA,CyBGA,GlCciDA,GkCJ1C,EmEfEgO,A9FAAA,CPmB8C,EiG1E3C/E,AjG0E6CjJ,AE1E7CiJ,E+FAE,A/FAA,GmGuDd,AJvDiB9G,A1FuDjB,ALvDiBA,CmGuDCiH,AJvDA,AjG0EJ,AOnBIA,ALvDA,G+FAGF,A/FAAA,G+FAG,A/FAA,CmGuDxB,AJvDyB3L,A1FuDzB,ALvDyBA,EmGuDE,A9FAA,I0FvDV,A/FAA,G+FAiB2L,A/FAAA,G+FAG,A/FAA,C+FAC3L,A/FAAA,M+FArB,A/FAA,G+FA8B4E,A/FAAA,C+FAvC,A/FAA;AmJ2DR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFM,ALAJqM,AJvDMtF,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHgBiE3G,AalB3D,ANAJiM,ALvDMtF,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFeEkI,ARbF,AjBAA,E4FFE5C,A9FAAA,A2BeA4C,ElCG+D7O,IqGlBzD,AJvDA2G,AjGyE6D,AOlB7D,ALvDAA,EwGuDEiF,A1GkB6D5L,AalB7D4L,CwFACK,AJvDA,A1FuDAA,ALvDA,C+FACtJ,A/FAAA,EFyEE,EiGzEN,A/FAA,CmGuDS,AJvDAG,A1FuDA,ALvDAA,AgCsEA,CwEfC,A7FAA,EoFvDV,A/FAA,AgCsEY,CmEfCO,A9FAAA,C0FvDCP,A/FAAA,CwGuDCrB,A7FAAA,EoFvDE,A/FAA,C+FACzG,A/FAAA,EwGuDE,ALAA,AxFAA,ANAA,CmGAC4Q,ALAA,AxFAAA,ANAA,C2BeCtI,E+DtER,A/FAA,G+FAa1D,A/FAAA,C+FA3B,A/FAA,AgCsEY,CwEfd,A7FAA,CoFvDgC,A/FAA,AgCsEA,CwEfC,ATvD/B,ApFuD+B,AXvD/B,E+FAiC8G,A/FAAA,E+FAjC,A/FAA,ImGuDoB,A9FAA,C8FA1B,A9FAA,C8FDyB,A9FAA,C8FCuB,A9FAA;A8IIlD,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQiF,ALAN,AJvDM/L,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHe6EX,AajBrE0M,ANAN,ALvDM/L,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFeI,ARbJ,AjBAA,ITe6EX,I0GjBrE0M,ATvDA/L,ApFuDA+L,AXvDA/L,C+FAC,A/FAA,EgCsEE0D,ClCE0E,C0GjBxE,ATvDAoD,ApFuDA,AXvDAA,CFwE0EzH,CiGxE/E,A/FAA,CwGuDQ8F,A7FAAA,CqBeC,KwEfK,A7FAA,C6FAC2H,A7FAAA,I6FAP,A7FAA,C6FAYf,A7FAAA,CqBeC,IwEfb,A7FAA,AqBeZ,EwEf+BC,A7FAAA,Q6FAnB,A7FAA,C6FAR,A7FAA;AwIIR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQA,ALAN,A3GCF,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcc,AahBNA,ANAN,AyHGF,ANAA,AlCDA,AsFAA,A1IFA,AFeG,ARbH,AjBAA,GTcE,AkCHA,KwEbMA,A7FAAA,Q6FAQ,A7FAA,G6FAG,A7FAA,E6FAX,A7FAA;AwIIR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,ALAL,AJvDM,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcE,AahBK,ANAL,ALvDM,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFeC,ARbD,AjBAA,MTcMlK,MiGvEM9B,A/FAAA,C+FAC,AjGuEA,AEvEA,GFuEGyB,EiGvEE,A/FAA,C+FAV,A/FAA,E+FAa,A/FAA,MFuEM,CAACM,IAAZ,CAAiBF,KAAjB,CAAd;AqJZF,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFE,AJvDQ,AvGwDV,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcEC,AOhBA,ALvDQ,A8H0DV,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,ETcEA,OAAO,CAACzC,IiGvEIyH,A/FAAA,E+FAE,A/FAA,EFuEd,GiGvEmBC,AjGuEA1H,AEvEA0H,G+FAG,A/FAA,C+FAC3L,A/FAAA,IFuEvB,EiGvEQ,A/FAA,E+FAuB,A/FAA;AmJ2DjC,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFMib,ALAJ,AJvDU,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcExU,AahBIwU,ANAJ,ALvDU,A8H0DZ,ANAA,AlCDA,AsFAA,A1IFA,AFeA,ARbA,AjBAA,ETcExU,I0GhBIwU,A7FAAA,CbgBC,CAAC1U,CkCDCkK,K+DtEKjF,AjGuEZ,AEvEYA,C+FAF,A/FAA,EFuEK9E,AkCDjB,CAAkBmF,EwEfE,A7FAA,G6FAG,A7FAA,CbgBrB,CkCDF,EwEfM,A7FAA,AqBeqB;AmHX3B,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFK,ALAH,AJvDU,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcE,AahBG,ANAH,ALvDU,A8H0DZ,ANAA,AlCDA,AsFAA,A1IFA,AFeEoF,ARbF,AjBAA,EyBaEA,MAAM,ClCCCvK,EkCDEuK,K+DtEKjG,AjGuEd,AEvEcA,C+FAC,A/FAA,AgCsEA,C+DtECJ,A/FAAA,GgCsEGvC,C+DtET,A/FAA,E+FAY,A/FAA,IgCsEI,C+DtECkC,A/FAAA,AgCsEA,I+DtEL,A/FAA,G+FAYS,A/FAAA,C+FAC,A/FAA,C+FACJ,A/FAAA,I+FAd,A/FAA,C+FAZ,A/FAA,IgCsEgB,C+DtEoB,A/FAA,AgCsE9C,CADyB,CAGzB,G+DxEmDL,A/FAAA,I+FAL,A/FAA,G+FAY,A/FAA,K+FAKC,A/FAAA,I+FAL,A/FAA,G+FAY,A/FAA,I+FAxB,A/FAA;AmJ2DhD,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFG,ALAD,AJvDS,AvGwDX,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcC,AahBE,ANAD,ALvDS,A8H0DX,ANAA,AlCDA,AsFAA,A1IFA,AFiBE,ARfF,AjBAA,GiGbE,A7FAA,M6FWO,A7FAA,EoF1DC,A/FAA,M+FGO,A/FAA;AmJ2DjB,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFIyQ,ATvDQ,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,ArGFIA,AXvDQ,A8H0DZ,ANAA,AlCDA,AsFAA,A1IFA,AFiBE,ARfF,AjBAA,IiGFIA,A7FAAA,aoFvDa1Q,A/FAAA,CwGuDC,A7FAA,G6FAG,ATvDT,ApFuDS,AXvDT,G+FAYS,A/FAAA,CwGuDpB,ATvDQ,ApFuDR,AXvDQ;AmJ2DZ,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFG,ALAD,AJvDUA,AvGwDZ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AqBAA,ALAA,ApBDA,AlHcAvH,AahBG,ANAD,ALvDUuH,A8H0DZ,ANAA,AlCDA,AsFAA,A1IFA,AFkBE,ARhBF,AjBAA,M4FFMgF,A9FAAA,M0FvDMhF,AjGuEA,AEvEAA,C+FAC,AjGuEAlK,AEvEA,CmGuDC,AJvDA6J,A1FuDA,ALvDAA,GmGuDG,A9FAA,C0FvDL,A/FAA,G+FASgB,A/FAAA,CFuErB,CAAuBnK,CiGvEC,A/FAA,C+FAC4G,A/FAAA,EFuEzB,GiGvEqB,AjGuES,AEvET,C+FAUsD,A/FAAA,EmGuDEuF,AJvDZ,A1FuDYA,ALvDZ,C+FAT,A/FAA,KmGuDV,ArGgBqCzP,AOhBrC,IPgB4B,CAAcwD,IAAd,EAAoBf,QAApB,EAA8B;AqJZ5D,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFE,AJvDS,AvGwDX,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHcED,AOhBA,ALvDS,A8H0DX,ANAA,AlCDA,AsFAA,A1IFA,AFkBE,ARhBF,AjBAA,ETcEA,IqGhBI,A9FAA,C8FACgM,A9FAAA,Q8FAD,ArGgBS,AOhBT,CPgBU/L,GqGhBG,A9FAA,C8FAC4P,A9FAAA,IPgBL,CAAb,UqGhBiC,A9FAA,C8FACrU,A9FAAA,I8FAhB,A9FAA,C8FAqBiR,A9FAAA,Q8FArB,A9FAA,E8FA+B,A9FAA,I8FA/B,A9FAA,C8FAlB,A9FAA,E8FAwD,A9FAA,O8FAO,A9FAA,I8FAIA,A9FAAA,Q8FAJ,A9FAA,C8FAa5E,A9FAAA,O8FAb,A9FAA,C8FAP,A9FAA;A8II1D,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHcE,AahBA,ANAA,AyHGF,ANAA,AlCDA,AsFAA,A1IFA,AFkBE,ARhBF,AjBAA,O4FFOU,ArGgBAjL,AOhBAiL,EmGAE2O,A1GgBP,AahBOA,CbgBClW,IAAR,EAAcwB,KqGhBd,A9FAA,G8FAsB,A9FAA,CmGAC,A1GgBA,AahBA,C6FAC,A1GgBA,AahBA,EwFAE0K,A9FAAA,EmGAH,A1GgBA,AahBA,E6FAOP,A1GgBA3L,AahBA2L,IbgBP,C0GhBA,A7FAA,CbgBa1M,C0GhBC2M,A7FAAA,EwFAf,A9FAA,C8FAkB/E,A9FAAA,IPgBjB,C0GhBA,A1GgBvB,AahBuB,E6FAwB,ALAzB,AxFAyB,ANAzB,E8FA2B,A9FAA,GmGA1B,A7FAA,CwFAD,A9FAA,CmGAgCoP,A7FAAA,CwFACjL,A9FAAA,Q8FAjC,A9FAA,C8FAtB,A9FAA,C8FZyB,A9FAA,C8FYyC,A9FAA,EmGA3C,A7FAA,C6FAvB,A7FAA;AwIIF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFC,ATvDS,AvGwDV,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHcE,AahBD,AXvDS,A8H0DV,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,CiGtBA,A7FAA,E6FoBG,A7FAA,MbgBM,IAAP;AqJZF,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFE,AJvDO,AvGwDT,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHcC,AOhBC,ALvDO,A8H0DT,ANAA,AlCDA,AsFAA,A1IFA,AFiBE,ARfF,AjBAA,CTUA,KkCKM,CmEjBC5G,A9FAAA,A2BiBAyK,QmEjBL,A9FAA,G8FAgB,A9FAA,I8FAhB,A9FAA,A2BiBoB,CAACrU,IAAhB,CAAqBiR,QAArB,EAA+B,IAA/B,CAAD,IAAyC,EAAE,gBAAgBQ,MAAlB,CAA7C,EAAwE;AmHb1E,AKAA,AHDA,ANAA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,ANAA,AlCDA,AsFAA,A1IFA,AFiBI,ARfJ,AjBAA,WyBeW,IAAIR,QAAJ,CAAa5E,OAAb,CAAP;AmHbJ,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFAyK,ALAE,AJvDM,AvGwDR,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHcA7S,AahBA6S,ANAE,ALvDM,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFiBG,ARfH,AjBAA,M4FFMzK,A9FAAA,EmGAE,A7FAA,C6FAC/K,A7FAAA,CoFvDC0K,A/FAAA,C+FAF,A/FAA,CFuEI,CqGhBV,ArGgBW1K,AOhBX,E8FAa,A9FAA,GmGAf,A7FAA,C6FAmBiF,A7FAAA,GbgBnB,CAAuBjE,G0GhBvB,A7FAA,G6FA6B,A7FAA,U6FAU6O,A7FAAA,GbgBvC,E0GhB6B,A7FAA,CbiBzB,C0GjB0C,A7FAA,QbiBjC7O,mBAAT,CAA6BkD,IAA7B,EAAmCf,QAAnC,EAA6C;AqJbjD,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAE,AJvDG,AvGwDP,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHeMD,AajBJ,ANAE,ALvDG,A8H0DP,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,ETeMA,MqGjBE,A9FAA,CmGACkX,A7FAAA,MwFAMrP,ArGiBI,AOjBJA,CPiBK5H,MqGjBE,A9FAA,C8FAC+P,A9FAAA,CPiBJ,C0GjBM,A1GiBnB,AajBmB,C6FAC,A7FAA,EwFAlB,A9FAA,EmGAiB,A7FAA,E6FAOrD,A7FAAA,CwFAC,A9FAA,ImGAR,A7FAA,E6FAc,A7FAA,I6FAd,ALArB,AxFAqB,ANArB,EmGAyC,ALAA,AxFAA,ANAA,ImGApB,A7FAA,CwFAyBsD,A9FAAA,CmGAC,A7FAA,K6FA1B,ALAoB,AxFApB,ANAoB,CmGA3C,A7FAA,EwFAyDpI,A9FAAA,O8FAO,A9FAA,C8FACmI,A9FAAA,K8FAtB,A9FAA;A8II7C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFC,ALAG,A3GCJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHeM,AajBL,ANAG,AyHGJ,ANAA,AlCDA,AsFAA,A1IFA,AFiBE,ARfF,AjBAA,CiGJA,A7FAA,MbmBWnS,AkCAJ0K,CmEjBC,A9FAA,O8FAOV,A9FAAA,M2BiBb,CmEjBoB,ArGiBhB,AOjBgB,C8FACqI,ArGiBIlP,AOjBJkP,C2BiBC,GlCAlB,CkCAsBhD,CmEjBpB,ArGiByB1K,AOjBzB,K8FA0B,A9FAA,IPiBQ,CAAC,EkCAnB,CAAkBqF,ClCAA,CqGjBtC,A9FAA,CPiB6C7G,CqGjBH,A9FAA,GPiBJ,AkCAlB,EmEjB2BmP,ArGiBIlQ,AOjBJkQ,A2BiBA,IAA3B,CAAtB,CAdyB,CmEHmB,A9FAA,A2BmB5C,ClCFwC,CAApC,CqGjBuDtI,A9FAAA,O8FAO,A9FAA,C8FACqI,A9FAAA,M8FAvB,A9FAA;A8II9C,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFI,AJvDE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHeM,AOjBF,ALvDE,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,Q4FFQ,A9FAA,CPiBK,EiGxEFlU,A/FAAA,EFwEL,EqGjBS6L,A9FAAA,E0FvDT,A/FAA,I+FAeL,A/FAAA,CmGuDC,AJvDhB,A1FuDgB,ALvDhB,CmGuDiBQ,A9FAAA,O8FAf,A9FAA,K8FA2B,A9FAA,U8FA/B,A9FAA,E8FA2C,A9FAA,K8FAKU,A9FAAA,Q8FAL,A9FAA,G8FAgBb,A9FAAA,O8FAO,A9FAA,C8FACG,A9FAAA,O8FAxB,A9FAA;A8II/C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFA,ALAI,AJvDE,AvGwDN,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHeK,AajBL,ANAI,ALvDE,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFkBE,ARhBF,AjBAA,CTUA,EAOA,IkCDO5C,CmElBC,A9FAA,CmGAC8R,A7FAAA,IoFvDIpT,A/FAAA,EmGuDE+D,A9FAAA,A2BkBb,C+DzEI,A/FAA,EgCyEY,ImElBI,A9FAA,A2BkBpB,CmElBqBuI,A9FAAA,EmGAvB,A7FAA,C6FA0B5G,A7FAAA,EwFAlB,A9FAA,ImGAR,A7FAA,CwFAiC,A9FAA,CmGACmD,A7FAAA,K6FAlC,A7FAA,E6FAyCC,A7FAAA,EwFArC,A9FAA,E8FAyC,A9FAA,ImGA7C,A7FAA,CwFAkDyD,A9FAAA,CmGAC8G,A7FAAA,KwFAN,A9FAA,G8FActP,A9FAAA,EmGA3D,A7FAA,E6FA+DoP,A7FAAA,GwFAG,A9FAA,C8FAC7G,A9FAAA,K8FAtB,A9FAA,KmGA7C,A7FAA,E6FA+E,A7FAA;AwII/E,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFEwF,ALAC,AJvDE,AvGwDL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFEA,ANAC,ALvDE,A8H0DL,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,EiGFEA,A7FAAA,GoFvFG,A/FAA,C+FgCC,A/FAA,CwGuDC,A7FAA,C6FAC,A7FAA,kB6FAD,A7FAA,E6FAqBjJ,A7FAAA,K6FArB,A7FAA,C6FAL,A7FAA;AwIIF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFE,AmHGF,ANAA,AlCDA,AsFAA,A1IFA,AFkBE,ARhBF,AjBAA,MiGFMlK,A7FAAA,AqBkBAoF,KwElBK,A7FAA,EqBkBT,CwElBY2B,A7FAAA,CqBkBC,KwElBK,A7FAA,C6FACpB,A7FAAA,c6FAnB,A7FAA;AwIIF,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFEiF,AJzFG,AvG0FL,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHeA5N,AOjBE4N,ALzFG,A8H4FL,ANAA,AlCDA,AsFAA,A1IFA,AFkBI,ARhBJ,AjBAA,E4FFEA,A9FAAA,C0FtNyB,A/FAA,E+F+JtB,A/FAA,GmGuDG,A9FAA,A2BkBA,CmElBC7R,A9FAAA,GPiBG,CqGjBV,ArGiBWsB,AOjBX,C8FAY,A9FAA,C2BkBC+K,GmElBb,A9FAA,IPiBF,AkCCsB,ClCDCnK,AkCCAsS,KAAf,KAAyB,IlCDjC,GACI,GkCAA,EAAyC,IlCAhCtS,CkCAqCuS,MAAL,GAAcpI,IlCAvD,CAAwB7G,EkCAsC,CAACgP,ClCA/D,EAA8B/P,EkCAW,MlCAzC,EAAwC;AqJd5C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAD,AJvDGiD,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgBM,AalBJ,ANAD,ALvDGA,A8H0DJ,ANAA,AlCDA,AsFAA,A1IFA,AFmBI,ARjBJ,AjBAA,E4FFE,A9FAA,E0FvDEA,A/FAAA,EwGuDEyJ,A1GkBI/J,AalBJ+J,CoFvDC,A/FAA,CgC0EC,C+D1ECzG,A/FAAA,CFyEH,C0GlBK,A7FAA,CbkBKhF,GiG1EX,A/FAA,AgC2EU2G,CwEnBC,A7FAA,EbkBV,E0GlBJ,A1GkBsBhF,AalBtB,E6FAoB,A7FAA,AqBmBA,CAACqN,KlCDjB,CkCCE,ClCD0BxT,CAA5B,EAA+BoG,CkCCH,UAA9B,EAA0C,GlCDxC,EkCC6CqN,OAAL,GAAetI,OAAO,CAACqI,MAAvB;AmHf9C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFIzN,ATvDAjD,AvGwDJ,AgLCA,AWDA,ACCA,A5HCA,A6BDA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHiBMQ,AanBFyC,AXvDAjD,A8H0DJ,ANAA,AlCDA,AsFAA,A1IFA,AFoBI,ARlBJ,AjBAA,ETiBMQ,E0GnBFyC,ATvDAjD,ApFuDAiD,AXvDAjD,IgC2EI,CwEpBC,ATvDA,ApFuDA,AXvDA,CwGuDCwJ,A7FAAA,CoFvDC,A/FAA,IF0EQ,AkCCJnB,ClCDK5H,C0GnBhB,A7FAA,G6FAgB,ATvDAT,ApFuDA,AXvDAA,EgC2EE,CAACwI,ClCDJ,C0GnBf,ATvDO,AjG0EL,AanBF,AXvDO,C+FAeJ,A/FAAA,C+FAf,A/FAA,E+FAkBC,A/FAAA,CgC2ErB,KAA2B,C+D3ExB,A/FAA,E+FA2B,A/FAA,OgC2ElC,EAA2C,KAAKa,QAAL,GAAgBb,OAAO,CAACG,OAAxB;AmHhB/C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFIoP,ATvDE,AvGwDN,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHkBMlW,AapBFkW,AXvDE,A8H0DN,ANAA,AlCDA,AsFAA,A1IFA,AFqBI,ARnBJ,AjBAA,ETkBMlW,E0GpBFkW,A7FAAA,IboBQ,AkCCJ,GlCDO,EiG3EFnR,A/FAAA,CwGuDC,A7FAA,C6FACuD,A7FAAA,AqBqBA3B,ClCDKlI,IiG3EA,A/FAA,CwGuDN,ATvDO,ApFuDP,AXvDO,CgC4EC,CwErBC8C,A1GoBjB,AapBiBA,AqBqBA2N,E+D5EH,A/FAA,E+FAOxL,A/FAAA,CwGuDb,A7FAA,AqBqBN,CwErBJ,A7FAA,IqBqB6B,O+D5EO,A/FAA,C+FAC,A/FAA,E+FAD,A/FAA,AgC4EpC,E+D5EyCiD,A/FAAA,AgC4EA,KAAKwI,E+D5EV,A/FAA,E+FAc,A/FAA,EgC4ET,GAAcxI,OAAO,CAACuI,KAAtB;AmHjB7C,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFG,ALAH3D,AJvDQ,AvGwDR,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHkBM,AapBH,ANAHA,ALvDQ,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFqBG,ARnBH,AjBAA,GiGLE,A7FAA,GbuBQvL,EqGpBF,A9FAA,CmGAC,ALAApE,AxFAA,ANAAA,GPoBO,KAAK8C,CqGpBrB,A9FAA,C8FAmB0Q,A9FAAA,I8FAnB,A9FAA,G8FA0B,ArGoBpB,AOpBoB,EPqBlB,OAAO,GqGrBuB,A9FAA,CPqB9B;AqJjBR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFI,ALAF/G,AJvDMzB,AvGwDR,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoBMlF,AatBF,ANAF2G,ALvDMzB,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AVEA,AjBAA,E4FFEyB,ArGsBI3G,AOtBJ2G,IPsBQ,E0GtBFnI,ATvDA0G,ApFuDA1G,AXvDA0G,CF6EK5G,C0GtBT,A7FAA,GoFvDS,A/FAA,E+FAE,AjG6EI,AE7EJ,CmGuDC,AJzDsC,AjG+ElCF,AOtBJ,ALzDsC,CmGyDrC,A9FAA,GPsBE,CqGtBH,ArGsBV,AOtBU,E8FAO,A9FAA,I8FAIkN,A9FAAA,sB8FAJ,A9FAA,E8FAP,A9FAA,C8FAd,A9FAA;A8IIF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFI,ALAH,AJvDO,AvGwDR,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoBM,AatBF,ANAH,ALvDO,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFqBEb,ARnBF,AjBAA,C4FJA,A9FAA,C2BuBEA,IlCCQzK,E0GtBF,A7FAA,AqBqBA,CwErBCqU,A7FAAA,AqBqBAzb,ClCCK,GkCDZ,CAAY,ClCCKoE,GkCDjB,KwErBE,A7FAA,CbsBE,C0GtBmBwB,A7FAAA,CbuBjB,C0GvBmB,A7FAA,G6FAGiW,A7FAAA,GbuBf,IAAP,K0GvBkC,A7FAA,C6FAC5U,A7FAAA,K6FAD,A7FAA,E6FAQkK,A7FAAA,K6FAR,A7FAA,C6FAjB,A7FAA;AwIIzB,AKAA,AHDA,ANAA,ADAA,AjCAA,AdzDQ5E,AvGwDR,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AhHzDQA,A8H0DR,ANAA,AlCDA,AsFAA,A1IFA,AFqBC,ARnBD,AjBAA,EyBqBA,M+D9EQA,A/FAAA,a+FAa,A/FAA,E+FAE,A/FAA;AmJ2DvB,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFI,ALAJ,AJ5DsD,AvG6DtD,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqBM,AavBF,ANAJ,AL5DsD,A8H+DtD,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,MTqBUnF,CiGnF8B,A/FAA,CwG4DhCxB,AT5DY,ApF4DZA,AX5DY,CmG4DXmP,AJ5DH,A1F4DGA,AL5DH,CwG4DF,A1GuBU,AavBV,E6FAQ,A7FAA,GbuBOtQ,OqGvBnB,A9FAA,C8FAuBuJ,ArGuBb,AOvBaA,IPuBQ5G,EqGvB/B,A9FAA,E8FA+BqF,ArGuBI,AOvBJA,CPuBKhI,CqGvBpC,A9FAA,E8FAmC,A9FAA,KPuBJ,KAAkBA,QAA3C,EAAqD;AqJnB3D,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFMsJ,ALAJ,AJvDG,AvGwDL,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqBQ,AavBFA,ANAJ,ALvDG,A8H0DL,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,MiGFMA,ALAAnI,AxFAAmI,ANAAnI,E8FAE,ArGuBI,AOvBJ,EPuBM,CqGvBH,A9FAA,I8FAIiN,ArGuBIxO,AOvBJwO,KmGAK,A7FAA,C6FAC7E,A7FAAA,M6FAD,A1GuBR,AavBQ,E6FASpI,A7FAAA,E6FAT,A7FAA,C6FAd,A1GuB8B,AavB9B,CbuBE,EACE,KAAKzB,CqGxBJ,A9FAA,E8FAT,A9FAA,C8FDiC,A9FAA,C8FCU,A9FAA,EPwBnC,GAAeb,MAAM,CAAC4B,MAAP,CAAc,IAAd,CAAf,CADF,KAEK;AqJrBb,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFK,ATjEA,AvGkEL,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHuBU,AazBL,AXjEA,A8HoEL,ANAA,AlCDA,AsFAA,A1IFA,AFqBA+L,AzBnBA,GwFlO2B,A/FAA,C+FAb,A/FAA,CwG8NV,AT9NF,ApF8NE,AX9NF,GgCqPM,CAAC3P,EwErBE,A7FAA,EbyBMoE,E0GzBFuB,A7FAAA,GqBqBf,ClCIuB,AkCJJ6N,CwErBC,A1GyBItP,AazBJ,C6FACwL,A7FAAA,EqBqBrB,ClCIuB,CAAb,CkCJgB,KwErBX,A7FAA,I6FAoBG,A7FAAA,GqBqBG,EwErBE,A7FAA,I6FAIA,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FAN,A7FAA,G6FAe,A7FAA,C6FAhD,A7FAA,E6FAmD,A7FAA;AwII9D,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFM,ALAJuN,A3GCF,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHuBU,AazBJ,ANAJA,AyHGF,ANAA,AlCDA,AsFAA,A1IFA,AFqBE,AzBnBF,E4FFEA,A9FAAA,K2BqBK3L,GwErBG,A1GyBIsD,AazBJ,CqBqBR,CAAU,ImErBI,ArGyBI,AOzBJ,CmGACyL,ALAAnD,ArGyBI9L,AazBJiP,ANAAnD,E2BqBf,EAAmB,CwErBX,A7FAA,CwFAM,A9FAA,E8FASpI,A9FAAA,A2BqBAnG,EwErBE,ALAX,AxFAW,ANAX,C8FAd,A9FAA,E2BqBmB,ClCIX,AkCJqB,ElCKnB,E0G1BF,A7FAA,Gb0BO2C,C0G1BsB,A7FAA,C6FAC6E,A7FAAA,Eb0B5B,CAAU,E0G1BuB,A7FAA,C6FAC+J,A7FAAA,U6FApC,A7FAA,EqBqBW,ClCKT,AkCLV,CwErB0D1N,A7FAAA,Cb0BpBkC,IAA5B,C0G1BsD,A7FAA,C6FACP,A1G0BrBmC,Aa1BqBnC,Ib0BjB,CAACR,QAAL,C0G1Bc,A7FAA,C6FAsB0M,A7FAAA,Eb0BnB1M,G0G1BH,A7FAA,Kb0BhD,C0G1BiF8F,A7FAAA,M6FAM,A7FAA,C6FACjJ,A7FAAA,S6FA9F,A7FAA,E6FAyG,A7FAA;AwII/G,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQ6P,ALANhS,AJvDA,AvGwDF,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBS,Aa1BDgS,ANANhS,ALvDA,A8H0DF,ANAA,AlCDA,AsFAA,A1IFA,AFqBC,AzBnBD,CyBiBA,CmEnBEA,A9FAAA,MmGAMgS,A7FAAA,CwFAC,AJvDArG,A1FuDA,ALvDAA,CmGuDChK,A9FAAA,GmGAG,A7FAA,G6FAGmR,A7FAAA,EwFAd,A9FAA,C8FAiBxF,AJvDjB,A1FuDiBA,ALvDjB,EmGuDA,A9FAA,E8FAqB7G,A9FAAA,E8FArB,A9FAA,UmGAiC,A7FAA,C6FACuL,A7FAAA,K6FAD,A7FAA,C6FA3B,A7FAA;AwIIR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,ALAN,AJvDA,AvGwDD,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBO,Aa1BA,ANAN,ALvDA,A8H0DD,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,CwF9OA,A/FAA,CmG4OE,A9FAA,C0F9OF,AjGgQM,AEhQN,MFwQa,IAAI,OAAO/J,IAAP,KAAgB,UAApB,EAAgC;AqJtB7C,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFA,A3GCA,AgLCA,AWDA,ACCA,A/FAA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBQC,AO1BR,AyHGA,ANAA,AlCDA,AsFAA,A1IFA,AFqBA,AzBnBA,ITwBQA,KkCLC0N,GlCKO,GAAG,CAAC,CAAZ,KkCLR,CAAuB/G,MAAvB,EAA+BvB,EAA/B,EAAmC;AmHjBnC,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFM,ALAN,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFM,ANAN,AyHGA,ANAA,AlCDA,AsFAA,A1IFA,AFqBE,AzBnBF,MyBmBM7G,EAAE,EwErBE+V,A7FAAA,CqBqBC,IAAIlc,KwErBT,A7FAA,AqBqBK,CAAU,CwErBC,A7FAA,gBqBqBX,CAAT,CADiC,CAEjC;AmHlBF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQ,AhHCR,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBQ,Aa1BA,AmHGR,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,STwBayB,CAAC,E0G1BF+F,A7FAAA,Cb0BKG,I0G1BA,A1G0BI,Aa1BJ,C6FACsG,A1G0BIlN,Aa1BJkN,Mb0BD,GAAc,C0G1BvB,A1G0BA,Aa1BA,E6FAsBK,A1G0BI7M,Aa1BJ6M,Cb0BK,IAAI,CAA/B,EAAkC7M,CAAC,EAAnC,EAAuC,C0G1BH,A7FAA,C6FAC8M,A7FAAA,M6FAD,A7FAA,E6FAS,A7FAA,I6FAIuM,A7FAAA,kC6FAJ,A7FAA,E6FAT,A7FAA,C6FAd,A7FAA,C6FAtB,A7FAA,K6FA4FuB,A7FAAA,Q6FAQ,A7FAA,C6FAC9N,A7FAAA,M6FAD,A7FAA,E6FAS/G,A7FAAA,K6FAT,A7FAA,E6FAgBkK,A7FAAA,K6FAhB,A7FAA,E6FAuB,A7FAA,I6FAvB,A7FAA,C6FAR,A7FAA;AwIIpG,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBU,Aa1BH,AmHGP,ANAA,AlCDA,AsFAA,A1IFA,AFqBEnD,AzBnBF,EyBmBEA,KwEvBI,A7FAA,CqBuBE,CAAC5L,ClCKKgF,G0G1BD,A7FAA,AqBqBX,ClCKgB,AkCLJ,ClCKKlG,CAAD,C0G1BD+F,A1G0BH,Aa1BGA,IqBqBf,CwErBoB,A1G0BIxC,Aa1BJ,C6FACgJ,A7FAAA,AqBqBA7H,EAArB,GwErBW,A7FAA,E6FAiB,A1G0BhB,Aa1BgB,Ib0BQwB,IAAI,CAAClG,CAAD,CAAJ,CAAQuD,QAAR,KAAqBA,QAAjD,EAA2D;AqJtBrE,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQsJ,ALAR,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBYzG,Aa1BJyG,ANAR,AyHGA,ANAA,AlCDA,AsFAA,A1IFA,AFqBEgU,AzBnBF,EyBmBEA,GAAG,CAACjhB,EwErBEiN,A1G0BIzG,Aa1BJyG,CwFACiH,A9FAAA,K2BqBP,CAAavI,EAAb,EmErBF,A9FAA,A2BqBmB7G,CmErBCoI,A9FAAA,C2BqBlB,CwErBoB,A7FAA,C6FACA,A7FAAA,Cb0BK,EqG1B5B,A9FAA,CP0B+B5G,CqG1BHH,A9FAAA,CmGAN,A7FAA,E6FAS,A1G0BI,Aa1BJ,Cb0BK/F,CqG1BpC,ArG0BmC,AO1BnC,CP0B+B,C0G1BIoZ,ALAAnJ,ArG0BI1M,Aa1BJ6V,ANAAnJ,K8FAnC,A9FAA,E8FA0C1E,A9FAAA,CP0B9B,CqG1BZ,A9FAA,E8FA8C,A9FAA,cmGAf,A7FAA,E6FAT,A7FAA,C6FAd,A7FAA;AwIIR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,ALAL,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBYpF,Aa1BL,ANAL,AyHGF,ANAA,AlCDA,AsFAA,A1IFA,AFqBC,AzBnBD,EyBqBA,ImEvBMzB,A9FAAA,CmGFO,A7FAA,CwFEX,ArG0BUyB,AO1BV,KmGAW,A7FAA,Gb0BO,C0G1BHJ,A7FAAA,Eb0BM/F,CAAX,E0G1BU,A7FAA,C6FAC2L,A7FAAA,S6FAV,A7FAA,E6FAqB,A7FAA;AwIIlC,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQ,AhHCR,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBY,Aa1BJ,AmHGR,ANAA,AlCDA,AsFAA,A1IFA,AFuBA,AzBrBA,eiGFe,A7FAA,K6FAP,A7FAA;AwIIR,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,ALAL,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBW,Aa1BJ,ANAL,AyHGF,ANAA,AlCDA,AsFAA,A1IFA,AFuBA,AzBrBA,M4FFMsE,A9FAAA,CmGFO,A7FAA,IwFEF,A9FAA,EmGAE,A7FAA,GwFAG,A9FAA,I8FAd,A9FAA,E8FAoB,A9FAA;A8IItB,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQlK,ALAJrB,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBS,Aa1BDqB,ANAJrB,AyHGJ,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,I4FFIA,A9FAAA,E8FAE,A9FAA,EmGAEqB,A7FAAA,CwFAC,A9FAA,ImGAI,ALAA2L,AxFAA,ANAAA,CmGACpF,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,K6FAhB,A7FAA,MwFAC,A9FAA,E8FAL,A9FAA;A8IIJ,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,A3GFG,AyHGH,ANAA,AlCDA,AsFAA,A1IFA,A3BEA,G4FJE,A9FAA,M8FEO,A9FAA,I8FAI,A9FAA,O8FAO2D,A9FAAA,K8FAP,A9FAA,K8FAiB,A9FAA,Q8FAjB,A9FAA,I8FA6B,A9FAA,C8FAClK,A9FAAA,K8FAK,A9FAA,C8FAC+J,A9FAAA,U8FAxC,A9FAA,E8FAoD,A9FAA;A8II7D,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFQ,ALAJpL,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHwBQ,Aa1BA,ANAJA,AyHGJ,ANAA,AlCDA,AsFAA,A1IFA,AFqBA,AzBnBA,I4FFIA,A9FAAA,E8FAE,A9FAA,EP0BMyB,CqG1BH,A9FAA,A2BqBA2N,GwErBG/N,A7FAAA,CwFACsL,A9FAAA,GP0BO,C0G1BH,A7FAA,C6FACgJ,A7FAAA,Cb0BK,AkCLvB,ClCKQ,AkCLYvN,ElCMV,G0G3BE,A7FAA,CqBqBZ,EAA4B/G,CwErBC,A1G2BZ,Aa3BY,C6FACmK,A7FAAA,GwFArB,ArG2BC,AO3BD,A2BqBT,CmErBkC,A9FAA,C2BqBCD,GwErB3B,A7FAA,E6FAgC,A7FAA,AqBqBxC,CmErBS,A9FAA,C2BqBiC1E,CmErBC,A9FAA,C8FAC,A9FAA,A2BqB5C,EAA8C,MmErBH,A9FAA,E8FAW,A9FAA,Q8FAX,A9FAA,C8FAlC,A9FAA,E8FAwD0E,A9FAAA,K8FAxD,A9FAA,C8FAL,A9FAA;A8IIJ,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFUA,ALAP,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH0BQ,Aa5BEA,ANAP,AyHGH,AxCDA,AsFAA,A1IFA,AFqBE,AzBnBF,MyBmBMmR,ElCOMjb,E0G5BF8J,A7FAAA,CqBqBC,GAAG,CwErBC,A7FAA,Cb4BK,E0G5BFlK,A7FAAA,AqBqBhB,GlCOuB,CAAjB,C0G5Be,A7FAA,C6FACsU,A1G6BdnU,Aa7BcmU,Ib6BV,CAAChU,E0G7BG,A7FAA,C6FAciN,A7FAAA,Eb6BtB,G0G7BQ,A1G4BV,Aa5BU,C6FAoBrD,A7FAAA,Ib8BzB,C0G9BK,A7FAA,C6FAR,A7FAA;AwIIV,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFU,AhHCV,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4BU3J,Aa9BA,AmHGV,AxCDA,AsFAA,A1IFA,AFqBE,AzBnBF,MT4BUA,AkCTJ5B,EAAE,GAAG,GwErBGqB,A7FAAA,Cb8BK,CAACG,AkCTlB,GwErBiB,A7FAA,C6FAC4J,A1G8BD,Aa9BCA,Eb8BM3J,Q0G9BZ,A1G8BK,Aa9BL,Cb8BJ,G0G9BwB8J,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FAN,A7FAA,K6FAiB,A7FAA,C6FAzC,A7FAA,E6FA4Csb,A7FAAA,Q6FAQ,A7FAA,C6FAC9N,A7FAAA,M6FAD,A7FAA,E6FAS/G,A7FAAA,K6FAT,A7FAA,E6FAgBkK,A7FAAA,K6FAhB,A7FAA,E6FAuB,A7FAA,K6FAvB,A7FAA,C6FAR,A7FAA,C6FA5C,A7FAA,K6FAuF4K,A7FAAA,a6FAa,A7FAA,C6FAC/N,A7FAAA,M6FAD,A7FAA,E6FAS/G,A7FAAA,K6FAT,A7FAA,C6FAb,A7FAA;AwIIjG,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFS,ALAP,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4BS,Aa9BA,ANAP,AyHGF,AxCDA,AsFAA,A1IFA,A3BEA,M4FFMrB,A9FAAA,E8FAJ,A9FAA,CmGHM,A7FAA,CwFGE,A9FAA,KmGAK,A7FAA;AwIIf,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFUkW,ALAN/N,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH6BQ,Aa/BE+N,ANAN/N,AyHGJ,AxCDA,AsFAA,A1IFA,AFqBE,AzBnBF,I4FFIA,A9FAAA,E2BqBEoD,ElCUM/J,E0G/BF0U,A7FAAA,CqBqBC,ClCUK,CAACtb,GkCVD,EwErBE,ALAA,AxFAA,ANAA,CmGACwN,ALAAA,ArG+BP,Aa/BOA,ANAAA,C2BqBjB,EAAoB,ElCUM,C0G/BV,ALAA,ArG+BV,Aa/BU,ANAA,EmGAS/G,ALAArB,ArGgCjBF,AahCiBuB,ANAArB,E8FAT,A9FAA,C8FAd,A9FAA,EmGAc,A7FAA,CbgCF,C0GhCkBuL,A1GgCjB3L,AahCiB2L,IbgClB,C0GhCE,A1GgCR,AahCQ,E6FAuB,A7FAA,CbgChB/J,I0GhCP,A1GgCW,AahCX,C6FAR,A1GgCoB,AahCpB,CbgCmB,CAAnB;AqJ5BV,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFS,ALALjI,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH+BQ,AajCC,ANALA,AyHGJ,AxCDA,AsFAA,A1IFA,AFqBIyG,AzBnBJ,I4FFIzG,A9FAAA,A2BqBAyG,EAAE,ElCYMF,CkCZH,EmErBE,A9FAA,C8FAC5E,A9FAAA,C2BqBC4D,ClCYK,CAACxC,KqGjCf,A9FAA,C8FAiBuK,A9FAAA,C2BqBZ,CmErBL,A9FAA,A2BqBmB,EmErBE7G,A9FAAA,E8FArB,A9FAA,EPiCQ,KAA0BxB,SAA9B,EACE,KAAKhC,IAAL,CAAU,KkCbX,CAAL,UlCaM,EAA4BoD,IAA5B,EAAkC8B,gBAAgB,IAAI7C,QAAtD;AqJ9BV,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFO,ALAH,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgCO,AalCA,ANAH,AyHGJ,AxCDA,AsFAA,A1IFA,AFqBG,AzBnBH,GyBiBE,MAEO,EmErBE,A9FAA,E2BqBE,GmErBT,A9FAA,I2BqBgB0M,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,KAAK/M,SAAvC,IAAoD,CAAC6C,KAAK,CAAC+J,UAA/D,EAA2E;AmHjBpF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFK,ALAF,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFK,ANAF,AyHGH,AxCDA,AsFAA,A1IFA,AFqBIpL,AzBnBJ,IyBmBIA,CwE1CO,A7FAA,CqB0CL,GAAG,EwErBE,A7FAA,EqBqBElB,EwErBE,A7FAA,C6FACiX,A7FAAA,MqBqBP,CAAc,GwErBZ,A7FAA,E6FAiB,A7FAA,4BqBqBnB,CAAL;AmHjBJ,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFM1U,AhHCN,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgCM,AalCAA,AmHGN,AxCDA,AsFAA,A1IFA,AFqBG,AzBnBH,MiGFMA,A7FAAA,GbkCO,E0GlCF,A7FAA,C6FACuG,A7FAAA,CbkCN,M0GlCA,A7FAA,G6FAgB,A7FAA,K6FAhB,A7FAA;AwIIN,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFMuO,ALAJ,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgCK,AalCCA,ANAJ,AyHGF,AxCDA,AsFAA,A1IFA,A3BEA,CTlBA,K0GgBMA,A7FAAA,GwFAG,A9FAA,I8FAP,A9FAA,MmGAiB,A7FAA,C6FAC/N,A7FAAA,M6FAD,A7FAA,E6FAS/G,A7FAAA,K6FAT,A7FAA,C6FAb,A7FAA;AwIIN,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFK,ALAJ,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFK,ANAJ,AyHGD,AxCDA,AsFAA,A1IFA,AFoBE,AzBlBF,MyBkBMrB,EAAJ,EAAQ;AmHhBV,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgCA3B,AalCG,AmHGH,AxCDA,AsFAA,A1IFA,AFoBI+J,AzBlBJ,GiGxC+E,A7FAA,C6FsC3E,A7FAA,AqBoBAA,MAAM,CAAC5L,ClCcC,CAACd,EkCdT,CAAY,MlCchB,CAAuBW,AkCdnB,EAAqB2D,ClCczB,CkCdI,ElCcyB3B,YAAY,CAAC3C,SAAb,CAAuBY,cAApD;AqJ9BA,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAF+O,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFE,ANAFA,AyHGA,AxCDA,AsFAA,A1IFA,AFoBI8Q,AzBlBJ,IyBkBIA,GAAG,CmEpBC,A9FAA,A2BoBAjhB,CmEpBCQ,A9FAAA,O2BoBL,CAAamL,CmEpBjB,A9FAA,C8FAmB+H,A9FAAA,A2BoBf,EAAiB5O,EAAjB,CmEpBJ,A9FAA,G8FA2B,A9FAA,U8FAUuL,A9FAAA,K8FAV,A9FAA,E8FAiBC,A9FAAA,Q8FAjB,A9FAA,E8FA2B3E,A9FAAA,E8FA3B,A9FAA,E8FA+B,A9FAA;A8II1D,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHgCAxI,AalCE,ANAA,AyHGF,AxCDA,AsFAA,A1IFA,AFoBIqe,AzBlBJ,IyBkBIA,EmEpBErb,A9FAAA,G2BoBG,EmEpBE,A9FAA,CPkCC,AkCdA,ClCcC3F,CqGlCC,A9FAA,G2BoBV,EmEpBeyL,A9FAAA,GPkCnB,CAAuB5K,UqGlCrB,A9FAA,QPkCF,GACI,SAASA,kBAAT,CAA4BqD,IAA5B,EAAkC;AqJ/BtC,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHiCM,AOnCJ,AyHGF,AxCDA,AsFAA,A1IFA,AFoBG,AzBlBH,M4FFM8C,ArGmCI/F,AOnCJ+F,G8FAG,A9FAA,G8FAG,A9FAA,GPmCN,EqGnCJ,ArGmCmB5C,AOnCnB,MPmCI,EAAuBxE,CAAvB;AqJ/BN,AKAA,AHDA,ANAA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHkCMwE,AgIjCN,AxCDA,AsFAA,A1IFA,A3BEA,ETkCMA,MAAM,GAAG,KAAKvB,OAAd;AqJhCN,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHkCM,AapCJ,ANAA,AyHGF,AxCDA,AsFAA,A1IFA,AFmBE,AzBjBF,M4FFM8Q,ArGoCIvP,AOpCJuP,GmGAG,A7FAA,AqBmBAqN,CwEnBCrb,A7FAAA,CwFAC,A9FAA,CPoCK,EqGpCF,A9FAA,A2BmBZ,CwEnBa,ALAAA,AxFAA,ANAAA,CmGACwG,A7FAAA,CboCKrJ,GqGpCD,A9FAA,CmGAX,ALAY4M,AxFAZ,ANAYA,KmGAK/J,A1GoCpB,AapCoBA,EbqClB,G0GrCuB,ALAjB,AxFAiB,ANAjB,CmGAkBzG,A7FAAA,GwFAG2R,ArGqCpB,AOrCoBA,GmGAT,A7FAA,CbqClB,CAL8B,C0GhCGlL,A1GuCnC,AavCmCA,K6FAK,A7FAA,C6FACyJ,A7FAAA,CwFAC,A9FAA,C8FACS,A9FAAA,K8FAD,A9FAA,C8FA9C,A9FAA,KmGAwB,A7FAA,I6FAsClK,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,K6FAiB,A7FAA,C6FAxE,A7FAA,C6FAP,A7FAA;AwIIF,AKAA,AHDA,ANAA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFC,AmHGD,AxCDA,AsFAA,A1IFA,AFmBC,AzBjBD;A4IEA,AKAA,AHDA,ANAA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCM,AOtCJ,AyHGF,AxCDA,AsFAA,A1IFA,A3BEA,M4FFMyU,ArGsCIvP,AOtCJuP,K8FAK,A9FAA,CPsCK,CAAC/S,EqGtCF,A9FAA,C8FACqI,A9FAAA,M8FAM,A9FAA,C8FAC6H,A9FAAA,IPsCb,IqGtCM,A9FAA,C8FAgBjB,ArGsCI/M,AOtCJ+M,K8FAhB,A9FAA,C8FAd,A9FAA,E8FAsC,A9FAA,CPsClC,EAAyC;AqJlC/C,AKAA,ATDA,ADAA,AjCAA,ALFA,ALAIA,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCR,ANAIA,AyHGJ,AxCDA,AsFAA,A1IFA,AFmBAF,ImEnBIE,A9FAAA,IPsCQlQ,AkCnBJ,CwEnBC6a,ALAA,AxFAAA,ANAA,A2BmBAxa,GmEnBG2Q,A9FAAA,KmGAZ,A1GsCqB,AatCrB,C6FAkBjE,A1GsCIxN,AatCJwN,AqBmBlB,CAAmBwG,KwEnBnB,A1GsCY,AatCZ,AqBmBA,EwEnB0BvN,A7FAAA,CqBmBC,ElCmBM,CAAzB,C0GtCR,ALA+B,AxFA/B,ANA+B,C8FACkK,ArGsCI,AOtCJA,CmGACA,A7FAAA,IwFAF,A9FAA,A2BmBMA,CwEnBrC,ALAI,AxFAJ,ANAI,EmGAoCwK,A7FAAA,EqBmBb,EAAiBvK,MwEnB5C,A7FAA,E6FAoD,A7FAA,AqBmBzB,EAA2B3E,EAA3B,EAA+B;AmHf1D,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCU,AatCR,ANAC,AyHGH,AxCDA,AsFAA,A1IFA,AFmBE,MwEnBIxF,A7FAAA,AqBmBAA,KwEnBK,A1GsCI9C,AatCJ,AqBmBA,CwEnBC4W,A7FAAA,EqBmBE,IlCmBJ,C0GtCJ,A7FAA,AqBmBahO,ElCmBMzJ,E0GtCF2D,A7FAAA,IbsCQ,C0GtCH,A1GsCI/B,AatCJ,C6FAC1E,A7FAAA,IqBmB3B,ClCmBuB,C0GtCF,A1GsCgB,AatChB,IbsCE,C0GtCe,A1GsC9B,AatC8B,C6FAlC,A7FAA,I6FAuC,A7FAA,C6FACyG,A7FAAA,K6FAK,A7FAA,C6FACsM,A7FAAA,I6FAlD,A7FAA,E6FAwD,A7FAA;AwII1D,AKAA,ATDA,ADAA,AjCAA,ALFItM,AhHCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCU,AatCNA,AmHGJ,AxCDA,AsFAA,A1IFA,AFmBE,IwEnBEA,A7FAAA,EqBmBEqB,GwEnBG,A7FAA,AqBmBA,CwEnBC+S,A7FAAA,CbsCKhX,CkCnBH,KAAV,GwEnBE,A7FAA,G6FAmB,A1GsCb,AatCa,C6FAnB,A7FAA,EbsC0B,CAApB;AqJlCV,AKAA,ATDA,ADAA,AjCAA,ALFI2J,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCS,AatCLA,ANAF,AyHGF,AxCDA,AsFAA,A1IFA,IsEAIA,A7FAAA,CbmCI,CqGnCF,A9FAA,ImGAI,A7FAA,C6FAC5L,A1GsCI,AatCJA,EwFAEgP,A9FAAA,EmGAT,A1GsCe1L,AatCf,C6FAY,A7FAA,KwFAV,ArGsCmB,AOtCnB,CmGAF,A1GsCsBF,AatCtB,E6FAoB2L,A7FAAA,EwFAE,ArGsCD,AOtCC,CPsCP,E0GtCf,A7FAA,GbsCgC/M,IqGtClC,A9FAA,E8FAoC,A9FAA,GPsCvB,EAAgC;AqJlC/C,AKAA,ATDA,ADAA,AjCAA,ALFG,ALACqI,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCU,AatCP,ANACA,AyHGJ,AxCDA,AsFAA,A1IFA,AFkBE,GwErBA,A7FAA,CwFGEA,A9FAAA,E8FAE,A9FAA,A2BkBAwI,GwElBG,ALAA7D,AxFAA,ANAAA,CPsCK,CkCpBH,ClCoBK,EkCpBF,CAACnK,EmElBX,ArGsCiB5C,AOtCjB,G2BkBgB,CAAC2M,QlCoBP,EkCpBA,GlCoBwB,CAA5B,AkCpByBmB,ElCqBvB,KAAKhO,MkCrB+B,ClCqBpC,AkCrBqCgN,GlCqBtB7N,EkCrBqB,CAA9C,GlCqB+B,CAAC4B,MAAP,CAAc,IAAd,CAAf,CADF,KAGE,OAAOQ,MAAM,CAACF,IAAD,CAAb;AqJrCZ,AKAA,ATDA,ADAA,AjCAA,ALFI,ALAA4L,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHuCS,AazCL,ANAAA,AyHGJ,AxCDA,AsFAA,A1IFA,IiEAIA,A9FAAA,Q8FAQ,A9FAA,G8FAG,A9FAA,I8FAX,A9FAA;A8IIJ,AKAA,ATDA,ADAA,AjCAA,ALFInK,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFIA,ANAD,AyHGH,AxCDA,AsFAA,A1IFA,AFkBE,IwElBEA,A7FAAA,EqBkBEgO,GwElBG,A7FAA,C6FACzU,A7FAAA,CqBkBC,IAAI,CwElBX,A7FAA,AqBkBY+J,IwElBItD,A7FAAA,EqBkBE,CAACmL,EwElBE,A7FAA,C6FACpB,A7FAAA,KqBkBV,CAAgBG,IwElBZ,A7FAA,CqBkBJ,CAAd,CwElBqC,A7FAA,C6FAnB,A7FAA,AqBkBoB,GwElBGA,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FA7C,A7FAA;AwIIJ,AKAA,ATDA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHsCQ,AaxCJ,AmHGJ,AxCDA,AsFAA,A1IFA,AFkBI2Q,IAAAA,IwElBIwK,A7FAAA,CqBkBC,ElCsBM,CkCtBH1J,GlCsBJ,G0GxCJ,A7FAA,E6FAgBhL,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,KqBkBK,CwElBX,A7FAA,AqBkBYhF,CwElBC5K,A7FAAA,IqBkBF,CAA3B,EwElBgB,A7FAA,C6FAqB4K,A7FAAA,K6FArB,A7FAA,E6FAhB,A7FAA,K6FAiDlK,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAahV,A7FAAA,I6FAb,A7FAA,C6FAkBgQ,A7FAAA,K6FAlB,A7FAA;AwIIrD,AKAA,ATDA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHsCO,AaxCH,ANAF,AyHGF,AxCDA,AsFAA,A1IFA,AFkBG,GlCGmC,CAqBhC,EqG1CA8D,A9FAAA,EmGAEhO,A7FAAA,GwFAN,A9FAA,EmGAW,ALAAmK,AxFAA,ANAAA,CmGAC4J,A7FAAA,OwFAO,A9FAA,G8FAG,A9FAA,EmGApB,A7FAA,E6FAwBgB,A7FAAA,IwFAf,A9FAA,C8FAX,A9FAA,K8FAoC,A9FAA,EmGAE,A7FAA,C6FAChO,A7FAAA,CwFAC,A9FAA,C8FACoD,A9FAAA,ImGAH,A7FAA,C6FAZ,A7FAA,GwFAU,A9FAA,E8FAeA,A9FAAA,Q8FAQ,A9FAA,G8FAGnK,A9FAAA,K8FAK,A9FAA,C8FACmM,A9FAAA,e8FAjB,A9FAA;A8IIrD,AKAA,ATDA,ADAA,AjCAA,ALFG,ALAD,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFG,ANAD,AyHGF,AxCDA,AsFAA,A1IFA,MiEAM,A9FAA,O8FAO3G,A9FAAA,E8FAP,A9FAA,K8FAc,A9FAA,U8FAlB,A9FAA,E8FA8BA,A9FAAA,E8FAE,A9FAA,G8FAGsG,A9FAAA,G8FAL,A9FAA;A8IIhC,AKAA,ATDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,A3GFE,AyHGF,AxCDA,AsFAA,A1IFA,AFkBE,MmElBI9L,A9FAAA,A2BkBA,KmElBK,A9FAA,C8FAC0G,A9FAAA,C2BkBCyD,KmElBX,A9FAA,E8FAkB2D,A9FAAA,C2BkBd,KAAoB,OmElBO,A9FAA,C8FAC,A9FAA,E2BkBhC,EmElB+B,A9FAA,A2BkBK,EmElBEtI,A9FAAA,E8FAP,A9FAA,C8FAb,A9FAA,C8FAlB,A9FAA,K8FA+C,A9FAA,I8FAIwI,A9FAAA,K8FAK,A9FAA,I8FAID,A9FAAA,U8FAU,A9FAA,C8FAC,A9FAA,I8FAD,A9FAA,E8FAO/N,A9FAAA,K8FAP,A9FAA,E8FAckK,A9FAAA,K8FAd,A9FAA,E8FAqB1E,A9FAAA,E8FArB,A9FAA,C8FAvB,A9FAA,E8FAiD,A9FAA;A8IIlG,AKAA,ATDA,ADAA,AjCAA,ALFEsP,ALAE9U,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHsCM,AaxCJ8U,ANAE9U,AyHGJ,AxCDA,AsFAA,A1IFA,AFkBIwF,EwElBFsP,A7FAAA,EwFAE9U,A9FAAA,A2BkBAwF,ElCsBMxL,AkCtBJ,GmElBG,A9FAA,A2BkBAmQ,CmElBC0C,A9FAAA,KmGAK,A1GwCI,AaxCJ,C6FAC9F,A1GwCIxN,AaxCJwN,CqBkBZ,EmElBA,A9FAA,GmGAW,A1GwCL,AaxCK,E6FAS/G,A7FAAA,GbwCO,CAAzB,C0GxCS,A7FAA,C6FAb,A1GwCgC,AaxChC;AwIIF,AKAA,ATDA,ADAA,AjCAA,ALFC,ALAGqB,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHsCQ,AaxCP,ANAGA,AyHGJ,AxCDA,AsFAA,A1IFA,AFkBI8I,ImElBA9I,A9FAAA,A2BkBA8I,GmElBG,A9FAA,CPwCK3J,EqGxCFyN,A9FAAA,EPwCM,AkCtBJ,GlCsBO5R,AkCtBJ,IAAX,ElCsBqB,CAACmE,CqGxCH,A9FAA,C8FAC,A9FAA,EPwCL,CAAY/B,CqGxCR,A9FAA,E8FAOuB,A9FAAA,GPwCX,CAAX,CqGxCe,A9FAA,E8FAcgO,A9FAAA,K8FAd,A9FAA,E8FAqB9D,A9FAAA,K8FArB,A9FAA,E8FA4BC,A9FAAA,Q8FA5B,A9FAA,E8FAsC3E,A9FAAA,E8FAtC,A9FAA,C8FAnB,A9FAA;A8IIJ,AKAA,ATDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHsCQ,AOxCL,AyHGH,AxCDA,AsFAA,A1IFA,AFkBG,QlCsBS/E,GAAJ;AqJpCR,AKAA,ATDA,ADAA,AjCAA,ALFA,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFA,ANAE,AyHGF,AxCDA,AsFAA,A1IFA,SsEASmU,ALAAvT,AxFAAuT,ANAAvT,G8FAP,A9FAA,SmGAF,A7FAA,C6FAsBrB,A7FAAA,K6FAtB,A7FAA,E6FA6BkK,A7FAAA,K6FA7B,A7FAA,E6FAoC,A7FAA;AwIIpC,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCQ,AavCN,ANAD,AyHGD,AxCDA,AsFAA,A1IFA,AFkBE,CmExCF,A9FAA,KmGsBMvL,A7FAAA,AqBkBAqP,EwElBJ,A7FAA,CbuCW/T,CAAC,CkCrBZ,ElCqBe,AkCrBJkQ,ClCqBL,EAAYlQ,CAAC,GAAGuG,CkCrBH,GlCqBO,AkCrBJ,ClCqBKjH,MAArB,CkCrBK,ClCqBwB,AkCrBnC,ElCqBqCU,CAA/B,EAAkC,AkCrBJ,IAAI,CAACkQ,QAAL,EAAeA,QAAQ,GAAGnK,KAAK,CAACmM,eAAjB;AmHdrD,AKAA,ATDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCU1L,AgIpCV,AxCDA,AsFAA,A1IFA,AFmBE,MlCoBQA,AkCpBJ,GlCoBO,GAAGD,CkCpBHgF,EAAP,ClCoBc,CAACvL,CAAD,CAAV,CkCpBU,UAAlB,EAA8BuL,EAAE,GAAGsG,GAAL;AmHfhC,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAF9B,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCU,AavCR,ANAFA,AyHGA,AxCDA,AsFAA,A1IFA,AFoBE,MwEpBI,A7FAA,AqBoBAhK,CwEpBCkL,A7FAAA,CwFAC,A9FAA,C8FAC7Q,A9FAAA,CPuCKoG,CkCnBH,CAAC+F,ClCmBK,IkCnBf,CmEpBF,ArGuCsB,AOvCtB,C8FAmB0H,A9FAAA,A2BoBAJ,CwEpBC,A7FAA,C6FAC5D,A7FAAA,EwFArB,A9FAA,GmGAoB,ALAM,AxFAN,ANAM,CmGApB,A7FAA,I6FAyB,A7FAA,CqBoBC,CAAC,ClCmBvB,EAA8B,CkCnBR,CwEpBMA,ALAA,AxFAAA,ANAA,C2BoBC1E,EAAP,CAAb,CwEpBY,A7FAA,AqBoB7B,KwEpB8C,A7FAA,AqBoBA,IAAIwI,IwEpB9C,A7FAA,CqBoBmD,GwEpBG9D,A7FAAA,CqBoBC6D,IwEpBI,A7FAA,K6FAK5Q,A7FAAA,CqBoBC,CAAC,IAAD,EAAO6C,CwEpBxE,A7FAA,I6FA6E,A7FAA,AqBoBZ,CwEpBaA,A7FAAA,CqBoBCkK,IwEpBI,A7FAA,C6FACH,A7FAAA,AqBoBnB,EAAqBvE,EAArB,CAAvB,EAAiD,GwEpB/F,A7FAA,E6FAoG,A7FAA;AwIItG,AKAA,ATDA,ADAA,AjCAA,ALFI7G,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCU,AavCNA,ANAF,AyHGF,AxCDA,AsFAA,A1IFA,AFoBIqB,IwEpBArB,A7FAAA,AqBoBAqB,EwEpBE,A7FAA,CwFAC8F,A9FAAA,EmGAE,A7FAA,AqBoBA,CAAC+G,ClCmBK3R,E0GvCFoQ,A7FAAA,MqBoBT,EmEpBF,A9FAA,C8FAoBe,A9FAAA,M8FApB,A9FAA,CPuCQ,CAAwB5L,G0GvCzB,A1GuCC,AavCD,C6FAyB,A7FAA,O6FAzB,A7FAA,E6FAkC,A7FAA,C6FAC,A7FAA,Q6FAD,A7FAA,E6FAW,A7FAA,Q6FAX,A7FAA,E6FAqB,A7FAA,Y6FArB,A7FAA,C6FAlC,A7FAA,E6FAsEyJ,A7FAAA,K6FAtE,A7FAA,C6FAL,A7FAA;AwIIJ,AKAA,ATDA,ADAA,AjCAA,ALFG,ALAF,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCS,AavCN,ANAF,AyHGD,AxCDA,AsFAA,A1IFA,AFoBI7I,CmEtBJ,A9FAA,G2BsBIA,GAAG,GAAG4M,aAAa,CAAC,IAAD,EAAOjO,KAAP,EAAcgO,KAAd,EAAqB9D,KAArB,EAA4BC,QAA5B,EAAsC3E,EAAtC,CAAnB;AmHhBJ,AKAA,ATDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AcCA,AxCDA,AsFAA,A1IFA,AFoBG;AmHhBH,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAFwE,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCN,ANAFA,AyHGA,AxCDA,AsFAA,A1IFA,AFqBE,QmErBM,A9FAA,CmGACrL,ALAAtE,ArGsCIa,AatCJyD,ANAAtE,A2BqBAgH,EwErBP,A7FAA,CqBqBA,MmErBF,A9FAA,C8FAmB8M,A9FAAA,M8FAnB,A9FAA,EPsCQ,CqGtCoB,ArGsCI,AOtCJ,Y8FAY,A9FAA,IPsChC;AqJlCR,AKAA,ATDA,ADAA,AjCAA,ALFC,ALAC,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCP,ANAC,AyHGF,AxCDA,AsFAA,A1IFA,AFqBC,CAxBD,KmEGMnO,A9FAAA,GPsCO9C,EqGtCF,A9FAA,G8FAG,A9FAA,EPsCN,GqGtCW4I,ArGsCIzJ,AOtCJyJ,MPsCU,CAAC7H,MAAP,CqGtCrB,ArGsCmC,AOtCnC,IPsCqB,CAAf;AqJlCR,AKAA,ATDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AgInCR,AxCDA,AsFAA,A1IFA,SpCsCab,YAAL,GAAoB,CAApB;AqJlCR,AKAA,ATDA,ADAA,AjCAA,ALFAyS,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCRA,ANAE,AyHGF,AxCDA,AsFAA,A1IFA,AFqBA7F,MmErBMhK,A9FAAA,EmGAE,A7FAA,AqBqBA,CwErBC3F,A7FAAA,AqBqBAA,EmErBE,ArGsCI,AOtCJ,C8FACgS,A9FAAA,GPsCJ,G0GtCR,ALAE,AxFAF,ANAE,A2BqBF,CwErBmB2I,A7FAAA,AqBqBA9G,CmErBC,A9FAA,G2BqBpB,GAA0B,CwErB1B,A7FAA,G6FA8B,A7FAA,QqBqBQ,IwErBI,A7FAA;AwII1C,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAElO,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCO,AatCL,ANAEA,AyHGJ,AxCDA,AsFAA,A1IFA,AFqBE,ImErBEA,A9FAAA,E2BqBEA,GwErBG,ALAA,AxFAA,ANAA,C8FACqM,A9FAAA,C2BqBC,GwErBG1G,A7FAAA,AqBqBA,EmErBV,A9FAA,G2BqBeG,SwErBV,A7FAA,C6FAoBgO,A7FAAA,IqBqB3B,GwErBO,A7FAA,K6FAgC,A7FAA,K6FAvC,A7FAA;AwIIF,AKAA,ATDA,ADAA,AjCAA,ALFC,ALAG,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFC,ANAG,AyHGJ,AxCDA,AsFAA,A1IFA,AFsBE9T,CwExBF,A7FAA,CqBwBEA,CwEtBC,A7FAA,IqBsBI,CmEtBC,A9FAA,A2BsBAqM,CmEtBCrM,A9FAAA,K8FAK,A9FAA,A2BsBZ,CmEtBaoM,A9FAAA,O8FAP,A9FAA,I8FAkB,A9FAA,C8FACpM,A9FAAA,K8FAK,A9FAA,C8FACqM,A9FAAA,M8FAzB,A9FAA,I8FAmC,A9FAA,C8FACrM,A9FAAA,K8FAK,A9FAA,C8FACuM,A9FAAA,gB8FA1C,A9FAA,I8FA8DvM,A9FAAA,K8FAK,A9FAA,C8FAC2M,A9FAAA,e8FAxE,A9FAA,E8FAyFyB,A9FAAA,W8FAW,A9FAA,C8FAC,A9FAA,I8FAD,A9FAA,E8FAOpO,A9FAAA,K8FAP,A9FAA,C8FAX,A9FAA;A8II7F,AKAA,ATDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCM1E,AOtCH,AyHGH,AxCDA,AsFAA,A1IFA,AFsBC,CAJD,ClCoBMA,SAAS,GAAGmD,MAAM,CAACF,IAAD,CAAlB;AqJlCN,AKAA,ATDA,ADAA,AjCAA,AVFC,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,A3GFC,AyHGD,AxCDA,AsFAA,A1IFA,CiEPA,A9FAA;A8IWA,AKAA,ATDA,ADAA,AjCAA,ALFAsR,AhHCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCM,AatCNA,AmHGA,AxCDA,AsFAA,A1IFA,AFsBA7F,MlCgBU,E0GtCF,A7FAA,AqBsBA,CwEtBC3P,A7FAAA,AqBsBAA,IlCgBQiB,K0GtCjB,A7FAA,AqBsBA,CwEtBmB2Z,A7FAAA,AqBsBA9G,GlCgBT,GkChBV,ElCgB+B,CkChBH,EwEtB5B,A7FAA,G6FAiC,A7FAA,IbsC3B,EAAqC,CkChBH,GwEtBG+G,A7FAAA,G6FAV,A7FAA,E6FAe,A7FAA;AwIIhD,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAFlL,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCN,ANAFA,AyHGA,AxCDA,AsFAA,A1IFA,AFsBE,MwEtBI,A7FAA,AqBsBAhK,CwEtBCuT,A7FAAA,CwFAC,A9FAA,C8FAClZ,ArGsCIY,AOtCJZ,E2BsBE,GAAG,ImEtBd,A9FAA,C8FAmBgU,A9FAAA,A2BsBAvI,CwEtBjB,A7FAA,E6FAoByN,A7FAAA,CbsCd,CAAoBhV,IAApB,EAA0BjD,GkChBhC,EwEtBiC,A7FAA,EwFAnC,A9FAA,CmGAsCsG,A7FAAA,CbsC9B,CqGtCgC,A9FAA,KmGAK,A7FAA,C6FAC,A7FAA,GwFAGyM,A9FAAA,cmGAJ,A7FAA,C6FAP,A7FAA,C6FA2BkF,A7FAAA,EwFAzB,A9FAA,C8FA4BpJ,A9FAAA,Q8FA5B,A9FAA,EmGAlB,ALAwD,AxFAxD,ANAwD;A8II9E,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCO,AatCL,ANAA,AyHGF,AxCDA,AsFAA,A1IFA,GpCoCM,G0GpCAmK,A7FAAA,GbsCO,I0GtCA,A1GsCIhZ,AatCJ,G6FAG,A7FAA,I6FAIiY,A7FAAA,EbsCM,KAAKpW,M0GtCf,A7FAA,C6FAkB+X,A7FAAA,EbsCrB,C0GtCG,A7FAA,C6FAd,A1GsCwC,AatCxC;AwIIF,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AatCN,ANAA,AyHGF,AxCDA,AsFAA,A1IFA,AFsBE,MmEtBI,A9FAA,A2BsBAlV,CwEtBC2F,A7FAAA,IqBsBI,CAAC0G,CmEtBClC,A9FAAA,K2BsBX,EAAkB,CwEtBlB,ALAI,AxFAJ,ANAI,CmGAgBmK,A7FAAA,IwFAI,A9FAA,GmGAxB,A7FAA,G6FA8BA,A7FAAA,EwFA9B,A9FAA,E8FAkCnK,A9FAAA,GmGAlC,A7FAA,C6FH8C,A7FAA,C6FGP,A7FAA,GwFAG,A9FAA,G8FAGA,A9FAAA,Q8FAQ,A9FAA,C8FACmE,A9FAAA,W8FAT,A9FAA,E8FAX,A9FAA;A8IIpC,AKAA,ATDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCQ,AOtCN,AyHGF,AxCDA,AsFAA,A1IFA,AFsBItO,IAAAA,EmEtBE,A9FAA,E8FAE,A9FAA,C8FAC,ArGsCI/F,AOtCJ,A2BsBA,ClCgBK,AkChBJoS,GlCgBO/Q,CqGtCT,A9FAA,E8FAQ,A9FAA,A2BsBZ,MmEtBI,ArGsCkB,AOtClB,CPsCmB/B,CqGtCH,A9FAA,KPsCP,EqGtCT,A9FAA,CPsC4B,CqGtCH,ArGsCzB,AOtCyB,EPsCMU,CAAC,IqGtChC,ArGsCoC,AOtCpC,CPsCA,CqGtCkC,A9FAA,CPsCKA,CAAC,EAAxC,EAA4C,EqGtC5C,A9FAA,E8FA4C,A9FAA,Q8FA5C,A9FAA,E8FAsD,A9FAA,M8FAtD,A9FAA,E8FA8D,A9FAA,O8FA9D,A9FAA,E8FAuE,A9FAA,S8FAvE,A9FAA,E8FAkF,A9FAA,U8FAlF,A9FAA,E8FA8F,A9FAA,K8FA9F,A9FAA,E8FAqG+O,A9FAAA,O8FArG,A9FAA,C8FA6G,A9FAA,C8FACmB,A9FAAA,Q8FAQ,A9FAA,G8FAG,A9FAA,E8FAZ,A9FAA,E8FAgBmE,A9FAAA,W8FAhB,A9FAA,E8FA7G,A9FAA,I8FA8I,A9FAA,C8FAC,A9FAA,C8FAjJ,A9FAA,C8FAJ,A9FAA,E8FAyJ,A9FAA,M8FAM,A9FAA,I8FAIzC,A9FAAA,oB8FAJ,A9FAA,C8FAyB1B,A9FAAA,Q8FAzB,A9FAA,C8FAN,A9FAA;A8II3J,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCU,AatCR,ANAA,AiFEF,AsFAA,A1IFA,AFuBI,OwEvBGxE,ALAAG,AxFAAH,ANAAG,C2BuBC,CAAC9F,ElCeM/E,GkCfD,CAACmR,MwEvBb,ALAA,AxFAA,ANAA,CmGAoBjC,ALAAgC,AxFAAhC,ANAAgC,A2BuBd,GlCeE,CAAoB5N,AkCfJ,CAACyB,GwEvBzB,A1GsCQ,AatCR,EbsCkC1E,AkCfJ,CwEvBC,A7FAA,AqBuBA+Q,ImEvB/B,A9FAA,CmGAoC1G,A7FAAA,CqBuB9B,CmEvBgCwE,A9FAAA,CPsCK,CAAClQ,CAAD,AkCfF,ClCejC,AkCfkC+F,ImEvB1C,A9FAA,C2BuB+C,CAAC6G,EwEvBjB,A7FAA,C6FAoByN,A7FAAA,KqBuB7C,EwEvByB,A7FAA,C6FA4BnK,A7FAAA,CqBuBC,CAACnK,KAAK,CwEvBlE,A7FAA,AqBuBmEuM,CwE5BrB,A7FAA,C6FKuB,A7FAA,cqBuB/D,IAAiFvM,KAAK,CAAC2M,eAA3F,EAA4GyB,WAAW,CAAC,IAAD,EAAOpO,KAAP,CAAX;AmHnBhH,AKAA,ATDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCS,AOtCP,AiFEF,AsFAA,A1IFA,AFuBG,SmEvBM,A9FAA,I8FAP,A9FAA;A8IIF,AKAA,ATDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCO,AatCL,ANAD,AiFED,AsFAA,A1IFA,AFuBC,CmE7BD,A9FAA,A2BqBA,KwEfMuE,A7FAAA,C6FAC,A7FAA,G6FAG,A7FAA,K6FAKoB,A7FAAA,c6FAL,A7FAA,C6FAoBuJ,A7FAAA,M6FApB,A7FAA,C6FA2BpL,A7FAAA,I6FAnC,A7FAA;AwIIF,AKAA,ATDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMqR,A7FAAA,O6FAO,A7FAA,G6FAG,A7FAA,E6FAd,A7FAA;AwIIF,AKAA,ATDA,ADAA,AjCAA,AVFA9Y,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCM,AOtCNA,AiFEA,AsFAA,A1IFA,AFuBA2N,MmEvBM,A9FAA,C8FACtM,A9FAAA,C2BuBC,ClCeK,AkCfJrD,IlCeH,KkCfN,CAAmBgU,EmEvBnB,A9FAA,C8FAsBrE,A9FAAA,Q8FAQ,A9FAA,C8FAC3P,A9FAAA,M2BuB/B,GmEvBA,A9FAA,A2BuBwC,EmEvBE,A9FAA,O2BuBOgU,SmEvBjD,A9FAA,E8FA4D,A9FAA,O2BuBpB,CAA4BlE,QAA5B,EAAsC;AmHnB9E,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCK,AatCH,ANAA,AiFEF,AsFAA,A1IFA,AFuBE,ClClCF,Q0GWS5F,A7FAAA,C6FAC,A7FAA,K6FAK,A7FAA,I6FAb,A7FAA,E6FAmB,A7FAA;AwIIrB,AJDA,ADAA,AjCAA,ALFI4Q,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,AFuBE,IwEvBEA,A7FAAA,EqBuBE,KwEvBK,A7FAA,EqBuBEhL,EwEvBEmK,A7FAAA,MqBuBT,CwEvBgB,A7FAA,C6FAC/G,A7FAAA,GqBuBG,EwEvBX,A7FAA,C6FAchJ,A7FAAA,C6FAC,A7FAA,C6FACL,A7FAAA,GqBuB7B,CwEvBa,A7FAA,C6FAX,A7FAA,AqBuBgCiG,QAAQ,GAAGA,QAAQ,CAACmE,WAAT,EAAX;AmHnBpC,AJDA,ADAA,AjCAA,ALFI/J,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCA,AatCIA,ANAF,AiFEF,AsFAA,A1IFA,AFuBE,IwEvBEA,A7FAAA,C6FAC,A7FAA,CqBuBC,EwEvBEA,A7FAAA,AqBuBA,CwEvBC,A1GsCA7D,AatCA,AqBuBA,CwEvBCyD,A7FAAA,I6FAN,A7FAA,AqBuBI,EAAQ,GlCehB,CAAoBnI,EkCfZ,EAAgB,ElCexB,EAA4BuC,GkCfpB,ClCeR,CkCfiC,ClCeCoC,MAAlC,AkCfQ,ElCekC,AkCfA,QAAlC,EAA4C,QAA5C,EAAsD,MAAtD,EAA8D,OAA9D,EAAuE,SAAvE,EAAkF,UAAlF,EAA8F,KAA9F,EAAqGqI,OAArG,CAA6G,CAACmB,QAAQ,GAAG,EAAZ,EAAgBmE,WAAhB,EAA7G,IAA8I,CAAC,CAAjJ,CAAJ,EAAyJ,MAAM,IAAI7Q,SAAJ,CAAc,uBAAuB0M,QAArC,CAAN;AmHnB3J,AJDA,ADAA,AjCAA,ALFG,ALADxM,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHoCE,AatCC,ANADA,AiFEF,AsFAA,A1IFA,AFuBE,EmEvBAA,A9FAAA,IPsCIc,CkCfCqH,KmEvBK,ArGsCA,AOtCA,E8FAE,A9FAA,CPsCC9J,IqG1C6C,A9FAA,EP0CvC,AkCfnB,ClCeoBkB,AkCfAiP,OlCepB,QkCfA,GAAsChC,QAAtC;AmHnBF,AJDA,ADAA,AjCAA,AVFEvM,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHqCE,AOvCAA,AiFEF,AsFAA,A1IFA,AFuBE,EmEvBAA,A9FAAA,G8FAG,A9FAA,CPuCCa,CqGvCC,A9FAA,E2BuBE,GlCgBG,CkChBV,GmEvBcb,A9FAAA,CPuCCT,EqGvCV,A9FAA,G8FAe,A9FAA,IPuCpB,EACE,OAAO,EAAP;AqJpCJ,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHuCE,AazCA,ANAE,AiFEJ,AsFAA,A1IFA,AFuBC,CAND,KlCwBMyD,C0GzCC+E,A7FAAA,IwFAI,A9FAA,K8FAKG,ArGyCA,AOzCAA,GPyCGrH,E0GzCjB,A7FAA,C6FAoByQ,A7FAAA,GbyCG,CAAC3Q,E0GzCxB,A7FAA,C6FA2B6F,A7FAAA,CwFAlB,ArGyCc,AOzCd,CPyCT,G0GzCA,ALAgC,AxFAhC,ANAgC,K8FAK0B,A9FAAA,c8FAL,A9FAA,C8FAoBkH,A9FAAA,S8FApB,A9FAA,E8FA9B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHuCE,AOzCC,AiFEH,AsFAA,A1IFA,MpCyCMpM,UAAU,KAAKzD,SAAnB,EACE,OAAO,EAAP;AqJtCJ,AJDA,ADAA,AjCAA,ALFE,ALR0D,A3GS5D,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlHyCE,Aa3CA,ANR0D,AiFU5D,AsFAA,A1IFA,AFuBA,CmE/BA,A9FAA,KmGQMgY,A1G2CA,Aa3CAA,GqBuBG5G,IwEvBI,A1G2CA3N,Aa3CA,K6FAK,A7FAA,E6FAhB,A7FAA,AqBuBF,CAAqBZ,CwEvBC,A7FAA,Cb2ChB,GkCpBN,CwEvB2B2F,A7FAAA,Cb2CC,AkCpBAuE,KAA5B,EAAmCC,GlCoBjC,EACE,C0G5CkB,A7FAA,C6FAoB+E,A7FAAA,CqBuB1C,EAA6C,ElCqBlCvO,C0G5CW,A7FAA,C6FA2BzG,A7FAAA,I6FA3B,A1G4CL,Aa5CK,C6FAgCib,A7FAAA,Eb4ClC,CAACvU,I0G5CC,A7FAA,Mb4CS,CAACpD,QAAX,IAAuBoD,UAAxB,CAAH,GAAyC,CAACA,UAAD,CAAtD;AqJxCJ,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CE,Aa7CA,A2EEF,AsFAA,A1IFA,AFuBE,MAAI,CwEvBC+E,A7FAAA,AqBuBA3F,ElCsBEW,GkCtBG,CAACoJ,ElCsBE,GACXlJ,G0G9CF,A7FAA,C6FAoBtH,A7FAAA,CqBuBhB,IAAqByG,CwEvBzB,A7FAA,G6FA6BmV,A7FAAA,CqBuBC,ClCuBb,AkCvBcjJ,ClCuBbtL,I0G9CkB,A7FAA,C6FACrH,A7FAAA,Kb8CpB,C0G9CjB,A1G6Ca,Aa7Cb,CqBuByB,ElCuBOyF,GkCvBiB,KAA7C,ElCuBsC,CAAC4B,CkCvBe,OAAOsJ,ElCuBvB,EAAatJ,CkCvBG,KAAiB,IlCuBV,CAACrH,GkCvBlE,EAAqF,ClCuB3C,CAD1C;AqJzCF,AJDA,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CC,Aa9CC,ANAF,AiFEA,AsFAA,A1IFA,AFuBI2Q,IAAAA,KwEvBK,ALAAqE,AxFAA,ANAAA,A2BuBA,GAAGjL,CwEvBV,A7FAA,KqBuBgB,CAAC2H,CmEvBnB,A9FAA,C8FAqBjL,A9FAAA,E2BuBT,CAAYkK,EmEvBxB,A9FAA,E8FA4BA,A9FAAA,C2BuBhB,EAAmBC,EmEvB/B,A9FAA,E8FAmCA,A9FAAA,I2BuBvB,CAAR,GmEvBJ,A9FAA,E8FA6C,A9FAA;A8II7C,AJDA,ADAA,AjCAA,ALFC,ALAC,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFC,ANAC,AiFEF,AsFAA,A1IFA,AFuBG,CwE3CH,A7FAA,E6FoBG,A7FAA,GwFAG,A9FAA,C8FACnK,A9FAAA,K8FAK,A9FAA,C8FAC+J,A9FAAA,U8FAP,A9FAA,I8FAqB/J,A9FAAA,K8FAK,A9FAA,C8FACkM,A9FAAA,a8FAN,A9FAA,K8FAwB,A9FAA,K8FA7C,A9FAA,I8FAsD,A9FAA,O8FAOhC,A9FAAA,K8FAP,A9FAA,K8FAiB,A9FAA,Q8FA3E,A9FAA,E8FAqF,A9FAA;A8IIvF,AJDA,ADAA,AjCAA,AVFIA,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CAlN,AO9CIkN,AiFEJ,AsFAA,A1IFA,IiEAIA,A9FAAA,K8FAK,A9FAA,G8FAG5G,ArG8CA,AO9CAA,CP8CCjJ,KqG9CK,A9FAA,C8FAC4Q,A9FAAA,GP8CnB,CqG9CY,ArG8CW3P,AO9CX,C8FAY4O,A9FAAA,K8FAZ,A9FAA,E8FAmBC,A9FAAA,CP8C/B,GAAmC,IqG9CvB,A9FAA,C8FAR,A9FAA,IP8CwC7O,SAAT,CAAmBiD,IAAnB,EAAyB;AqJ1C5D,AJDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CE,AO9CC,AiFEH,AsFAA,A1IFA,AFsBE,SlCwBOmC,AkCxBAwJ,KAAP,KlCwBiB,CAAC,IAAD,EAAO3L,IAAP,EAAa,IAAb,CAAjB;AqJ1CF,AJDA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CC,Aa9CD,A2EEA,AsFAA,A1IFA,AFsBC,ClCsBD,G0G5CI6W,A7FAAA,O6FAO,A7FAA,G6FAG,A7FAA,U6FAd,A7FAA;AwIIA,AJDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,A3GFE,AiFEF,AsFAA,A1IFA,SiEASlL,A9FAAA,K8FAP,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFA,ALAC,A3GCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CAlN,Aa9CA,ANAC,AiFED,AsFAA,A1IFA,AFsBAX,MAAM,CAACqB,EwEtBE2X,A7FAAA,Gb8CG,CAAChb,QkCxBb,ClCwBA,AkCxBsB2P,ClCwBClJ,OkCxBO,CAACzG,CwEtB/B,A7FAA,C6FAiC8D,A7FAAA,C6FAjC,A7FAA,Cb8CA,C0G9CoC,A7FAA,Eb8CE,EkCxBtC,EAA0C,KlCwBK2C,YAAT,CAAsBvC,IAAtB,CkCxBtC,ClCwBkE,CkCxBC;AmHlBnE,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CE,Aa9CA,A2EEF,AsFAA,A1IFA,AFsBE,MwEtBIJ,A7FAAA,C6FAC,A7FAA,Eb8CEuC,E0G9CE0U,A7FAAA,O6FAT,A7FAA,Cb8CiB,C0G9CC,A1G8CA,Aa9CA,Ib8CD,EAAO7W,IAAP,EAAa,KAAb,CAAjB;AqJ1CF,AJDA,ADAA,AjCAA,ALFI,ALAJlC,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CC,Aa9CG,ANAJA,AiFEA,AsFAA,A1IFA,AFsBE,ClCsBF,KqG5CM,A9FAA,C8FACqB,A9FAAA,c8FAP,A9FAA,C8FAsBsM,A9FAAA,Q8FAQ,A9FAA,C8FAC3P,A9FAAA,S8FA/B,A9FAA,E8FA0C,A9FAA,uB8FA1C,A9FAA,E8FAmE,A9FAA;A8IInE,AJDA,ADAA,AjCAA,ALFI8D,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,AFsBE,IwEtBEA,A7FAAA,C6FAC,A7FAA,G6FAGiX,A7FAAA,O6FAJ,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,ALAD,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CApY,Aa9CG,ANAD,AiFEF,AsFAA,A1IFA,AFsBEW,EAAAA,CwEzBA,A7FAA,M6FGO,A7FAA,Gb8CG,AkCxBA,ClCwBCoD,CkCxBC,KAJqD,OlC4BnE,GAA6B,UAASrB,OAAT,EAAkBnB,IAAlB,EAAwB;AqJ1CrD,AJDA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CE,Aa9CE,ANAF,AiFEF,AsFAA,A1IFA,AFsBEX,EAAAA,GAAG,ClCwBC,CkCxBC,MlCwBM8B,MkCxBM,ClCwBC,CAACqB,aAAf,KAAiC,UAArC,EAAiD;AqJ1CnD,AJDA,ADAA,AjCAA,ALFI,ALAFpD,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CI,Aa9CA,ANAFA,AiFEF,AsFAA,A1IFA,AFsBI,EmEtBFA,A9FAAA,SP8CS+B,AkCxBA,CmEtBC,A9FAA,E8FAE,A9FAA,E2BsBEoG,ElCwBE,CqGlDiD,ArGkDhD/E,AOlDgD,W2B0BxD,CAAoB0I,ClCwBpB,CAAsBlL,IAAtB,CAAP,MkCxBA;AmHlBJ,AJDA,ADAA,AjCAA,ALFIJ,ALAFP,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CG,Aa9CCO,ANAFP,AiFEF,AsFAA,A1IFA,AFsBG,EmEtBDA,A9FAAA,CP4CA,C0G5CEO,A7FAAA,C6FAC,ALAA,AxFAA,ANAA,E8FAE,A9FAA,EP8CE,OqG9COP,A9FAAA,G8FAT,A9FAA,G8FAe,A9FAA;A8IItB,AJDA,ADAA,AjCAA,ALFIO,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CI,Aa9CAA,ANAA,AiFEJ,AsFAA,A1IFA,AFcmE,CAAnE,GwEdIA,A7FAAA,AqBwBJ,CwExBK,A7FAA,I6FAIA,A7FAAA,C6FAC,A7FAA,CwFAC,ArG8CA4C,AO9CA,ImGAI,A7FAA,C6FAX,ALAY+E,AxFAZ,ANAYA,QP8CQ,CAAC/M,IAAd,CqG9CA,ArG8CmB2G,AO9CnB,C8FAoB+J,A9FAAA,MP8CpB,EAA4BlL,IAA5B,CqG9CP,ArG8CA,AO9CA;A8IIJ,AJDA,ADAA,AjCAA,ALFIJ,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CG,Aa9CCA,ANAD,AiFEH,AsFAA,A1IFA,AFwBA,IwExBIA,A7FAAA,C6FAC,A7FAA,I6FAIA,A7FAAA,C6FAC,A7FAA,K6FAK,A7FAA,C6FAX,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFIA,ALR+D,A3GSnE,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CC,Aa9CGA,ANR+D,AiFUnE,AsFAA,A1IFA,AFwBA,CmEhCA,ArGgDA,AOhDA,GmGQIA,ALAA,AxFAAA,ANAA,CmGAC,A7FAA,I6FAIA,A7FAAA,C6FAC,A7FAA,K6FAK,A7FAA,C6FAX,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFIA,ALAJ,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFIA,ANAJ,AiFEA,AsFAA,A1IFA,IsEAIA,A7FAAA,C6FAC,A7FAA,I6FAIA,A7FAAA,C6FAC,A7FAA,K6FAK,A7FAA,C6FAX,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFIA,ALAJ,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH4CAnB,Aa9CImB,ANAJ,AiFEA,AsFAA,A1IFA,AFuBA,IwEvBIA,A7FAAA,C6FAC,A7FAA,I6FAIA,A7FAAA,AqBuBA8P,CwEvBC,A7FAA,Eb8CE,CAAC5T,E0G9CE,A7FAA,E6FAX,A7FAA,Kb8CJ,AkCvBA,ClCuBuB0G,AkCvBAgG,MAAvB,EAA+B/G,KlCuB/B,AkCvBA,EAAsCgO,ClCuBCjN,IkCvBvC,EAA6CmJ,KAA7C,ElCuBA,AkCvBoDC,QAApD,EAA8D3E,EAA9D,EAAkE;AmHnBlE,AJDA,ADAA,AjCAA,ALFIrH,AhHCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,AFuBE,IwEvBEA,A7FAAA,C6FAC,A7FAA,CqBuBC,CAAC6P,KAAL,EAAY;AmHnBd,AJDA,ADAA,AjCAA,ALFG,ALAH,A3GCA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CA,Aa7CG,ANAH,AiFEA,AsFAA,A1IFA,AFuBI,QAAIQ,CmEvBCP,ArG6CAlN,AO7CAkN,O2BuBO,GAAGM,GmEvBnB,ArG6CA,AO7CA,C8FAuBxH,ArG6CAxI,AO7CAwI,IP6CvB,EqG7CA,ArG6C6B,AO7C7B,C2BuB8B,CmEvBC/G,A9FAAA,A2BuBAA,KmEvB/B,A9FAA,A2BuB8B,EmEvBQgO,A9FAAA,A2BuBA9D,KmEvBtC,A9FAA,A2BuB8B,EmEvBeA,A9FAAA,A2BuBAC,KmEvB7C,A9FAA,E8FAoDA,A9FAAA,C2BuBtB,CAA1B,MmEvBJ,A9FAA,E8FA8D3E,A9FAAA,E8FA9D,A9FAA,E8FAkE,A9FAA;A8IIlE,AJDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CE,AO7CA,AiFEF,AsFAA,A1IFA,MiEAM,ArG6CA/G,AO7CA,C8FACuP,A9FAAA,K8FAL,ArG6CU,AO7CV,E8FAY,A9FAA,CP6CC,KAAK9Q,OAAlB;AqJzCF,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,ArGFE,ANAE,AiFEJ,AsFAA,A1IFA,AFsBI,QmEtBIsR,A9FAAA,A2BsBAtE,CwEtBC/L,A7FAAA,C6FAP,A7FAA,GqBsBW,GmEtBG,A9FAA,E2BsBEqQ,CmEtBCD,A9FAAA,O2BsBf,EAAwB,EmEtBE,A9FAA,C8FACvO,A9FAAA,K8FAD,A9FAA,E8FAQkK,A9FAAA,K8FAR,A9FAA,E8FAeC,A9FAAA,Q8FAf,A9FAA,C8FA1B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CE,Aa7CD,A2EED,AsFAA,A1IFA,AFsBM6D,EwEtBJ,A7FAA,Ib6CIvP,AkCvBAuP,KAAK,ClCuBC,EkCvBE,GlCuBG7Q,CkCvBX,QlCuBJ,EAA0B;AqJzC5B,AJDA,ADAA,AjCAA,ALFA,ALAI,A3GCJ,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CI,Aa7CJ,ANAI,AiFEJ,AsFAA,A1IFA,AFsBMgN,MAAAA,EmEtBED,ArG6CAtJ,AO7CAsJ,K8FAK,A9FAA,C2BsBC,GAAG,CmEtBCsE,ArG6CA,AO7CAA,GP6CG/P,IkCvBf,CmEtBF,A9FAA,CP6CuB,CqG7CC,ArG6CAF,AO7CA,IP6CD,CAAvB;AqJzCJ,AJDA,ADAA,AjCAA,AVFMyP,A3GCN,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,AFsBM9D,MmEtBA8D,A9FAAA,A2BsBA9D,KmEtBK,A9FAA,A2BsBA,GmEtBG,A9FAA,A2BsBAsE,ImEtBR,A9FAA,I2BsBA;AmHlBN,AJDA,ADAA,AjCAA,AVFMrE,A3GCN,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CI,AO7CEA,AiFEN,AsFAA,A1IFA,AFsBK,MmEtBCA,A9FAAA,EP6CE,MqG7CM,A9FAA,CP6CCvJ,EqG7CE,A9FAA,Q8FAX,ArG6CE,AO7CF,KP6CwB,UAA1B,EAAsC;AqJzC1C,AJDA,ADAA,AjCAA,ALFA,ALAMsJ,A3GCN,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CM,Aa7CN,ANAMA,AiFEN,AsFAA,A1IFA,AFsBG,MmEtBGA,A9FAAA,GmGAGoL,A7FAAA,EwFAE,A9FAA,EP6CE,CqG7CC9G,ArG6CR,AO7CQA,QmGAd,ALAM,AxFAN,ANAM,CmGAiBrQ,A7FAAA,C6FAvB,A7FAA,E6FA0B6B,A7FAAA,K6FA1B,A7FAA,E6FAiC,A7FAA;AwIIjC,AJDA,ADAA,AjCAA,ALFE,ALAG,A3GCL,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CK,Aa7CH,ANAG,AiFEL,AsFAA,A1IFA,KpC2CI,C0G3CE7B,A7FAAA,C6FAC,A7FAA,I6FAI,A1G6CA,Aa7CA,C6FAL,A7FAA,Gb6CSyC,C0G7CCZ,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,Gb6CG,G0G7CT,A7FAA,Eb6Cc4D,G0G7CG,A7FAA,C6FAjB,A7FAA,I6FAsB6C,A7FAAA,Cb6C3B,EAA8B,E0G7CE,A7FAA,C6FACwG,A7FAAA,K6FA1C,A7FAA,E6FAiD,A7FAA,O6FAO,A7FAA,C6FAP,A7FAA;AwIInD,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CM,Aa7CJ,ANAC,AiFEH,AsFAA,A1IFA,AFqBE,MwErBIxG,A7FAAA,AqBqBArG,GAAG,EwErBE,A7FAA,C6FACoQ,A7FAAA,AqBqBA/J,ClCwBCY,IkCxBI,CAACmJ,IwErBhB,A7FAA,Cb6CqB,C0G7CC,A1G6CAxQ,Aa7CA,IqBqBZ,ElCwBN,C0G7CyB,A7FAA,AqBqBA,CwErBP,A7FAA,AqBqBZ,GAAuB2Q,KAAK,CAAC3Q,MAAvC;AmHjBF,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CK,AwF3CL,AsFAA,A1IFA,AFsBEyG,EAAAA,KAAK,CAACzG,MAAN,IAAgBI,GAAhB;AmHlBF,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A8BCA,AGAA,AFAA,AgBAA,ApBDA,AlH2CG,Aa7CD,ANAA,AiFEF,AsFAA,A1IFA,AFuBE,MwEvBIwE,ALAAxE,AxFAAwE,ANAAxE,A2BuBA0H,CwEvBC,A7FAA,EwFAE,A9FAA,A2BuBA,GwEvBGlD,ALAA6B,AxFAA7B,ANAA6B,A2BuBAA,CwEvBV,A7FAA,E6FAa,A7FAA,EwFAE,A9FAA,A2BuBA,CmEvBC+J,A9FAAA,A2BuBAxQ,MAAN,GAAeyG,CmEvBf,A9FAA,G8FAmB,A9FAA,C8FAnB,A9FAA,A2BuBoB,CAACyJ,EmEvBES,A9FAAA,K8FAK,A9FAA,C8FAC3Q,A9FAAA,K2BuBvC,CmEvBA,A9FAA,A2BUgE,CAchE;AmHpBF,AJDA,ADAA,AjCAA,ALFI,ALAFyG,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFI,ANAFA,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,K8FAK,A9FAA,C8FACzG,A9FAAA,M8FAN,A9FAA,I8FAgBI,A9FAAA,G8FAhB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CE,Aa7CE,ANAF,AiFEF,AsFAA,A1IFA,AFuBE,MmEvBI0H,A9FAAA,A2BuBA,CAACA,CwEvBCrB,A7FAAA,CwFAC,ArG6CA,AO7CA,CP6CP,AkCtBA,EmEvBUA,A9FAAA,A2BuBAA,CwEvBC,A7FAA,C6FAC8T,A7FAAA,GwFAG,A9FAA,A2BuBA,CmEvBCva,A9FAAA,A2BuBAyS,GwEvBV,A7FAA,GwFAI,A9FAA,CmGAahM,A7FAAA,EwFAEA,A9FAAA,A2BuBf,GwEvBkB,A7FAA,AqBuBA,CwEvBCzG,A7FAAA,CwFAC,A9FAA,C8FACkQ,A9FAAA,C2BuBrB,GwEvBR,A7FAA,E6FAmC,A7FAA,O6FAOzJ,ALA5C,AxFA4CA,ANA5C,C8FbgE,A9FAA,C8FalB,A9FAA,GmGAG,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAapL,A7FAAA,I6FAb,A7FAA,C6FAkBI,A7FAAA,I6FAlB,A7FAA,C6FAuB3K,A7FAAA,M6FA9B,A7FAA,C6FAnC,A7FAA,K6FA6E,A7FAA,O6FAOyG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAb,A7FAA;AwIIjF,AJDA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CC,Aa7CE,A2EEH,AsFAA,A1IFA,GsEPiC,A7FAA,C6FO7B,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,A3GFE,AiFEF,AsFAA,A1IFA,AFuBE,MmEvBI,A9FAA,A2BuBAyG,CmEvBCqB,A9FAAA,G8FAL,A9FAA,C2BuBS,CmEvBCrB,A9FAAA,A2BuBAoM,KmEvBK,A9FAA,C8FACJ,A9FAAA,C2BuBZ,IAAiBhM,ImEvBX,A9FAA,C2BuBgB,CAACqM,CmEvBC,A9FAA,I8FAlB,A9FAA,C2BuBV,EAAmC;AmHnBrC,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CArP,AwF3CA,AsFAA,A1IFA,AFuBI,QAAIyR,IlCsBI,AkCtBA,ClCsBCpU,EkCtBE2F,KAAK,CAAC4M,ClCsBrB,CAAuB5L,UAAvB,GAAoC,IkCtBhC,KlCsByCA,UAAT,GAAsB;AqJzC1D,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CE,Aa7CA,ANAA,AiFEF,AsFAA,A1IFA,AFuBIhB,IAAAA,EwEvBE7B,ALAA6B,AxFAA7B,ANAA6B,CmGAC,A7FAA,Eb6CE,AkCtBA,CwEvBCA,A7FAAA,AqBuBA4M,CmEvBC,A9FAA,C8FACR,A9FAAA,EP6CEhP,C0G7CC,A7FAA,C6FACqM,A7FAAA,GwFAV,A9FAA,I8FAiBzJ,A9FAAA,GP6Cd,EqG7CmB,A9FAA,CmGA1B,ALA2BqM,ArG6CA,Aa7C3B,ANA2BA,A2BuBzB,ClCsBK,C0G7CsBrM,A7FAAA,CqBuBC,ClCsBC7D,EqG7C/B,A9FAA,CmGAkC,A7FAA,C6FACsN,ALAA,AxFAAA,ANAA,UP6CU,CAAC,E0G7CjB,A7FAA,G6FAsB4L,A1G6CAnY,Aa7CAmY,Ob6CN,CAAtC,GAAuD,EAA9D,U0G7C0E,A7FAA,C6FAClX,A7FAAA,C6FAD,A7FAA,C6FA7C,A7FAA;AwII/B,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CC,Aa7CC,ANAE,AiFEJ,AsFAA,A1IFA,AFuBM+L,ClCoBN,K0G3CM/L,A7FAAA,AqBuBA+L,CwEvBC,A7FAA,CwFACuE,A9FAAA,GmGAGzO,A7FAAA,AqBuBA,CmEvBC,A9FAA,C2BuBCkK,EmEvBElK,A9FAAA,CmGAC,A7FAA,C6FACzG,A7FAAA,CqBsBe,EmEtBZ,A9FAA,C8FACqT,A9FAAA,EmGAnB,A7FAA,E6FAuB,A7FAA,O6FAOzO,A7FAAA,C6FAP,A7FAA,C6FXQ,A7FAA,C6FWE,A7FAA,KwFA/B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,AVFI6B,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFuBMmK,ImEvBFnK,A9FAAA,E2BuBEmK,GmEvBG,A9FAA,C8FACyC,A9FAAA,I2BuBI,EAAEzC,QAFgB,KmErB5B,A9FAA,G8FA4B,A9FAA;A8IIhC,AJDA,ADAA,AjCAA,ALFE,ALAID,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CA,Aa7CE,ANAIA,AiFEN,AsFAA,A1IFA,AFuBM8D,MwEvBA,ALAA9D,AxFAA,ANAAA,A2BuBA8D,CwEvBChO,A7FAAA,Eb6CEhB,EqG7CE,A9FAA,A2BuBA,CwEvBC,A7FAA,C6FACwH,ALAA0D,AxFAA1D,ANAA0D,A2BuBA8D,KwEvBX,ALD8B,AxFC9B,AND8B,A2BqBA,ClCyBhC,C0G7CoB,A1G6CA/M,Aa7CA,Gb6CpB,EAAyB9C,CAAzB,EAA4B;AqJzC5B,AJDA,ADAA,AjCAA,ALFI6B,ALAEmK,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH2CE,Aa7CEnK,ANAEmK,AiFEN,AsFAA,A1IFA,AFuBMC,IwEvBFpK,A7FAAA,EwFAEmK,ArG6CAjJ,AO7CAiJ,A2BuBAC,GwEvBG,A7FAA,C6FAC2J,A1G6CA,Aa7CAA,Gb6CG,CqG7CC,A9FAA,A2BuBA,EmEvBE5J,A9FAAA,A2BuBA3E,ClCsBCzL,CkC1Be,IwEnB5B,A1G6CS,Aa7CT,Cb6CmBoE,CqG/CS,ArG+CnB,AO/CmB,CmGEP,A1G6CvB,Aa7CuB,I6FArB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFI,ALAE6P,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFI,ANAEA,AiFEN,AsFAA,A1IFA,AFuBM7J,MmEvBA6J,A9FAAA,A2BuBA7J,IAAI,CwEvBC,ALAA,AxFAA,ANAA,CmGAP,A7FAA,AqBuBQ,CmEvBC6J,A9FAAA,K8FHmB,A9FAA;A8IOhC,AJDA,ADAA,AjCAA,ALFG,ALAG5D,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CE,Aa5CC,ANAGA,AiFEN,AsFAA,A1IFA,AFiBgC,KAA5B,CmEjBEA,A9FAAA,CP4CC,IAAInQ,CAAC,EqG5CE,A9FAA,CP4CC,CqG5CCuL,ArG4Cd,AO5CcA,E8FJgB,ArGgDdvL,AOhDc,CPgDb,GAAGkE,CAApB,EAAuB,EAAElE,CAAzB,EACEiH,IAAI,CAACjH,CAAD,CAAJ,GAAUgH,GAAG,CAAChH,CAAD,CAAb;AqJzCJ,AJDA,ADAA,AjCAA,AVFMkK,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,MiEAMA,A9FAAA,I8FAI,A9FAA,E8FAE,A9FAA;A8IIZ,AJDA,ADAA,AjCAA,ALFE,ALN8B,A3GOhC,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CE,Aa5CA,ANN8B,AiFQhC,AsFAA,A1IFA,AFsBI,KmE5BA,A9FAA,G2B4BIsK,CwEtBCzO,A1G4CAkB,Aa5CAlB,GqBsBL,ClCsBF,C0G5CY,A7FAA,AqBsBA,CwEtBCzG,A7FAAA,M6FAb,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CC,Aa5CA,A2EED,AsFAA,A1IFA,AFsBMkV,EwEtBJ,A7FAA,IqBsBIA,IAAI,CAACtK,IAAL,GAAYnE,KAAK,CAAC4M,mBAAlB;AmHlBN,AJDA,ADAA,AjCAA,AVFI,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,A3GFI,AiFEJ,AsFAA,A1IFA,AFsBK,KAFD,GmEpBI6B,A9FAAA,G2BsBG,CmEtBP,A9FAA,E8FAU,A9FAA;A8IId,AJDA,ADAA,AjCAA,AVFMA,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CA,AO5CMA,AiFEN,AsFAA,A1IFA,AFsBMzO,MmEtBAyO,A9FAAA,A2BsBAzO,GlCsBGO,CqG5CC,A9FAA,C8FAC4D,A9FAAA,A2BsBA,CAACwI,GmEtBN,A9FAA,G8FAY3M,ArG4ClB,AO5CkBA,CP4CCG,IqG5CI,ArG4CvB,AO5CuB,C8FACyM,A9FAAA,CP4CCzL,EkCtBnB,GlCsBN,AkCtB8BnB,ElCsBE,GkCtBG,CAAC4M,OmEtB9B,A9FAA,Y2BsBA;AmHlBN,AJDA,ADAA,AjCAA,ALFAiD,ALAK,A3GCL,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CE,Aa5CFA,ANAK,AiFEL,AsFAA,A1IFA,AFsBK,KmExBD,A9FAA,GmGEI,A7FAA,C6FACxV,A1G4CA8G,Aa5CA9G,EwFAE,A9FAA,GP4CG,GAAG,C0G5CjB,A1G4CS,Aa5CT,C6FAmB2X,A7FAAA,Eb4CE7R,E0G5CrB,A7FAA,Eb4CyB,C0G5CC,A1G4CA5G,Aa5CA,Mb4CxB,EAAgC4H,E0G5CEhD,A7FAAA,C6FAV,A7FAA,E6FAa,A1G4CA,Aa5CA,Eb4CrC,EACEgC,IAAI,CAACgB,KAAD,CAAJ,GAAchB,IAAI,CAACgB,KAAK,GAAG,CAAT,CAAlB;AqJzCJ,AJDA,ADAA,AjCAA,ALFEgS,ALAInT,A3GCN,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFEmT,ANAInT,AiFEN,AsFAA,A1IFA,EsEAEmT,A7FAAA,IwFAInT,A9FAAA,CmGAC,A7FAA,C6FAC,A7FAA,GwFAG,A9FAA,C8FAC2M,A9FAAA,EmGAL,A7FAA,E6FASxO,A7FAAA,C6FAT,A7FAA,C6FAL,A7FAA,SwFAI,A9FAA,G8FAwB6B,A9FAAA,K8FAK,A9FAA,C8FAC4M,A9FAAA,mB8FA9B,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFEzO,ALAG,A3GCL,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CEgC,Aa5CAhC,ANAG,AiFEL,AsFAA,A1IFA,AFqBI6B,EwErBF7B,A1G4CAgC,Aa5CAhC,C6FAC,A7FAA,CqBqBC6B,EwErBEuV,A1G4CA,Aa5CAA,Cb4CCnU,EkCvBE,ClCuBP,AkCvBQ0L,IwErBI,A7FAA,C6FAC3O,A7FAAA,C6FAD,A7FAA,E6FAI,A7FAA,E6FAJ,A7FAA,C6FAZ,A7FAA,SqBqBE,IAA8B,CAA9B;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CC,Aa5CC,A2EEF,AsFAA,A1IFA,AFqBG,GAfD,GwENI6B,A7FAAA,GqBqBG,EwErBE,A7FAA,G6FAG,A7FAA,K6FAK2F,A7FAAA,c6FAjB,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFE,ALAE3F,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,AFqBI0O,ImErBA1O,A9FAAA,A2BqBA0O,EwErBE8G,A7FAAA,GwFAG,A9FAA,C8FAC1I,A9FAAA,CmGAC,A7FAA,AqBqBA,CAAC/F,EwErBE5I,A7FAAA,C6FAZ,A7FAA,GqBqBS,EAAS6B,KAAT,EAAgB,GmErBvB,A9FAA,E2BqBO,EmErBuB,A9FAA,A2BqBArG,CmErB9B,A9FAA,E2BqBO,EAA4BuQ,KAA5B,EAAmCC,QAAnC,EAA6C3E,EAA7C,CAAP;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CA,Aa5CE,ANAC,AiFEH,AsFAA,A1IFA,AFqBG,GmEtCD,A9FAA,GmGiBIrH,A7FAAA,C6FAC,A7FAA,EwFAE,ArG4CA0C,AO5CA,GmGAG,A7FAA,C6FAV,A7FAA,E6FAab,A7FAAA,K6FAK,A7FAA,C6FACgU,A7FAAA,Gb4CrB,CAAyB/S,GAAzB,EAA8B,M0G5Cf,A7FAA,G6FAwB,A7FAA,K6FAxB,A7FAA,C6FLwB,A7FAA,C6FKO,A7FAA;AwII9C,AJDA,ADAA,AjCAA,ALFE,ALAEyN,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlH0CE,Aa5CA,ANAEA,AiFEJ,AsFAA,A1IFA,IiEAIA,A9FAAA,EP4CErN,GAAG,EqG5CE,A9FAA,C8FAC0F,ArG4CA,AO5CAA,IP4CIhN,EqG5CL,A9FAA,E8FASiG,A9FAAA,CP4CR,CAAUiB,GqG5CX,ArG4Cc,AO5Cd,CP4Ce1H,CqG5CC,A9FAA,K8FAhB,ArG4CC,AO5CD,CP4CT,CqG5CgCI,A9FAAA,G8FAvB,A9FAA,E8FA4BuQ,A9FAAA,K8FA5B,A9FAA,E8FAmCC,A9FAAA,Q8FAnC,A9FAA,E8FA6C3E,A9FAAA,E8FA7C,A9FAA,C8FAP,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAC,AiFEH,AsFAA,A1IFA,AFqBE,SAAOnE,GAAP;AmHjBF,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHyCE,AwFzCF,AsFAA,A1IFA,AFqBC,OlCsBM,IAAIpH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoH,GAAG,CAAC9H,MAAxB,EAAgC,EAAEU,CAAlC,EAAqC;AqJvCvC,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHyCIoH,Aa3CF,ANAA,AiFEF,AsFAA,A1IFA,IpC2CIA,E0G3CElD,A7FAAA,C6FAC,A1G2CA,Aa3CA,Cb2CClE,CqG3CCoH,ArG2CF,AO3CEA,CP2CL,E0G3CQ,ALAV,AxFAU,ANAV,CmGAI,A1G2COJ,Aa3CP,Gb2CU,C0G3CCjB,A1G2CA/F,Aa3CA+F,Cb2CD,CAAH,CAAOxC,E0G3CE,A7FAA,C6FACuW,A7FAAA,Kb2CV,IAAmB9S,G0G3C1B,A1G2C6B,Aa3C7B,Cb2C8BhH,CAAD,CAA/B,E0G3CoC,A7FAA,C6FAC+F,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FAN,A7FAA,K6FAwB,A7FAA,C6FAxB,A7FAA,G6FA4BzJ,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,I6FAgByG,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FAlD,A7FAA,G6FAkEzJ,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,G6FAe,A7FAA,C6FAlF,A7FAA,K6FAwFyG,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAhI,A7FAA,C6FAJ,A7FAA,E6FA4I,A7FAA;AwII9I,AJDA,ADAA,AjCAA,ALFI2M,ALAH,A3GCD,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHyCG,Aa3CCA,ANAH,AiFED,AsFAA,A1IFA,AFqBA,IwErBIA,A7FAAA,K6FAK,A7FAA,AqBqBAzE,CwErBC,A7FAA,MqBqBV,CAAiB3H,MAAjB,EAAyB/G,KwErBhB,A7FAA,AqBqBT,EwErBgCA,A7FAAA,AqBqBAyN,KwErBK,A7FAA,C6FAClU,A7FAAA,AqBqBtC,EAAwCI,GAAxC,CwErBS,A7FAA,CqBqBoCuQ,CwErBClK,A7FAAA,IqBqB9C,CwErBmD,A7FAA,C6FACwG,A7FAAA,AqBqBA2D,KwErB3C,A7FAA,C6FAL,A7FAA,EqBqBJ,EAA8D3E,EAA9D,EAAkE;AmHjBlE,AJDA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,AFqBExF,EAAAA,KAAK,CwErBCA,A7FAAA,AqBqBA0M,KwErBK,A7FAA,C6FACnT,A7FAAA,EqBqBZ,GAAiBI,CwErBX,A7FAA,EqBqBN,GwErBuB,A7FAA,C6FAjB,A7FAA,I6FAsBqG,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAhC,A7FAA,E6FAuCiP,A7FAAA,W6FAW,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAX,A7FAA,C6FAvC,A7FAA,K6FA8DV,A7FAAA,Y6FAY,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAZ,A7FAA;AwIIlE,AJDA,ADAA,AjCAA,ALFI,ALAJ,A3GCA,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCE,Aa1CE,ANAJ,AiFEA,AsFAA,A1IFA,AFqBE/U,EAAAA,KAAK,CAACyM,CmErBCiC,ArG0CArN,AO1CAqN,EmGAE,A7FAA,Cb0CT,G0G1CE,A7FAA,AqBqBF,CmErBF,A9FAA,C8FAiB3H,A9FAAA,C2BqBCvB,EAAhB,GmErBF,A9FAA,E8FAyBxF,A9FAAA,K8FAzB,A9FAA,E8FAgCyN,A9FAAA,M8FAhC,A9FAA,E8FAwC9T,A9FAAA,G8FAxC,A9FAA,E8FA6CuQ,A9FAAA,K8FA7C,A9FAA,E8FAoDC,A9FAAA,Q8FApD,A9FAA,E8FA8D3E,A9FAAA,E8FA9D,A9FAA,E8FAkE,A9FAA;A8IIlE,AJDA,ADAA,AjCAA,ALFG,ALADxF,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCC,Aa1CE,ANADA,AiFEF,AsFAA,A1IFA,AFqBEA,EmErBAA,A9FAAA,A2BqBAA,KmErBK,A9FAA,A2BqBA,CmErBC0M,A9FAAA,A2BqBAN,OAAN,CmErBA,A9FAA,E2BqBgB,CmErBCzS,A9FAAA,G8FAjB,A9FAA,A2BqBA;AmHjBF,AJDA,ADAA,AjCAA,AVFEqG,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,A3GFEA,AiFEF,AsFAA,A1IFA,AFqBEA,EmErBAA,A9FAAA,A2BqBAA,KmErBK,A9FAA,A2BqBA,CmErBCyM,A9FAAA,A2BqBAH,IAAN,GmErBA,A9FAA,A2BqBa,GmErBG9G,A9FAAA,C2BqBhB,CmErBA,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFErH,ALAA6B,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCA,Aa1CE7B,ANAA6B,AiFEF,AsFAA,A1IFA,AFqBE,EwErBA7B,ALAA6B,AxFAA7B,ANAA6B,CmGAC,A7FAA,G6FAGsV,A7FAAA,AqBqBA7H,CmErBC,A9FAA,C8FACrB,A9FAAA,CP0CCrR,GkCrBP,ClCqBF,CAAc2E,AkCrBAqH,CmErBZ,A9FAA,G8FAgB,A9FAA,CmGAC,A7FAA,C6FAC5I,A7FAAA,AqBqBA,CwErBD,A1G0CnB,Aa1CmB,AqBqBEuP,CmErBnB,A9FAA,CmGAqB1N,A1G0CAzE,Aa1CAyE,Ib0CvB,C0G1CmB,A7FAA,AqBqBL,CwErBZ,A1G0C2B,Aa1C3B,AqBqB2BkK,CwEpCU,A7FAA,C6FeR,A7FAA,GqBqBjB,EAAsBlK,KAAK,CAACwM,OAA5B,EAAZ,KAAsDzF,MAAM,CAACyG,MAAP,CAActD,KAAd,EAAqBC,QAArB,EAA+BnK,KAAK,CAACwM,OAArC;AmHjBxD,AJDA,ADAA,AjCAA,AVFExM,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCE,AO1CAA,AiFEF,AsFAA,A1IFA,AFqBEA,EmErBAA,A9FAAA,A2BqBAA,KmErBK,A9FAA,A2BqBA,CmErBCsM,A9FAAA,A2BqBAA,ClCqBC,GqG1CP,A9FAA,A2BqBA,ClCqBWhL,EqG1CE,A9FAA,A2BqBA,ImErBb,A9FAA,CP0CO,AkCrBP,ClCqBmB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AqJtChD,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCI,Aa1CF,ANAA,AiFEF,AsFAA,A1IFA,AFqBC,MwErBKrD,ALAA6B,AxFAA7B,ANAA6B,CmGAC,A7FAA,IwFAI,A9FAA,CmGAC,ALAA4F,AxFAA,ANAAA,CmGAN,A1G0COnE,Aa1CP,I6FAWzB,A7FAAA,IwFAf,A9FAA,CmGAoB,A7FAA,C6FACwG,ALAAxG,AxFAAwG,ANAAxG,GP0CnB,E0G1CF,ALA0B,AxFA1B,ANA0B,C8FACwM,ArG0CA,AO1CAA,CmGAC,A7FAA,MwFAP,A9FAA,C8FAc,A9FAA,I8FAId,A9FAAA,oB8FAJ,A9FAA,C8FAyB,A9FAA,O8FAzB,A9FAA,C8FAd,A9FAA,E8FArB,A9FAA,K8FA2E,A9FAA,I8FAI+B,A9FAAA,M8FAJ,A9FAA,E8FAY1G,A9FAAA,M8FAM,A9FAA,C8FAC2G,A9FAAA,O8FAP,A9FAA,C8FAexD,A9FAAA,K8FAf,A9FAA,E8FAsBlK,A9FAAA,K8FAK,A9FAA,C8FACwM,A9FAAA,O8FA5B,A9FAA,E8FAZ,A9FAA,K8FAsDzF,A9FAAA,M8FAM,A9FAA,C8FACyG,A9FAAA,M8FAP,A9FAA,C8FActD,A9FAAA,K8FAd,A9FAA,E8FAqBC,A9FAAA,Q8FArB,A9FAA,E8FA+BnK,A9FAAA,K8FAK,A9FAA,C8FACwM,A9FAAA,O8FArC,A9FAA;A8IInI,AJDA,ADAA,AjCAA,ALFI,ALAFxM,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCM,Aa1CF,ANAFA,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,K8FAK,A9FAA,CmGACA,ALAAsM,AxFAAtM,ANAAsM,EP0CE5K,EqG1CR,A9FAA,CmGAW,A7FAA,C6FACnI,A7FAAA,CwFAC,A9FAA,KmGAP,ALAN,AxFAM,ANAN,GP0CqB,E0G1CE,A7FAA,C6FArB,A7FAA,E6FAwBkc,A1G0CAtY,Aa1CAsY,Sb0CtB,E0G1CiC,A1G0CA,Aa1CA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAX,A7FAA;AwII5B,AJDA,ADAA,AjCAA,ALFI,ALAH,A3GCD,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCQ/V,Aa1CJ,ANAH,AiFED,AsFAA,A1IFA,AFqBA,QlCqBQA,CkCrBCiP,EwErBE,A7FAA,I6FAP,A1G0CW,Aa1CX,Cb0CY1T,KkCrBhB,CAAsB8L,MAAtB,ElCqBQ,AkCrBsB/G,ClCqBC,IkCrB/B,EAAqCsM,ClCqB7B,EAAgC5K,CkCrBxC,EAA2C/C,EAA3C,EAA+C6G,EAA/C,EAAmD,ElCqB3C;AqJtCR,AJDA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHwCO,Aa1CJ,A2EEH,AsFAA,A1IFA,AFqBE,GwEzCqC,A7FAA,C6FoBnC,A7FAA,AqBqBAxF,KAAK,CAAC6M,SAAR;AmHjBF,AJDA,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAF,AiFEA,AsFAA,A1IFA,SiEAS8B,A9FAAA,Y8FAT,A9FAA,C8FAsB5H,A9FAAA,M8FAtB,A9FAA,E8FA8B/G,A9FAAA,K8FA9B,A9FAA,E8FAqCsM,A9FAAA,I8FArC,A9FAA,E8FA2C3N,A9FAAA,E8FA3C,A9FAA,E8FA+C6G,A9FAAA,E8FA/C,A9FAA,E8FAmD,A9FAA;A8IInD,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCMjE,AazCJ,ANAA,AiFEF,AsFAA,A1IFA,AFqBE,ImErBEvB,A9FAAA,EPyCEuB,AkCpBA+K,GmErBG,A9FAA,C8FACO,A9FAAA,A2BqBR,EAAU,ClCoBC,CAAC,GAAGlL,EqGzCf,A9FAA,GPyCY,CAAS5I,IAAT,CAAciB,SAAd,CAAD,CAAP;AqJrCN,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCK,AazCH,A2EEF,AsFAA,A1IFA,AFqBI;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFqBI,MmErBEsS,A9FAAA,I8FAJ,A9FAA,E8FAU,A9FAA;A8IIZ,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHqCK,AavCH,ANAE,AiFEJ,AsFAA,A1IFA,AFqBIwO,IAAAA,GAAG,CAACjhB,QAAJ,CAAa2L,EAAb,EAAiB7G,EAAjB,EAHQ,CAIR;AmHlBJ,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHqCI,AavCF,ANAE,AiFEJ,AsFAA,A1IFA,AFsBI,QlCiBI+C,aAAJ,CAP4C,CAS5C;AqJrCJ,AJDA,ADAA,AjCAA,ALFE,ALAExJ,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCI,AazCF,ANAEA,AiFEJ,AsFAA,A1IFA,IiEAIA,A9FAAA,O8FAO,A9FAA,C8FAC2B,A9FAAA,Q8FAR,A9FAA,C8FAiB2L,A9FAAA,E8FAjB,A9FAA,E8FAqB7G,A9FAAA,E8FArB,A9FAA,E8FHQ,A9FAA,C8FGkB,A9FAA;A8II9B,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCI,AazCF,ANAE,AiFEJ,AsFAA,A1IFA,AFqBImc,IAAAA,GAAG,CAACjhB,QAAJ,CAAa+U,WAAb,EAA0B7H,MAA1B,EAAkC/G,KAAlC;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCI,AazCF,A2EEF,AsFAA,A1IFA,AFqBI+G,IAAAA,MAAM,CAACjB,cAAP,CAAsBE,YAAtB,GAAqC,IAArC;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,ALAE9N,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCI,AazCF,ANAEA,AiFEJ,AsFAA,A1IFA,AFqBI6O,ImErBA7O,A9FAAA,A2BqBA6O,MAAM,CmErBC,A9FAA,A2BqBA5L,CmErBCtB,A9FAAA,G2BqBR,CAAY,ImErBZ,A9FAA,C8FAiB+U,A9FAAA,E2BqBjB,EAAqBjQ,EAArB,KmErBA,A9FAA,E8FA8BoI,A9FAAA,M8FA9B,A9FAA,E8FAsC/G,A9FAAA,K8FAtC,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAE+G,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHuCI,AazCF,ANAEA,AiFEJ,AsFAA,A1IFA,AFqBG,GATD,CmEZEA,A9FAAA,K2BqBK,CmErBC,A9FAA,C8FACjB,A9FAAA,c8FAP,A9FAA,C8FAsBE,A9FAAA,Y8FAtB,A9FAA,G8FAqC,A9FAA,I8FArC,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAEc,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,AFqBI,ImErBAA,A9FAAA,c8FAc,A9FAA,C8FACC,A9FAAA,M8FAD,A9FAA,E8FASpI,A9FAAA,E8FAT,A9FAA,C8FAd,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHsCI,AaxCF,ANAC,AiFEH,AsFAA,A1IFA,AFqBI,GmE9BF,A9FAA,KPiDMpD,CqGxCC,A9FAA,GPwCG,KAAK,OAAb,EAAsB;AqJpC1B,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHsCMmG,AaxCJ,ANAE,AiFEJ,AsFAA,A1IFA,AFqBI8D,IAAAA,ElCmBE9D,AkCnBA,CAAC/C,EAAD,CAAF,SlCmBe,GAAG,SAAS+C,aAAT,CAAuB9C,GAAvB,EAA4B;AqJpClD,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHsCQc,AaxCN,ANAE,AiFEJ,AsFAA,A1IFA,AFqBIqH,IAAAA,IlCmBIrH,EkCnBE,CAACoG,IlCmBI,CAAC7K,SkCnBZ,CAAsB+K,IlCmBlB,CAAuBzK,IAAvB,EAA6BkG,CkCnBjC,GAAqC,IAArC,KlCmBI;AqJpCR,AJDA,ADAA,AjCAA,ALFE,ALAE+D,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHsCQhE,AaxCN,ANAEgE,AiFEJ,AsFAA,A1IFA,AFqBIuB,ImErBAvB,A9FAAA,A2BqBAuB,EmErBE,A9FAA,C8FACpI,A9FAAA,CPwCC6C,CqGxCF,A9FAA,C8FAF,A9FAA,A2BqBM,CAACrG,GlCmBG,CAACyD,AkCnBX,CAAY,ElCmBF,CAAN,IkCnBJ,EAAqBD,EAArB,EALK,CAML;AmHlBJ,AJDA,ADAA,AjCAA,ALFE,ALAEoI,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,AlHsCO,AaxCL,ANAEA,AiFEJ,AsFAA,A1IFA,AFsBI,ImEtBAA,A9FAAA,GPqCE,GqGrCI,A9FAA,C8FACjB,A9FAAA,c8FAP,A9FAA,C8FAsBE,A9FAAA,Y8FAtB,A9FAA,G8FAqC,A9FAA,I8FArC,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAEc,A3GCJ,AgLCA,AWDA,A9FCA,AiCCA,AFAA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,IiEAIA,A9FAAA,c8FAc,A9FAA,C8FACC,A9FAAA,M8FAD,A9FAA,E8FASpI,A9FAAA,E8FAT,A9FAA,C8FAd,A9FAA,C8FLK,A9FAA,C8FKuB,A9FAA;A8IIhC,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,AlHsCMe,AaxCJ,ANAE,AiFEJ,AsFAA,A1IFA,AFqBIkP,IAAAA,ElCmBElP,OAAO,CAAC3E,CkCnBC,CAACgM,ElCmBV,CAAa,GkCnBJ,EAAS/G,ElCmBlB,EAAsB0B,CkCnBb,CAAX,WlCmBE;AqJpCN,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,AlHsCK,AaxCH,A2EEF,AsFAA,A1IFA,AFqBG;AmHjBH,AJDA,ADAA,AjCAA,ALFE,ALAEkN,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,AFqBC,ImErBGA,A9FAAA,W8FAW,A9FAA,C8FAC7H,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,C8FAX,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,AlHsCIN,AOxCD,AiFEH,AsFAA,A1IFA,IpCwCIA,OAAO,CAAC3E,IAAR,CAAaQ,IAAb,EAAmBkG,aAAnB;AqJpCJ,AJDA,ADAA,AjCAA,AVFC,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,AlHsCG,AOxCF,AiFED,AsFAA,A1IFA,AFqBA,GlCNS,CAAP,KkCMOoN,kBAAT,CAA4B7O,KAA5B,EAAmC;AmHjBnC,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,AlHsCC,AaxCC,A2EEF,AsFAA,A1IFA,AFqBEA,EAAAA,IwErBI0V,A7FAAA,CqBqBC,CAACtJ,IwErBI,A7FAA,G6FAGpM,A7FAAA,AqBqBb,GAAgB,EwErBE,A7FAA,C6FAC+T,A7FAAA,EqBqBnB,UwErBA,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFEZ,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAF,AiFEA,AsFAA,A1IFA,AFqBEnT,EwErBAmT,A7FAAA,AqBqBAnT,KwErBK,A7FAA,AqBqBA,CwErBC,A7FAA,AqBqBAyM,CmErBCoC,A9FAAA,M2BqBP,GAAgB,IAAhB,CwErBK,A7FAA,E6FAkB6G,A7FAAA,EwFAzB,A9FAA,C8FA4B1V,A9FAAA,GmGArB,A7FAA,C6FAL,A7FAA,C6F7CqC,AL6CvC,AxF7CuC,AN6CvC,CmGAkC,A7FAA,CwFAC,A9FAA;A8IInC,AJDA,ADAA,AjCAA,AVFEA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFEA,AiFEF,AsFAA,A1IFA,AFqBEA,EmErBAA,A9FAAA,A2BqBAA,KmErBK,A9FAA,A2BqBA,CmErBCoM,A9FAAA,A2BqBA7S,MAAN,CmErBA,A9FAA,G8FAgB,A9FAA,A2BqBAyG,KmErBhB,A9FAA,A2BqBqB,CAAC0M,QAAtB;AmHjBF,AJDA,ADAA,AjCAA,ALFE,ALAA1M,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFqBEA,EmErBAA,A9FAAA,A2BqBAA,IwErBIA,A7FAAA,CwFAC,A9FAA,A2BqBA,CmErBCyM,A9FAAA,A2BqBAC,GwErBG,A7FAA,C6FACnT,A7FAAA,GwFAV,A9FAA,C2BqBA,EwErBI,ALAY,AxFAZ,ANAY,C2BqBC,CAAjB,EmErBA,A9FAA,CmGAqB,A7FAA,C6FAjB,A7FAA,I6FAsByG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,G6FAe4E,A7FAAA,C6FAf,A7FAA,G6FAmB6B,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FAnD,A7FAA,E6FAkE,A7FAA;AwIIpE,AJDA,ADAA,AjCAA,ALFIiM,ALAF1V,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI0V,ANAF1V,AiFEF,AsFAA,A1IFA,AFqBC,EmErBCA,A9FAAA,EmGAE0V,A7FAAA,GwFAG,A9FAA,C8FACnc,A9FAAA,EmGAE,A7FAA,G6FAG,A7FAA,CwFAX,A9FAA,GmGAE,A7FAA,CwFAcyG,A9FAAA,K8FAK,A9FAA,C8FAC0M,A9FAAA,Q8FAtB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFIyG,ALAFnT,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFImT,ANAFnT,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,EmGAEmT,A7FAAA,GwFAG,A9FAA,C8FACzG,A9FAAA,CmGAC,A7FAA,C6FAC,A7FAA,MwFAR,A9FAA,G8FAiB,A9FAA,C8FAjB,A9FAA,kBmGAO,A7FAA,E6FA+BgJ,A7FAAA,M6FA/B,A7FAA,C6FAL,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,ALAF,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAF,AiFED,AsFAA,A1IFA,AFqBA,GwEvEuC,A7FAA,C6FkDnC,A7FAA,KqBqBKlJ,OAAT,CAAiBzF,MAAjB,EAAyBpI,EAAzB,EAA6B;AmHjB7B,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFqBE,MAAIqB,KAAK,GAAG+G,MAAM,CAACjB,cAAnB;AmHjBF,AJDA,ADAA,AjCAA,AVFA,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFA,AiFEA,AsFAA,A1IFA,AFqBE,MAAIwG,GmErBGE,A9FAAA,C2BqBC,GAAGxM,GmErBb,A9FAA,C8FAiB+G,A9FAAA,C2BqBC,CAACuF,ImErBnB,A9FAA,A2BqBE,EmErBuB3N,A9FAAA,E8FAzB,A9FAA,E8FA6B,A9FAA;A8II7B,AJDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFE,AiFEF,AsFAA,A1IFA,AFqBE,MmErBIqB,A9FAAA,A2BqBAwF,EAAE,GmErBG,A9FAA,A2BqBAxF,GmErBG+G,A9FAAA,E2BqBE,CAAC0F,GmErBG,A9FAA,C8FAC3G,A9FAAA,G2BqBnB,WmErBA,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFsBE+I,EAAAA,IwEtBI7O,ALAAsM,AxFAAtM,ANAAsM,I8FAI,A9FAA,CmGAC,A7FAA,C6FAC9F,A7FAAA,CwFACxG,A9FAAA,ImGAP,A7FAA,CwFAY,A9FAA,C8FACsM,A9FAAA,C2BsBC,CwEtBCtM,A7FAAA,AqBsBAA,EmEtBnB,A9FAA,GmGAwB,A7FAA,AqBsBN,CwEtBOuG,A7FAAA,AqBsBzB,OwEtBA,A7FAA,E6FAkC,A7FAA;AwIIpC,AJDA,ADAA,AjCAA,ALFImP,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,AFuBE,IwEvBEA,A7FAAA,EwFAElQ,A9FAAA,A2BuBA7G,EmEvBE,A9FAA,A2BuBN,EwEvBQ,A7FAA,AqBuBAgQ,CmEvBC3O,A9FAAA,EmGAE,A7FAA,GwFAG,A9FAA,C8FACyM,A9FAAA,CmGAb,A7FAA,IqBuBkB,CAAC1F,CmEvBrB,A9FAA,K2BuBoB,EAAS/G,KAAT,EAAgBsM,IAAhB,EAAsB3N,EAAtB,EAA0B6G,EAA1B,CAAZ,CAAR,KAAuD;AmHnBzD,AJDA,ADAA,AjCAA,ALFI2N,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,AFuBI,IwEvBAA,A7FAAA,EwFAE,A9FAA,GmGAG,A7FAA,C6FAC,A7FAA,GwFAG3N,A9FAAA,E8FAP,A9FAA,K8FAc,A9FAA,QmGAX,A7FAA,E6FAqBkQ,ALA5B,AxFA4BA,ANA5B,E8FA8B,A9FAA,ImGAvB,A7FAA,C6FAL,A7FAA,CwFAkC,A9FAA,I8FAIlK,A9FAAA,qB8FAJ,A9FAA,E8FAN,A9FAA;A8IIhC,AJDA,ADAA,AjCAA,ALFG,ALADqD,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANADA,AiFEF,AsFAA,A1IFA,AFuBI,EmEvBFA,A9FAAA,CmGHA,A7FAA,KqB0BMhI,CwEvBC,A7FAA,I6FAI6O,A7FAAA,GqBuBG,GwEvBP,A7FAA,AqBuBU5G,CmEvBC,A9FAA,CmGAC,ALAA9O,AxFAA,ANAAA,K8FAD,A9FAA,C8FAlB,A9FAA,E2BuB2B,CAACA,KAAD,CAAzB;AmHnBJ,AJDA,ADAA,AjCAA,ALFImT,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,IsEAIA,A7FAAA,EwFAExU,A9FAAA,E8FAJ,A9FAA,CmGAO,A7FAA,C6FAC,ALAAgQ,AxFAA,ANAAA,SmGAD,A7FAA,C6FAL,A7FAA,EwFAkB,A9FAA,C8FAC5H,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,E8FAgBsM,A9FAAA,I8FAhB,A9FAA,E8FAsB3N,A9FAAA,E8FAtB,A9FAA,E8FA0B6G,A9FAAA,E8FA1B,A9FAA,C8FAZ,A9FAA,C8FAR,A9FAA,K8FAuD,A9FAA;A8IIzD,AJDA,ADAA,AjCAA,ALFIxF,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFuBI,IwEvBAA,A7FAAA,IqBuBI,CwEvBC,A7FAA,AqBuBA6G,CwEvBCN,A7FAAA,O6FAN,A7FAA,AqBuBI,GwEvBY,A7FAA,CqBuBC,CAACvG,EwEvBlB,A7FAA,GqBuBuB,CAACqM,MAApB,IAA8B,CAACrM,KAAK,CAACuM,gBAArC,IAAyDvM,KAAK,CAAC2M,eAAnE,EAAoF;AmHnBxF,AJDA,ADAA,AjCAA,ALFI3M,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFuBMoO,IwEvBFpO,A7FAAA,EqBuBEoO,EmEvBEvH,A9FAAA,CmGAC,A7FAA,C6FACyF,A7FAAA,I6FAN,A7FAA,EwFAY,A9FAA,CmGAC,A7FAA,AqBuBA,CAACvF,CmEvBC+H,A9FAAA,EmGAf,A7FAA,C6FHiB,A7FAA,C6FGE,A7FAA,CqBuBN,EAAS9O,GmEvBG,A9FAA,C8FACA,A9FAAA,C2BuBb,CAAX,GmEvBuB,A9FAA,C8FAV,A9FAA,I8FAqB+G,A9FAAA,M8FAM,A9FAA,C8FACnB,A9FAAA,S8FA3C,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFuBK;AmHnBL,AJDA,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,QsEAQ5F,ALAA,AxFAAA,ANAA,C8FAC6G,A9FAAA,ImGAI,A7FAA,C6FACtN,A7FAAA,GwFAN,A9FAA,GmGAA,A7FAA,CwFAa,A9FAA,C8FACyG,A9FAAA,GmGAG,A7FAA,C6FArB,A7FAA,CwFAuB,A9FAA,CmGACA,ALAAqM,AxFAArM,ANAAqM,KmGAK,A7FAA,C6FAC0H,ALA1B,AxFA0BA,ANA1B,I8FA8B,A9FAA,C8FAC/T,A9FAAA,K8FAK,A9FAA,C8FACuM,A9FAAA,CmGAjB,A7FAA,G6FAqB,A7FAA,I6FArB,A7FAA,C6FLP,A7FAA,C6FKkC,A7FAA,MwFA/C,A9FAA,I8FAyDvM,A9FAAA,K8FAK,A9FAA,C8FAC2M,A9FAAA,e8FAnE,A9FAA,E8FAoF,A9FAA;A8IIxF,AJDA,ADAA,AjCAA,AVFMyB,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,AFuBI,MmEvBEA,A9FAAA,E2BuBE9B,IAAJ,EAAU,GmEvBG,A9FAA,C8FACvF,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,C8FAX,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFI,ALAC,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAC,AiFEL,AsFAA,A1IFA,AFuBM,SwEvBGuU,A7FAAA,K6FAL,A7FAA,C6FAWvU,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FAjB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFuBMsR,MAAAA,UAAU,CAAChM,UAAD,EAAahI,MAAb,EAAqB/G,KAArB,EAA4B6G,QAA5B,EAAsCrB,EAAtC,CAAV;AmHnBN,AJDA,ADAA,AjCAA,ALFIxF,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFuBM,IwEvBFA,A7FAAA,IwFAIsM,A9FAAA,CmGAC,A7FAA,C6FACA,A7FAAA,EwFAN,A9FAA,EmGAA,ALAU,AxFAV,ANAU,GmGAG,A7FAA,K6FAb,A7FAA,C6FTiB,A7FAA,C6FSG,A7FAA;AwIIxB,AJDA,ADAA,AjCAA,ALFI,ALAEpU,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAEA,AiFEN,AsFAA,A1IFA,AFuBK,KAJD,CmEnBEA,A9FAAA,K2BuBK,EmEvBE,A9FAA,C8FAC2B,A9FAAA,Q8FAR,A9FAA,C8FAiBkV,A9FAAA,U8FAjB,A9FAA,E8FA6BhI,A9FAAA,M8FA7B,A9FAA,E8FAqC/G,A9FAAA,K8FArC,A9FAA,E8FA4C6G,A9FAAA,Q8FA5C,A9FAA,E8FAsDrB,A9FAAA,E8FAtD,A9FAA;A8IIN,AJDA,ADAA,AjCAA,AVFK,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFK,AiFEL,AsFAA,A1IFA,AFuBMuJ,KmEzBF,A9FAA,C2ByBEA,KmEvBK,A9FAA,K2BuBK,CAAChI,MAAD,EAAS/G,KAAT,EAAgB6G,QAAhB,EAA0BrB,EAA1B,CAAV;AmHnBN,AJDA,ADAA,AjCAA,ALFI,ALAEuJ,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAEA,AiFEN,AsFAA,A1IFA,AFuBK,MmEvBCA,A9FAAA,EmGAE,A7FAA,C6FAC/O,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,CwFAC,A9FAA,C8FACQ,A9FAAA,KmGAb,A7FAA,CwFAY,A9FAA,CmGAQ5I,A7FAAA,C6FAC,ALAA6B,AxFAA,ANAAA,GmGAGsV,A7FAAA,EwFAZ,A9FAA,E8FAgBzO,A9FAAA,Q8FAhB,A9FAA,CmGAyB,A7FAA,C6FAC2O,ALAAhQ,AxFAAgQ,ANAAhQ,E8FA1B,A9FAA,C8FAV,A9FAA,EmGAmC,A7FAA,E6FAQxF,A7FAAA,K6FAR,A7FAA,C6FAjB,A7FAA;AwIIxB,AJDA,ADAA,AjCAA,ALFG,ALAE,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAE,AiFEL,AsFAA,A1IFA,AFuBG;AmHnBH,AJDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFG,AiFEH,AsFAA,A1IFA,AFuBC;AmHnBD,AJDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAD,AiFED,AsFAA,A1IFA,MsEAMqB,A7FAAA,G6FAJ,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFuBA,MwEvBMlD,A7FAAA,C6FAC,A7FAA,EqBuBE4Q,CwEvBC,A7FAA,C6FAR,A7FAA,E6FAW1N,A7FAAA,G6FAG,A7FAA,G6FAGsU,A7FAAA,AqBuBnB,CAAoB5O,MAApB,CwEvB2B,A7FAA,C6FAC5I,A7FAAA,AqBuBA6B,CwEvBD,A7FAA,E6FAIA,A7FAAA,EqBuB/B,EAAmC6G,CwEvBR,A7FAA,C6FAd,A7FAA,C6FAX,A7FAA,K6FAyCxF,A7FAAA,AqBuB3C,EAA6CmE,CwEvBC,A7FAA,CqBuB9C,EwEvBiD,A7FAA,AqBuBA,IwEvBN,A7FAA;AwII3C,AJDA,ADAA,AjCAA,AVFA,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFA,AiFEA,AsFAA,A1IFA,AFuBE,MAAI,CAACqB,EmEvBEkI,A9FAAA,M2BuBP,EAAeC,EmEvBjB,A9FAA,C8FAoBjI,A9FAAA,M8FApB,A9FAA,E8FA4B/G,A9FAAA,C2BuBC,CAAC+G,GmEvB9B,A9FAA,E8FAmCF,A9FAAA,C2BuBN,EAAS7G,KmEvBtC,A9FAA,A2BuB6B,CAAZ,CmEvB4BwF,A9FAAA,E8FA7C,A9FAA,E8FAiD,A9FAA;A8IIjD,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFuBExF,EAAAA,IwEvBIqB,ALAA,AxFAAA,ANAA,C8FACwF,A9FAAA,A2BuBA,CAACgG,CwEvBC,A7FAA,K6FAK,A7FAA,CwFAZ,A9FAA,E8FAemC,A9FAAA,A2BuBf,CwEvBA,A7FAA,E6FAkB,A7FAA,SwFAS,A9FAA,C8FACjI,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,C8FAZ,A9FAA;A8IIjB,AJDA,ADAA,AjCAA,ALFIA,ALAFA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAFA,AiFEF,AsFAA,A1IFA,AFuBEwF,EmEvBAxF,A9FAAA,A2BuBAwF,EwEvBExF,A7FAAA,AqBuBA,GmEvBG,A9FAA,C8FAC6M,A9FAAA,CmGAC,A7FAA,C6FACkH,A7FAAA,OwFAR,A9FAA,KmGAE,A7FAA,G6FAqB/T,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,I6FAgByG,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FA3C,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFItL,ALAFqH,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIrH,ANAFqH,AiFEF,AsFAA,A1IFA,AFuBEoJ,EmEvBApJ,A9FAAA,A2BuBAoJ,EwEvBEzQ,ALAA,AxFAAA,ANAA,CmGAC,A7FAA,G6FAG,A7FAA,C6FAJ,A7FAA,IqBuBS,CAAC4I,MAAD,EAAS/G,KAAT,CAAX;AmHnBF,AJDA,ADAA,AjCAA,ALFG,ALAD4O,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANADA,AiFEF,AsFAA,A1IFA,AFuBC,EmEvBCA,A9FAAA,A2ByBF,CwE5BE,A7FAA,M6FGO,A7FAA,IwFAI,A9FAA,C8FAC7H,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,C8FAX,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFIA,ALAH,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAH,AiFED,AsFAA,A1IFA,AFyBA,EmEzBE,A9FAA,EmGAEA,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,I6FAgB4E,A7FAAA,C6FAhB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFI6B,ALAJ,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAJ,AiFEA,AsFAA,A1IFA,AFyBA,IwEzBIA,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,C6FAnB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,ALAH,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAH,AiFEA,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFuBA,MwEvBMpU,A7FAAA,GqBuBGgP,EwEvBE,A7FAA,C6FACzV,A7FAAA,M6FAN,A7FAA,GqBuBN,CAAsBwN,CwEvBC,A7FAA,C6FArB,A7FAA,E6FAwB,A7FAA,EqBuB1B,EAA8B/G,KAA9B,EAAqC;AmHnBrC,AJDA,ADAA,AjCAA,ALFI,ALAJ,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAJ,AiFEA,AsFAA,A1IFA,AFuBE,MAAIA,GmEvBGgP,A9FAAA,E2BuBE,CAACzV,MAAN,GmEvBN,A9FAA,C8FAsBwN,A9FAAA,C2BuBC,CAAjB,ImEvBN,A9FAA,A2BuB4B/G,EmEvBEA,A9FAAA,G2BuBG,CAACgM,CmEvBlC,A9FAA,E8FAqC,A9FAA,M2BuBnC,EAA2C;AmHnB7C,AJDA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAF,AiFEF,AsFAA,A1IFA,AFuBIhM,IAAAA,EmEvBEA,A9FAAA,G2BuBG,CAACgM,CmEvBC,A9FAA,C8FACzS,A9FAAA,M8FAN,A9FAA,C2BuBF,GAAkB,CmEvBC,A9FAA,C8FAjB,A9FAA,G2BuBF,CmEvBwByG,A9FAAA,K8FAK,A9FAA,C8FACgM,A9FAAA,S8FAhC,A9FAA,E8FA2C,A9FAA;A8II7C,AJDA,ADAA,AjCAA,ALFI,ALAAhM,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAAA,AiFEJ,AsFAA,A1IFA,AFuBI+G,ImEvBA/G,A9FAAA,A2BuBA+G,IwEvBI,A7FAA,C6FAC/G,ALAA,AxFAAA,ANAA,C8FACgM,A9FAAA,A2BuBA,CAAC7Q,GwEvBG,A7FAA,C6FACqL,A7FAAA,AqBuBX,CAAY,GmEvBZ,A9FAA,CmGAA,A7FAA,E6FAkBxG,ALAA,AxFAAA,ANAA,C2BuBlB,IwEvBuB,ALAvB,AxFAuB,ANAvB,CmGAwB+T,A7FAAA,Y6FAN,A7FAA,G6FAqB,A7FAA,I6FArB,A7FAA,C6FHI,A7FAA,C6FGuB,A7FAA;AwIIjD,AJDA,ADAA,AjCAA,AVFIhN,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFuBG,ImEvBCA,A9FAAA,M8FAM,A9FAA,C8FAC5L,A9FAAA,I8FAP,A9FAA,C8FAY,A9FAA,O8FAZ,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFI,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAD,AiFEH,AsFAA,A1IFA,AFuBC,EAED,MwEzBQqa,A7FAAA,K6FAK,A7FAA,K6FAKrX,A7FAAA,C6FAV,A7FAA,I6FAe6B,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAzB,A7FAA,E6FAgCiP,A7FAAA,W6FAW,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAX,A7FAA;AwIIpC,AJDA,ADAA,AjCAA,ALFG,ALAF,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAF,AiFED,AsFAA,A1IFA,EiEAE,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFuBA,MwEvBMpU,A7FAAA,G6FAG,A7FAA,AqBuBA+M,KwEvBK,A7FAA,I6FAZ,A7FAA,E6FAkB,A7FAA,AqBuBpB,CAAqBrH,IwEvBI5L,A7FAAA,EqBuBzB,EwEvBoB,A7FAA,AqBuBS6E,CwEvBC,A7FAA,IqBuB9B,EwEvBoB,A7FAA,AqBuBgB,EwEvBEqB,A7FAAA,G6FAlB,A7FAA;AwIIpB,AJDA,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAF,AiFEA,AsFAA,A1IFA,AFuBErB,EAAAA,KAAK,CAACuM,CwEvBClL,ALAA+M,AxFAA/M,ANAA+M,GmGAP,A7FAA,QwFAF,A9FAA,C8FAqBrH,A9FAAA,G2BuBnB,GmEvBF,A9FAA,A2BuB2B,EmEvBE/G,A9FAAA,E2BuB3B,GmEvBF,A9FAA,E8FAoC,A9FAA;A8IIpC,AJDA,ADAA,AjCAA,ALFC,ALACA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANACA,AiFEF,AsFAA,A1IFA,AFuBE,CwEpHF,A7FAA,CwF6FEA,A9FAAA,I2BuBIiE,CmEvBC,A9FAA,C8FACsI,A9FAAA,G2BuBG,GAAGvM,KAAK,CAAC2M,ImEvBlB,A9FAA,G8FAyB,A9FAA,I8FAzB,A9FAA,I2BuBA;AmHnBF,AJDA,ADAA,AjCAA,AVFE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFE,AiFEF,AsFAA,A1IFA,MiEAM1I,A9FAAA,K8FAK,A9FAA,G8FAGjE,A9FAAA,K8FAK,A9FAA,C8FAC2M,A9FAAA,e8FAlB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,A2EEA,AsFAA,A1IFA,AFuBE,MAAI5F,GwEvBG4N,A7FAAA,GqBuBG,CAACjH,MwEvBb,A7FAA,C6FAoB3G,A7FAAA,AqBuBd,IAAkB9C,EwEvBxB,A7FAA,E6FA4BjE,A7FAAA,CqBuBtB,IwEvBN,A7FAA,AqBuBiCiE,EwEvBE,A7FAA,GqBuBG,CAACE,IAArC,EAA2C;AmHnB7C,AJDA,ADAA,AjCAA,ALFEgP,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAA,AiFEF,AsFAA,A1IFA,AFuBI,EwEvBFA,A7FAAA,IwFAIpM,A9FAAA,CmGAC,A7FAA,C6FAC,A7FAA,IwFAI,A9FAA,C8FAC2G,A9FAAA,OmGAN,ALAD,AxFAC,ANAD,CmGAJ,A7FAA,GwFAsBzJ,A9FAAA,K8FAlB,A9FAA,I8FA2BA,A9FAAA,K8FAK,A9FAA,C8FACE,A9FAAA,I8FArC,A9FAA,E8FA2C,A9FAA;A8II7C,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAE,AiFEJ,AsFAA,A1IFA,AFuBI,MwEvBEnE,A7FAAA,EqBuBEiP,CAAC,EwEvBE,A7FAA,C6FACzI,A7FAAA,AqBuBAxG,KwEvBV,A7FAA,AqBuBe,CAAC8M,CwEvBC,A7FAA,mBqBuBf;AmHnBJ,AJDA,ADAA,AjCAA,AVFI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFI,AiFEJ,AsFAA,A1IFA,AFuBI,QmEvBImC,A9FAAA,A2BuBAC,CmEvBC,A9FAA,G8FAGlP,A9FAAA,E2BuBE,GmEvBG,A9FAA,A2BuBA,CmEvBC8M,A9FAAA,G2BuBG/S,KAAJ,CAAUkV,CAAV,CAAb,SmEvBA,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAE,AiFEJ,AsFAA,A1IFA,AFuBI,MwEvBEjP,A7FAAA,EwFAEkP,A9FAAA,A2BuBAC,GwEvBG,A7FAA,C6FACmF,A7FAAA,EwFAE,A9FAA,A2BuBA,GmEvBG,A9FAA,A2BuBAtU,EwEvBf,A7FAA,E6FAmB,ALAAjG,AxFAA,ANAAA,C2BuBC,CAACgT,GmEvBN,A9FAA,C8FAUkC,A9FAAA,C8FAV,A9FAA,C8FAb,A9FAA,Y2BuBA;AmHnBJ,AJDA,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,AFuBIE,IAAAA,IwEvBIjF,ALAAiF,AxFAAjF,ANAAiF,E2BuBE,CAAClL,EwEvBE,A7FAA,CwFAC,A9FAA,EmGAEjE,A7FAAA,AqBuBZ,CmEvBaA,A9FAAA,E2BuBEiE,EwEvBE,A7FAA,C6FACqQ,ALAA,AxFAAA,ANAA,C8FACvH,A9FAAA,C2BuBnB,KwEvBY,A7FAA,C6FAcsC,A7FAAA,G6FAd,A7FAA,E6FAZ,A7FAA,MwFAA,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,AVFIF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFwBI,ImExBAA,A9FAAA,I2BwBIxP,EmExBE,A9FAA,C8FACsE,A9FAAA,E2BwBE,GmExBT,A9FAA,A2BwBY,CAAZ,EmExBeA,A9FAAA,K8FAf,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,AFwBI,QwExBIiG,ALAAvK,AxFAAuK,ANAAvK,A2BwBAyP,KwExBK,ALAA,AxFAA,ANAA,G8FAG,A9FAA,CmGAClF,ALAb,AxFAaA,ANAb,C2BwBc,GAAG,CwExBC,A7FAA,C6FAC3Q,A7FAAA,EqBwBnB,IwExBA,A7FAA,E6FA2B,A7FAA;AwII/B,AJDA,ADAA,AjCAA,ALFMyG,ALAF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,ANAF,AiFEJ,AsFAA,A1IFA,MsEAMA,A7FAAA,EwFAEoP,A9FAAA,GmGAG,A7FAA,C6FACF,A7FAAA,M6FAN,ALAY,AxFAZ,ANAY,CmGAChV,A7FAAA,EwFAE,A9FAA,EmGAf,A7FAA,C6FAkBgQ,A7FAAA,CwFApB,A9FAA,ImGAE,A7FAA;AwIIN,AJDA,ADAA,AjCAA,ALFMlK,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,A2EEN,AsFAA,A1IFA,AFuBI,MwEvBEA,A7FAAA,K6FAK,A7FAA,AqBuBAiE,CwEvBC1K,A7FAAA,IqBuBR,EwEvBE,A7FAA,AqBuBY,IwEvBIyG,A7FAAA,K6FAK,A7FAA,C6FAC+J,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,C6FAnB,A7FAA,G6FAuBG,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FA7C,A7FAA;AwIIN,AJDA,ADAA,AjCAA,ALFK,ALAD,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFK,ANAD,AiFEJ,AsFAA,A1IFA,AFuBM2V,MAAAA,KmEvBKjL,A9FAAA,C2BuBC,CAACtE,GmEvBT,A9FAA,E8FAc,A9FAA,A2BuBN,CAAN,GAAgBsE,KAAhB;AmHnBN,AJDA,ADAA,AjCAA,ALFG,ALAGiL,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAGA,AiFEN,AsFAA,A1IFA,AFuBM,MmEvBAA,A9FAAA,I2BuBI,CAACjL,CmEvBC,A9FAA,C8FACtE,A9FAAA,G2BuBG,CAACqO,CmEvBL,A9FAA,C8FAN,A9FAA,G8FAgB/J,A9FAAA,A2BuBhB,EAAkBmL,GmEvBlB,A9FAA,O2BuB4B,GAAG,KAAb;AmHnBxB,AJDA,ADAA,AjCAA,AVFM,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFM,AiFEN,AsFAA,A1IFA,AFuBMnL,MAAAA,ImEvBI,A9FAA,C8FACA,A9FAAA,A2BuBA,GAAGA,EmEvBE,A9FAA,C8FAC+J,A9FAAA,E2BuBE,CAAC7J,EmEvBd,A9FAA,E8FAkBiL,A9FAAA,A2BuBlB,UmEvB4B,A9FAA,G8FAG,A9FAA,K8FAb,A9FAA;A8IIxB,AJDA,ADAA,AjCAA,ALFEpP,ALAIiE,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEjE,ANAIiE,AiFEN,AsFAA,A1IFA,AFuBMtE,EwEvBJK,A7FAAA,IwFAIiE,A9FAAA,A2BuBAtE,CwEvBC,A7FAA,C6FAC6G,A7FAAA,GwFAG,A9FAA,A2BuBA,EwEvBT,A7FAA,CwFAYvC,A9FAAA,C2BuBC,CwEvBC,A7FAA,AqBuBV,GmEvBa,A9FAA,CmGAjB,ALAkBE,AxFAlB,ANAkBA,I8FAd,A9FAA;A8IIN,AJDA,ADAA,AjCAA,AVFMxE,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,AFuBK,MmEvBCA,A9FAAA,K8FAK,A9FAA,I8FAI,A9FAA,C8FAT,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFE,ALAG,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAG,AiFEL,AsFAA,A1IFA,MsEAMK,A7FAAA,K6FAK,A7FAA,C6FACsM,A7FAAA,I6FAV,A7FAA,E6FAgB,A7FAA;AwIIlB,AJDA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,AFsBI4C,IAAAA,MAAM,CAACE,UAAP,GAAoBA,UAApB;AmHlBJ,AJDA,ADAA,AjCAA,ALFI,ALAAF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAAA,AiFEJ,AsFAA,A1IFA,AFuBIR,ImEvBAQ,A9FAAA,A2BuBAR,MmEvBM,A9FAA,C8FACU,A9FAAA,A2BuBA,CAACrI,MAAD,EAAS/G,CmEvBhB,A9FAA,G8FAoBoP,A9FAAA,C2BuBb,EAAgB,IAAhB,EAAsBpP,CmEvB7B,A9FAA,I2BuBkC,CAACzG,MAA5B,EAAoC2V,MAApC,EAA4C,EAA5C,EAAgDC,MAAM,CAAC7E,MAAvD,CAAP,CAjByC,CAmBzC;AmHrBJ,AJDA,ADAA,AjCAA,ALFI,ALAAoE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAAA,AiFEJ,AsFAA,A1IFA,AFyBI,ImEzBAA,A9FAAA,O8FAO,A9FAA,C8FAC3H,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,E8FAgB,A9FAA,I8FAhB,A9FAA,E8FAsBA,A9FAAA,K8FAK,A9FAA,C8FACzG,A9FAAA,M8FA5B,A9FAA,E8FAoC2V,A9FAAA,M8FApC,A9FAA,E8FA4C,A9FAA,E8FA5C,A9FAA,E8FAgDC,A9FAAA,M8FAM,A9FAA,C8FAC7E,A9FAAA,M8FAvD,A9FAA,C8FAP,A9FAA,C8FjByC,A9FAA,C8FiB8B,A9FAA;A8II3E,AJDA,ADAA,AjCAA,ALFIyK,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,Y6FAY,A7FAA,C6FAChO,A7FAAA,M6FAD,A7FAA,C6FAZ,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,AFwBI/G,GwE7BF,A7FAA,CqB6BEA,KwExBK,A7FAA,AqBwBA,CAAC6M,SAAN;AmHpBJ,AJDA,ADAA,AjCAA,ALFI,ALAA7M,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAAA,AiFEJ,AsFAA,A1IFA,AFwBIA,ImExBAA,A9FAAA,A2BwBAA,KmExBK,A9FAA,A2BwBA,CmExBC6M,A9FAAA,A2BwBAD,SmExBN,A9FAA,U2BwBA,GAA4B,IAA5B;AmHpBJ,AJDA,ADAA,AjCAA,ALFI5M,ALAAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAAA,AiFEJ,AsFAA,A1IFA,IsEAIA,ALAAA,AxFAAA,ANAAA,KmGAK,ALAA,AxFAA,ANAA,CmGAC+T,ALAAnH,AxFAAmH,ANAAnH,YmGAN,A7FAA,G6FAqB,A7FAA,IwFArB,A9FAA,CmGAA,A7FAA,EwFA4B,A9FAA,I8FA5B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFuBI,QAAIuC,MAAM,CAAChL,IAAX,EAAiB;AmHnBrB,AJDA,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,AFuBMnE,MAAAA,EwEvBE,ALAAmP,AxFAA,ANAAA,CmGACnP,A7FAAA,EqBuBE,CAAC+M,EwEvBE,ALAA,AxFAA,ANAA,CmGACiH,ALAA7P,AxFAA6P,ANAA7P,I8FAX,A9FAA,E8FAiB,A9FAA,SmGAjB,A7FAA,AqBuBE,EwEvB0B,A7FAA,CqBuBCgL,MAAM,CAAChL,IAAlC;AmHnBN,AJDA,ADAA,AjCAA,ALFMnE,ALAAA,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,ANAAA,AiFEN,AsFAA,A1IFA,AFuBMmP,MwEvBAnP,ALAAA,AxFAAA,ANAAA,A2BuBAmP,KwEvBK,ALAA,AxFAA,ANAA,CmGAC6E,ALAAjH,AxFAAiH,ANAAjH,A2BuBA,CAAC5I,IAAP,GAAc,IAAd,GwEvBA,A7FAA,G6FAwB,ALAxB,AxFAwB,ANAxB,G8FA2BgL,A9FAAA,CmGA3B,A7FAA,KwFAiC,A9FAA,C8FAChL,A9FAAA,I8FAlC,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFMyR,ALAAzG,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMyG,ANAAzG,AiFEN,AsFAA,A1IFA,AFuBK,KAHD,CwEpBEyG,ALAAzG,AxFAAyG,ANAAzG,K2BuBK,CmEvBC,A9FAA,C8FAChL,A9FAAA,I8FAP,A9FAA,EmGAa,A7FAA,C6FAC4C,ALAA,AxFAAA,ANAA,I8FAd,A9FAA,EmGAa,A7FAA,C6FAb,A7FAA;AwIIN,AJDA,ADAA,AjCAA,ALFK,ALAA,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFK,ANAA,AiFEL,AsFAA,A1IFA,AFuBM/G,KmE1BF,A9FAA,C2B0BEA,KmEvBK,A9FAA,A2BuBA,CAAC+M,kBAAN,GAA2B,IAAI1C,aAAJ,CAAkBrK,KAAlB,CAA3B;AmHnBN,AJDA,ADAA,AjCAA,ALFG,ALAGA,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAGA,AiFEN,AsFAA,A1IFA,AFuBK,MmEvBCA,A9FAAA,K8FAK,A9FAA,C8FAC+M,A9FAAA,kB8FAN,A9FAA,G8FA2B,A9FAA,I8FAI1C,A9FAAA,a8FAJ,A9FAA,C8FAkBrK,A9FAAA,K8FAlB,A9FAA,C8FA3B,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFC,ALAI,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANAI,AiFEL,AsFAA,A1IFA,EsEAE,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,A2EEA,AsFAA,A1IFA,AFsBIA,IAAAA,KAAK,CAAC8M,oBAAN,GAA6B,CAA7B;AmHlBJ,AJDA,ADAA,AjCAA,ALFA,ALAI9M,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAIA,AiFEJ,AsFAA,A1IFA,AFsBG,GA9BD,CmEQEA,A9FAAA,K8FAK,A9FAA,A2BsBA,CmEtBC8M,A9FAAA,oB8FAN,A9FAA,G8FA6B,A9FAA,C8FA7B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,AVFG,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFG,AiFEH,AsFAA,A1IFA,AFsBI,GmErDF,A9FAA,M8F+BO,A9FAA;A8IIT,AJDA,ADAA,AjCAA,AVFI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFI,AiFEJ,AsFAA,A1IFA,AFsBI,WAAO7I,KAAP,EAAc;AmHlBlB,AJDA,ADAA,AjCAA,ALFA,ALAI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAI,AiFEJ,AsFAA,A1IFA,AFsBM,SwEtBG8Q,A7FAAA,CqBsBC7K,CmEtBCjG,A9FAAA,I2BsBI,CmEtBX,A9FAA,E8FAc,A9FAA,A2BsBAA,GwEtBlB,A7FAA,C6FAsB8C,A7FAAA,CqBsBC,CAACmD,IwEtBxB,A7FAA,CqBsBM,CwEtBwB,A7FAA;AwII9B,AJDA,ADAA,AjCAA,ALFE,ALAI,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAI,AiFEN,AsFAA,A1IFA,AFsBM,MwEtBAlK,A7FAAA,IwFAIkK,A9FAAA,A2BsBAC,CwEtBC,A7FAA,G6FAGpD,A7FAAA,CwFAC,A9FAA,G8FAG9C,A9FAAA,A2BsBA,EwEtBE,A7FAA,C6FAC0B,A7FAAA,AqBsBA1B,EmEtBE,A9FAA,C8FACiG,A9FAAA,E2BsBE,CAACC,EmEtBrB,A9FAA,MmGAJ,A7FAA,AqBsBI;AmHlBN,AJDA,ADAA,AjCAA,ALFEgJ,ALAI,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAI,AiFEN,AsFAA,A1IFA,AFsBM,EwEtBJA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,EwFAEhJ,A9FAAA,A2BsBA3E,EAAE,GAAGvB,GmEtBG,A9FAA,E2BsBE,CmEtBCA,A9FAAA,A2BsBAmG,CwEtBd,A7FAA,E6FAiBpK,A7FAAA,EwFAE,A9FAA,C8FACmK,A9FAAA,EmGAE,A7FAA,AqBsBvB,CwEtBwB4J,A7FAAA,KwFAxB,A9FAA,OmGAC,A7FAA,E6FAqC/T,A7FAAA,K6FAK,A7FAA,C6FACgU,A7FAAA,e6FA3C,A7FAA,C6FAL,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFEhU,ALAI,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAI,AiFEN,AsFAA,A1IFA,AFsBM,EwEtBJA,A7FAAA,K6FAK,A7FAA,C6FAC+T,A7FAAA,EwFAEvO,A9FAAA,A2BsBA7L,EmEtBE,A9FAA,C2BsBC,EmEtBEsK,A9FAAA,C2BsBCjE,IwEtBd,ALAkB,AxFAlB,ANAkB,C8FACoK,A9FAAA,A2BsBA,CAACL,CwEtBC,A7FAA,K6FArB,A7FAA,CwFAI,A9FAA,G2BsBU,GAAmB,CAAnB,GAAuBG,KAAK,CAAC3Q,MAAvC;AmHlBN,AJDA,ADAA,AjCAA,AVFM,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFM,AiFEN,AsFAA,A1IFA,AFuBMmV,MAAAA,ImEvBI/U,A9FAAA,G8FAG,A9FAA,A2BuBA,CAACoN,EmEvBE/G,A9FAAA,I2BuBH,CmEvBQ,A9FAA,C8FAC+J,A9FAAA,A2BuBA/J,KAAT,EAAgB,GmEvBb,A9FAA,E2BuBH,CmEvBsB,A9FAA,C8FAnB,A9FAA,A2BuBoBrG,GmEvBGuQ,A9FAAA,A2BuB1B,EAA4BA,GmEvBG,A9FAA,C8FAC3Q,A9FAAA,C2BuBhC,EAAmC4Q,GmEvB1C,A9FAA,K2BuBO,EAA6C3E,EAA7C,CAAP;AmHnBN,AJDA,ADAA,AjCAA,ALFE,ALAIkJ,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAIA,AiFEN,AsFAA,A1IFA,AFuBMzK,MwEvBA,ALAAyK,AxFAA,ANAAA,A2BuBAzK,CwEvBCjE,A7FAAA,IqBuBI,CwEvBC,A7FAA,C6FACgU,ALAA,AxFAAA,ANAA,C8FACjN,A9FAAA,A2BuBA9C,KAAK,CmEvBN,A9FAA,A2BuBOE,EmEvBEnE,A9FAAA,E2BuBhB,GmEvBO,A9FAA,CmGAX,A7FAA,CwFA2B,A9FAA,CmGAC,A7FAA,IwFAjB,A9FAA,E8FAuBrG,A9FAAA,G8FAvB,A9FAA,E8FA4BuQ,A9FAAA,K8FA5B,A9FAA,E8FAmCC,A9FAAA,Q8FAnC,A9FAA,E8FA6C3E,A9FAAA,E8FA7C,A9FAA,C8FAP,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFI2N,ALAElP,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIkP,ANAElP,AiFEN,AsFAA,A1IFA,AFuBMjE,IwEvBFmT,A7FAAA,EwFAElP,A9FAAA,A2BuBAjE,GwEvBG,A7FAA,C6FAC,A7FAA,CwFAC,A9FAA,A2BuBA,CAAC8M,EmEvBE7I,A9FAAA,K8FAK,A9FAA,C8FACE,A9FAAA,ImGAX,ALAH,AxFAG,ANAH,EmGAoBnE,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,AqBuB1B,GARY,CASZ,GwExBG,A7FAA,C6FAL,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFI9T,ALAEA,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAEA,AiFEN,AsFAA,A1IFA,AFwBM,IwExBFA,A7FAAA,EwFAEA,A9FAAA,GmGAG,A7FAA,C6FACgU,A7FAAA,CwFAC,A9FAA,C8FAClH,A9FAAA,amGAR,A7FAA,G6FAwB,A7FAA,I6FAxB,ALAE,AxFAF,ANAE,G8FPY,A9FAA,C8FOkB,A9FAA;A8IIpC,AJDA,ADAA,AjCAA,ALFI5U,ALAE,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAE,AiFEN,AsFAA,A1IFA,AFwBM,IwExBFA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiB+b,A7FAAA,a6FAjB,A7FAA,E6FAgC7O,A7FAAA,M6FAhC,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,ALAG,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAG,AiFEN,AsFAA,A1IFA,AFwBM;AmHpBN,AJDA,ADAA,AjCAA,ALFC,ALAK,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANAK,AiFEN,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFuBM,UAAI/G,KAAK,CAACoM,OAAV,EAAmB;AmHnBzB,AJDA,ADAA,AjCAA,ALFA,ALAM,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAM,AiFEN,AsFAA,A1IFA,AFuBQ,SwEvBCwJ,A7FAAA,CwFAC5V,A9FAAA,K8FAK,A9FAA,C8FACoM,A9FAAA,MmGAhB,A7FAA,C6FAuBrF,ALAjB,AxFAiBA,ANAjB,E8FAmB,A9FAA,ImGAzB,A7FAA,E6FA+B,A7FAA;AwII/B,AJDA,ADAA,AjCAA,ALFE,ALAM,A3GCR,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAM,AiFER,AsFAA,A1IFA,AFuBO,MwEvBD/G,A7FAAA,K6FAK,A7FAA,G6FAG+G,A7FAAA,M6FAM,A7FAA,C6FACpB,A7FAAA,c6FAnB,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFEwN,ALAK,A3GCP,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAK,AiFEP,AsFAA,A1IFA,AFuBK,EwEvBHA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,e6FAD,A7FAA,E6FAkBnT,A7FAAA,K6FAK,A7FAA,C6FAC4F,A7FAAA,S6FAxB,A7FAA,E6FAmC5F,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAzC,A7FAA,E6FAiDyG,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAvD,A7FAA,C6FAL,A7FAA;AwIIF,AJDA,ADAA,AjCAA,AVFK,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFK,AiFEL,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFuBI,MwEvBE,A7FAA,C6FACxG,A7FAAA,CqBuBCiE,IwEvBI,A7FAA,C6FAC2B,A7FAAA,AqBuBA,KAAK,IwEvBZ,A7FAA,AqBuBF,EAAoB5F,GwEvBGA,A7FAAA,EqBuBE,CAAC4M,EwEvBE,A7FAA,C6FACrT,A7FAAA,M6FAN,A7FAA,I6FAgByG,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,AqBuBzB,GAA4B,EwEvB9C,A7FAA,C6FAJ,A7FAA,CqBuBsB,CwEvBiC,A7FAA;AwIIzD,AJDA,ADAA,AjCAA,ALFIO,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFuBG,IwEvBCA,A7FAAA,IwFAI9C,A9FAAA,EmGAE,A7FAA,C6FAC9I,A7FAAA,EwFAE,A9FAA,EmGAT,A7FAA,C6FAY,A7FAA,EwFAE,A9FAA,I8FAd,A9FAA,E8FAoB6E,A9FAAA,EmGApB,A7FAA,GwFAyB,A9FAA,C8FAC4M,A9FAAA,mB8FAN,A9FAA,G8FA4B,A9FAA,I8FA5B,A9FAA;A8IIxB,AJDA,ADAA,AjCAA,ALFI5M,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAD,AiFEH,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FACgU,A7FAAA,e6FAN,A7FAA,G6FAwB,A7FAA,K6FAxB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,AFuBEhU,EAAAA,CwE9B6B,A7FAA,C6FO3B,A7FAA,GqBuBG,CAAC2M,eAAN,GAAwB1I,KAAxB;AmHnBF,AJDA,ADAA,AjCAA,ALFE,ALAAjE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFuBEA,EmEvBAA,A9FAAA,A2BuBAA,KmEvBK,A9FAA,A2BuBA,CmEvBC2M,A9FAAA,A2BuBAJ,emEvBN,A9FAA,C2BuBA,EmEvBwBtI,A9FAAA,C2BuBC,ImEvBzB,A9FAA,C2BuBA;AmHnBF,AJDA,ADAA,AjCAA,ALFE,ALAAjE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFuBC,EmEvBCA,A9FAAA,K8FAK,A9FAA,C8FACuM,A9FAAA,gB8FAN,A9FAA,G8FAyB,A9FAA,K8FAzB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAD,AiFED,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFuBAvC,QAAQ,CAAC3P,SAAT,CAAmBmT,MAAnB,GAA4B,UAAUtD,KAAV,EAAiBC,QAAjB,EAA2B3E,EAA3B,EAA+B;AmHnB3D,AJDA,ADAA,AjCAA,ALFE,ALAFwE,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAFA,AiFEA,AsFAA,A1IFA,AFuBExE,EAAAA,EAAE,CAAC,GmEvBG,A9FAA,C8FACnL,A9FAAA,A2BuBA7B,KAAJ,CAAU,GmEvBf,A9FAA,C8FAmBgV,A9FAAA,M8FAnB,A9FAA,G8FA4B,A9FAA,U8FAUtD,A9FAAA,K8FAV,A9FAA,C2BuBvB,CmEvBwCC,A9FAAA,A2BuBzC,CAAF,OmEvB0B,A9FAA,E8FA2B3E,A9FAAA,E8FA3B,A9FAA,E8FA+B,A9FAA;A8II3D,AJDA,ADAA,AjCAA,AVFEA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFEA,AiFEF,AsFAA,A1IFA,AFuBC,CAFD,CmErBEA,A9FAAA,E8FAE,A9FAA,C8FAC,A9FAA,I8FAI+F,A9FAAA,0B8FAJ,A9FAA,C8FA+B,A9FAA,U8FA/B,A9FAA,C8FAD,A9FAA,C8FAF,A9FAA;A8IIF,AJDA,ADAA,AjCAA,AVFC,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFC,AiFED,AsFAA,A1IFA,CiEFA,A9FAA;A8IMA,AJDA,ADAA,AjCAA,ALFEvL,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,AFuBAgK,EwEvBEhK,A7FAAA,K6FAK,A7FAA,C6FAC+T,A7FAAA,AqBuBA,CAAC1Z,SAAT,CAAmBqT,CwEvBjB,A7FAA,G6FAqB,A7FAA,C6FAC1N,A7FAAA,EqBuBxB,GwEvB6B,A7FAA,AqBuBA,CwEvBC8T,A7FAAA,GqBuB9B,IwEvBuB,A7FAA,I6FAkB,A7FAA,C6FAC9T,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAzB,A7FAA,I6FAkCxG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,I6FAgByG,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FA7E,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFEoM,ALAF7L,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE6L,ANAF7L,AiFEA,AsFAA,A1IFA,EsEAE6L,A7FAAA,I6FAI,A7FAA,C6FAC9O,A7FAAA,CwFAC,A9FAA,C8FAC1M,A9FAAA,ImGAH,A7FAA,C6FAJ,A7FAA,IwFAF,A9FAA,C8FAmBqT,A9FAAA,O8FAnB,A9FAA,G8FA6B,A9FAA,I8FA7B,A9FAA;A8IIA,AJDA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,A2EED,AsFAA,A1IFA,AFuBA1D,EwEvBE,A7FAA,MqBuBM,CAAC3P,SAAT,CAAmBgV,GAAnB,GAAyB,UAAUnF,KAAV,EAAiBC,QAAjB,EAA2B3E,EAA3B,EAA+B;AmHnBxD,AJDA,ADAA,AjCAA,ALFA,ALAAwE,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAAA,AiFEA,AsFAA,A1IFA,AFuBE,MAAIhK,EmEvBE,A9FAA,C8FAC3F,A9FAAA,E2BuBE,GAAG,ImEvBd,A9FAA,C8FAmBgV,A9FAAA,A2BuBAvJ,GmEvBnB,A9FAA,G8FAyB,A9FAA,Q2BuBvB,EmEvBiCoE,A9FAAA,K8FAV,A9FAA,E8FAiBC,A9FAAA,Q8FAjB,A9FAA,E8FA2B3E,A9FAAA,E8FA3B,A9FAA,E8FA+B,A9FAA;A8IIxD,AJDA,ADAA,AjCAA,ALFA,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAE,AiFEF,AsFAA,A1IFA,MiEAMxF,A9FAAA,K8FAK,A9FAA,G8FAG,A9FAA,K8FAK8F,A9FAAA,c8FAjB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,A2EEA,AsFAA,A1IFA,AFuBE,MAAI,OAAOoE,KAAP,KAAiB,UAArB,EAAiC;AmHnBnC,AJDA,ADAA,AjCAA,ALFA,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAE,AiFEF,AsFAA,A1IFA,AFuBI1E,IAAAA,EmEvBE,A9FAA,A2BuBA,GAAG0E,ImEvBIA,A9FAAA,C2BuBT,ImEvBE,A9FAA,K8FAiB,A9FAA,U8FArB,A9FAA,E8FAiC,A9FAA;A8IInC,AJDA,ADAA,AjCAA,ALFA,ALAI1E,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAIA,AiFEJ,AsFAA,A1IFA,AFuBI0E,ImEvBA1E,A9FAAA,A2BuBA0E,EmEvBE,A9FAA,G8FAGA,A9FAAA,A2BuBA,GAAG,EmEvBR,A9FAA,E2BuBA;AmHnBJ,AJDA,ADAA,AjCAA,AVFIA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFuBIC,ImEvBAD,A9FAAA,A2BuBAC,KmEvBK,A9FAA,G8FAG,A9FAA,A2BuBA,GAAG,CmEvBX,A9FAA,G2BuBA;AmHnBJ,AJDA,ADAA,AjCAA,AVFIA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFuBG,GAJD,CmEnBEA,A9FAAA,K2BuBK,GmEvBG,A9FAA,C2BuBC,EmEvBE,A9FAA,I8FAX,A9FAA,C2BuBgBA,QAAP,KAAoB,UAAxB,EAAoC;AmHnB7C,AJDA,ADAA,AjCAA,ALFA,ALAG,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAG,AiFEH,AsFAA,A1IFA,AFuBI3E,GmE3BF,A9FAA,C2B2BEA,EAAE,GwEvBGsP,ALAA,AxFAAA,ANAA,A2BuBA3K,ImEvBI,A9FAA,I2BuBT,GmEvBgBA,A9FAAA,EmGApB,A7FAA,C6FAuBpD,A7FAAA,KwFAV,A9FAA,CmGAb,A7FAA,E6FA+B/G,A7FAAA,EwFAE,A9FAA,GmGAjC,A7FAA,E6FAsC,A7FAA,KwFA7B,A9FAA,E8FAoC,A9FAA;A8II7C,AJDA,ADAA,AjCAA,ALFE,ALAEwF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,AFuBI2E,ImEvBA3E,A9FAAA,A2BuBA2E,EwEvBE,ALAA,AxFAA,ANAA,CmGACnK,A7FAAA,EwFAEmK,A9FAAA,GmGAG,A7FAA,AqBuBA,CwEvBCkK,A7FAAA,EqBuBE,EmEvBX,A9FAA,E2BuBA,KwEvBF,A7FAA,E6FAwB,A7FAA;AwII1B,AJDA,ADAA,AjCAA,ALFIrU,ALAAmK,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFInK,ANAAmK,AiFEJ,AsFAA,A1IFA,AFuBG,IwEvBCnK,ALAAmK,AxFAAnK,ANAAmK,KmGAK,A7FAA,C6FACkK,A7FAAA,EwFAE,A9FAA,G8FAG,A9FAA,I8FAX,A9FAA,EmGAA,A7FAA,G6FAoB,A7FAA,I6FApB,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFInc,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAD,AiFEH,AsFAA,A1IFA,IsEAIA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiBic,A7FAAA,c6FAjB,A7FAA,E6FAiC/O,A7FAAA,M6FAjC,A7FAA,E6FAyC/G,A7FAAA,K6FAzC,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,AFuBE,MAAIkK,KAAK,KAAK,IAAV,IAAkBA,KAAK,KAAK/M,SAAhC,EAA2C,KAAKoQ,KAAL,CAAWrD,KAAX,EAAkBC,QAAlB,EAZW,CActD;AmHrBF,AJDA,ADAA,AjCAA,ALFC,ALAC,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANAC,AiFEF,AsFAA,A1IFA,MiEAMD,A9FAAA,K8FAK,A9FAA,K8FAK,A9FAA,I8FAV,A9FAA,I8FAkBA,A9FAAA,K8FAK,A9FAA,K8FAK/M,A9FAAA,S8FAhC,A9FAA,E8FA2C,A9FAA,K8FAKoQ,A9FAAA,K8FAL,A9FAA,C8FAWrD,A9FAAA,K8FAX,A9FAA,E8FAkBC,A9FAAA,Q8FAlB,A9FAA,E8FZW,A9FAA,C8FYkB,A9FAA;A8II1E,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFwBE,MAAInK,KAAK,CAACqM,MAAV,EAAkB;AmHpBpB,AJDA,ADAA,AjCAA,ALFA,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAE,AiFEF,AsFAA,A1IFA,AFwBIrM,IAAAA,EmExBEA,A9FAAA,GmGAG8V,A7FAAA,AqBwBA,CAACzJ,CmExBC,A9FAA,C8FACA,A9FAAA,I2BwBR,EmExBF,A9FAA,C2BwBiB,CmExBC,A9FAA,A2BwBhB,GwExBJ,A7FAA,C6FAwBtF,A7FAAA,M6FAxB,A7FAA,E6FAgC/G,A7FAAA,K6FAhC,A7FAA,E6FAuC,A7FAA;AwIIvC,AJDA,ADAA,AjCAA,ALFE,ALAEA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAEA,AiFEJ,AsFAA,A1IFA,AFwBI,ImExBAA,A9FAAA,K8FAK,A9FAA,A2BwBAmO,CmExBC9B,A9FAAA,K2BwBN,CmExBA,A9FAA,G8FAe,A9FAA,C8FAf,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAE,AiFEJ,AsFAA,A1IFA,AFwBG,GAlBqD,CAoBtD,KmE1BO8B,A9FAAA,M8FAL,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAC,AiFEH,AsFAA,A1IFA,GiEjBwD,A9FAA,C8FiBpD,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFwBE,MAAI,CAACnO,KAAK,CAAC0G,MAAP,IAAiB,CAAC1G,KAAK,CAAC6G,QAA5B,EAAsCyI,WAAW,CAAC,IAAD,EAAOtP,KAAP,EAAcwF,EAAd,CAAX;AmHpBxC,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFwBC,CAtBD,KmEFM,A9FAA,C8FACxF,A9FAAA,K8FAK,A9FAA,C8FAC0G,A9FAAA,M8FAX,A9FAA,E8FAmB4I,A9FAAA,W8FAW,A9FAA,C8FAC,A9FAA,I8FAD,A9FAA,E8FAOtP,A9FAAA,K8FAP,A9FAA,E8FAcwF,A9FAAA,E8FAd,A9FAA,C8FAX,A9FAA;A8IIrB,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,SiEAS,A9FAA,I8FAP,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAD,AiFED,AsFAA,A1IFA,AFwBA,CmE9CA,A9FAA,Q2B8CSsJ,UAAT,CAAoB9O,KAApB,EAA2B;AmHpB3B,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFwBE,SAAOA,KAAK,CAAC0G,MAAN,IAAgB1G,KAAK,CAACzG,MAAN,KAAiB,CAAjC,IAAsCyG,KAAK,CAAC2M,eAAN,KAA0B,IAAhE,IAAwE,CAAC3M,KAAK,CAAC6G,QAA/E,IAA2F,CAAC7G,KAAK,CAACoM,OAAzG;AmHpBF,AJDA,ADAA,AjCAA,ALFE,ALAF/P,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAFA,AiFEA,AsFAA,A1IFA,AFwBC,MmExBK,A9FAA,C8FACqB,A9FAAA,c8FAP,A9FAA,C8FAsBsM,A9FAAA,Q8FAQ,A9FAA,C8FAC3P,A9FAAA,S8FA/B,A9FAA,E8FA0C,A9FAA,gB8FA1C,A9FAA,E8FA4D,A9FAA;A8II5D,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFuBA,SAASkV,SAAT,CAAmBxI,MAAnB,EAA2B/G,KAA3B,EAAkC;AmHnBlC,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFuBE+G,EAAAA,MAAM,CAAC6G,MAAP,CAAc,UAAUhP,GAAV,EAAe;AmHnB/B,AJDA,ADAA,AjCAA,ALFE,ALAAjB,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFuBIqC,EmEvBFrC,A9FAAA,E2BuBEqC,KAAK,CAAC6M,EmEvBE,A9FAA,E8FAE,A9FAA,K8FJ8C,A9FAA,A2B2BxD;AmHnBJ,AJDA,ADAA,AjCAA,ALFE,ALAAjP,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,S8FASA,A9FAAA,G8FAT,A9FAA,G8FAe,A9FAA;A8IItB,AJDA,ADAA,AjCAA,ALFE,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAE,AiFEJ,AsFAA,A1IFA,AFsBI,QAAIgB,GmEtBG,A9FAA,A2BsBP,EAAS,GmEtBGkH,A9FAAA,c8FAL,A9FAA,C8FAoBvM,A9FAAA,M8FA3B,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAC,AiFEH,AsFAA,A1IFA,AFsBMwN,MAAAA,MAAM,CAAC5L,IAAP,CAAY,OAAZ,EAAqByD,GAArB;AmHlBN,AJDA,ADAA,AjCAA,ALFE,ALR0D,A3GS5D,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANR0D,AiFU5D,AsFAA,A1IFA,AFsBK,CmE9BL,A9FAA;A8IYA,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAF,AiFEA,AsFAA,A1IFA,AFqBIoB,IAAAA,KmErBK8O,A9FAAA,A2BqBA,CAAClI,SmErBV,A9FAA,C8FAoB5G,A9FAAA,C2BqBhB,GAAoB,CmErBxB,A9FAA,E8FA2B,A9FAA,C2BqBvB;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFqBI+G,IAAAA,KmErBK/G,A9FAAA,C2BqBC,CAAC7E,GmErBG,A9FAA,C8FACuL,A9FAAA,A2BqBX,CAAY,KmErBP,A9FAA,I8FAgB1G,A9FAAA,E2BqBrB,GmErB0B,A9FAA,C8FACzG,A9FAAA,M8FAN,A9FAA,K8FAiB,A9FAA,C8FAjC,A9FAA,I8FAsCyG,A9FAAA,K8FAK,A9FAA,C8FAC2M,A9FAAA,e8FAN,A9FAA,K8FA0B,A9FAA,I8FAhE,A9FAA,I8FAwE,A9FAA,C8FAC3M,A9FAAA,K8FAK,A9FAA,C8FAC6G,A9FAAA,Q8FA/E,A9FAA,I8FA2F,A9FAA,C8FAC7G,A9FAAA,K8FAK,A9FAA,C8FACoM,A9FAAA,O8FAzG,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAD,AiFED,AsFAA,A1IFA,AFqBIwC,IAAAA,WAAW,CAAC7H,MAAD,EAAS/G,KAAT,CAAX;AmHjBJ,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFqBG,GARD;AmHTF,AJDA,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAF,AiFEA,AsFAA,A1IFA,AFqBC,SwErBQ,ALAAuP,AxFAA,ANAAA,CmGACvP,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,EwFAhB,A9FAA,C8FAmBQ,A9FAAA,ImGAV,A7FAA,EwFAT,A9FAA,EmGA2B,ALAA/G,AxFAA,ANAAA,CmGACA,A7FAAA,IwFA5B,A9FAA,CmGAiC,A7FAA,C6FACwG,ALAA,AxFAAA,ANAA,KmGAzB,A7FAA,K6FAmCxG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,G6FAeyG,A7FAAA,K6FAK,A7FAA,C6FACyJ,A7FAAA,a6FArB,A7FAA,I6FAsCzJ,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,I6FAiB9T,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,K6FAiB,A7FAA,C6FA3G,A7FAA,C6FAP,A7FAA,E6FAsH,A7FAA;AwIIxH,AJDA,ADAA,AjCAA,ALFI,ALAFwN,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAFA,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,MmGAMpN,ALAA,AxFAAA,ANAA,C8FACiU,A9FAAA,EmGAE,A7FAA,G6FAG5N,A7FAAA,CwFAZ,A9FAA,C8FAc,A9FAA,GmGAG,A7FAA,C6FACzG,A7FAAA,M6FAhB,ALAsBqF,AxFAtB,ANAsBA,G8FAV,A9FAA,E8FAe,A9FAA;A8II/B,AJDA,ADAA,AjCAA,ALFIuU,ALAAnT,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFImT,ANAAnT,AiFEJ,AsFAA,A1IFA,AFoBA,IwEpBImT,ALAAnT,AxFAAmT,ANAAnT,KmGAK,ALAA,AxFAA,ANAA,A2BoBAwP,CwEpBC,ALAA3C,AxFAA,ANAAA,Q2BoBV,CmEpBI,A9FAA,A2BoBe9F,MAAnB,EAA2B/G,KwEpBlB,A7FAA,AqBoBT,CwEpBI,A7FAA,CqBoB8B;AmHhBlC,AJDA,ADAA,AjCAA,ALFI+G,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,AFoBE,IwEpBEA,A7FAAA,EqBoBE,CAAC/G,GwEpBG,A7FAA,C6FACgS,A7FAAA,CqBoBC,CAACpL,EwEpBT,A7FAA,C6FAY,A7FAA,C6FAZ,A7FAA,OqBoBE,IAAsB,CAAC5G,KAAK,CAAC2G,WAAjC,EAA8C;AmHhBhD,AJDA,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,AFoBI,QwEpBIhN,ALAAiF,AxFAAjF,ANAAiF,A2BoBA,GwEpBG,ALAP,AxFAO,ANAP,E8FAS,A9FAA,E2BoBEmI,CwEpBC/G,A7FAAA,K6FAK,A7FAA,AqBoBA,CwEpBCzG,A7FAAA,AqBoBAqU,MwEpBlB,A7FAA,AqBoBI,EwEpBsB,A7FAA,GqBoBG,UAA7B,EAAyC;AmHhB7C,AJDA,ADAA,AjCAA,ALFM,ALAA9G,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAAA,AiFEN,AsFAA,A1IFA,AFoBM9G,MmEpBA8G,A9FAAA,A2BoBA9G,KAAK,CAAC6M,QmEpBQ,A9FAA,C8FAC9F,A9FAAA,A2BoBf,MmEpBc,A9FAA,E8FASnI,A9FAAA,G8FAT,A9FAA,C8FAd,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFG,ALAE,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAE,AiFEL,AsFAA,A1IFA,AFoBMoB,MAAAA,KAAK,CAAC2G,WAAN,GAAoB,IAApB;AmHhBN,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFoBMmU,MAAAA,GAAG,CAACjhB,QAAJ,CAAa0V,SAAb,EAAwBxI,MAAxB,EAAgC/G,KAAhC;AmHhBN,AJDA,ADAA,AjCAA,ALFEA,ALAEA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAEA,AiFEJ,AsFAA,A1IFA,AFoBK,EwEpBHA,A7FAAA,EwFAEA,A9FAAA,C2BgBA,EwEhBG,A7FAA,C6FACqU,A7FAAA,CwFAC,A9FAA,C8FACzN,A9FAAA,C2BoBC,QwEpBT,A7FAA,EwFAE,A9FAA,CmGAkB,A7FAA,EwFAE,A9FAA,GmGAtB,A7FAA,CwFAE,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFC,ALAGG,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANAGA,AiFEJ,AsFAA,A1IFA,AFoBM/G,EwEpBJ,A7FAA,EwFAE+G,A9FAAA,E2BoBE/G,ImEpBI,A9FAA,C8FAC7E,A9FAAA,A2BoBA,CAACyL,GmEpBR,A9FAA,C8FAY,A9FAA,O2BoBV,GAAoB,CmEpBtB,A9FAA,G2BoBE;AmHhBN,AJDA,ADAA,AjCAA,ALFA,ALAIgI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAIA,AiFEJ,AsFAA,A1IFA,AFoBM7H,ImEpBF6H,A9FAAA,E2BoBE7H,MAAM,CAAC5L,EmEpBE,A9FAA,C8FAC4L,A9FAAA,C2BoBV,CAAY,ImEpBH,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,A2BoBT,CmEpBF,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFA,ALAG,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAG,AiFEH,AsFAA,A1IFA,AFoBK,GmE9BH,A9FAA;A8IcF,AJDA,ADAA,AjCAA,ALFA,ALAC,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,ANAC,AiFED,AsFAA,A1IFA,AFoBG;AmHhBH,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFoBC;AmHhBD,AJDA,ADAA,AjCAA,AVFA,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFA,AiFEA,AsFAA,A1IFA,SiEASwP,A9FAAA,S8FAT,A9FAA,C8FAmBzI,A9FAAA,M8FAnB,A9FAA,E8FA2B/G,A9FAAA,K8FA3B,A9FAA,E8FAkC,A9FAA;A8IIlC,AJDA,ADAA,AjCAA,ALFA6P,ALAE,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFAA,ANAE,AiFEF,AsFAA,A1IFA,AFoBA,MmEpBM,A9FAA,C8FAC7P,A9FAAA,CmGAC,A7FAA,C6FAC3F,A7FAAA,AqBoBAuU,GmEpBG,A9FAA,C8FAChI,A9FAAA,KmGAb,A7FAA,C6FAmB2N,A7FAAA,CqBoBnB,CAAqBxN,GwEpBrB,ALAM,AxFAN,ANAM,GmGAqB,A7FAA,AqBoB3B,CmEpB4B,A9FAA,C8FAC/G,A9FAAA,A2BoBAA,KmEpBK,A9FAA,A2BoBlC,CmEpBmC2G,A9FAAA,C2BoBC,CwEpBCxI,A7FAAA,C6FAV,A7FAA,E6FAa,A7FAA,MwFAtC,A9FAA,E8FA8C,A9FAA;A8IIhD,AJDA,ADAA,AjCAA,ALFE2I,ALAE,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAE,AiFEJ,AsFAA,A1IFA,AFoBE,EwEpBAA,A7FAAA,IqBoBI2I,EmEpBE,A9FAA,E2BoBE,GAAGX,EmEpBE/H,A9FAAA,CmGAC,A7FAA,C6FAC,A7FAA,I6FAD,ALAK,AxFAL,ANAK,C8FAC6G,A9FAAA,CmGAC,A7FAA,AqBoBA,CAAC5N,GwEpBGuL,A7FAAA,CwFAnB,A9FAA,C2BoBe,CAArB,GmEpB+B,A9FAA,U8FAzB,A9FAA,I8FAuC,A9FAA,C8FACvL,A9FAAA,KmGAzB,ALA8B,AxFA9B,ANA8B,CmGAC,ALAA4F,AxFAA,ANAAA,SmGA/B,ALAnB,AxFAmB,ANAnB,CmGAY,A7FAA,C6FAd,ALA+D,AxFA/D,ANA+D;A8IIjE,AJDA,ADAA,AjCAA,ALFC,ALAK5F,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,ANAKA,AiFEN,AsFAA,A1IFA,CsEFA,A7FAA,KwFEMA,A9FAAA,K8FAK,A9FAA,C8FAC6M,A9FAAA,S8FAN,A9FAA;A8IIN,AJDA,ADAA,AjCAA,AVFM7M,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,AFmBE,MmEnBIA,A9FAAA,A2BmBAyP,IAAJ,CmEnBS,A9FAA,C8FAC9I,A9FAAA,A2BmBA,WmEnBN,A9FAA,G8FAoB,A9FAA,I8FApB,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFAkJ,ALAM3X,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA2X,ANAM3X,AiFEN,AsFAA,A1IFA,AFmBIsX,IAAAA,EmEnBEtX,A9FAAA,EmGAE,A7FAA,C6FACmC,A7FAAA,IwFAI,A9FAA,A2BmBA,CmEnBCR,A9FAAA,A2BmBAkN,IwEnBd,A7FAA,C6FAmB8G,A7FAAA,CqBmBN,EmEnBP,A9FAA,A2BmBgB7N,CwEnBtB,ALAuBuP,AxFAvB,ANAuBA,GmGAG,A7FAA,CqBmBb,CAAT,ImEnBE,A9FAA,E8FA4BxI,A9FAAA,EmGAEgP,A7FAAA,I6FAV,ALApB,AxFAoB,ANApB,EmGAoCC,ALAAhW,AxFAAgW,ANAAhW,K8FApC,A9FAA,GmGAoB,A7FAA,E6FA0B,A7FAA;AwIIpD,AJDA,ADAA,AjCAA,ALFE,ALAG,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAG,AiFEL,AsFAA,A1IFA,KiEJI,A9FAA,CmGIE2D,A7FAAA,G6FAG,A7FAA,EwFAE,A9FAA,CmGAC,A7FAA,I6FAV,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFE,ALAI3D,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAIA,AiFEN,AsFAA,A1IFA,AFkBI,MwElBEA,ALAAA,AxFAAA,ANAAA,E2BkBEA,GwElBG,ALAA,AxFAA,ANAA,C8FAC4G,A9FAAA,C2BkBC,CwElBC,A7FAA,AqBkBAiG,KwElBKlH,A7FAAA,IwFAb,A9FAA,A2BkBE,GmElBkB,A9FAA,E2BkBE,CAAxB,CmElBE,A9FAA,C2BkByB,EwElB7B,A7FAA;AwIIF,AJDA,ADAA,AjCAA,AVFMoB,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFMA,AiFEN,AsFAA,A1IFA,AFkBM/G,MmElBA+G,A9FAAA,A2BkBA/G,KAAK,CmElBC,A9FAA,A2BkBA6G,CmElBC1L,A9FAAA,I8FAP,A9FAA,C8FAY,A9FAA,E2BkBZ,GAAiB,IAAjB,EmElBA,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALFE,ALAG,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAG,AiFEL,AsFAA,A1IFA,AFkBM4L,MAAAA,IwElBI/G,A7FAAA,EqBkBE,CAAC7E,EwElBE,A7FAA,C6FAC0Y,A7FAAA,CqBkBV,CAAY,QwElBhB,A7FAA,AqBkBI;AmHdN,AJDA,ADAA,AjCAA,ALFI,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAD,AiFEH,AsFAA,A1IFA,AFkBK,SwElBI,A7FAA,C6FAL,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,ALFM7T,ALAL,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,ANAL,AiFED,AsFAA,A1IFA,AFkBG,MwElBGA,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,G6FAcmC,A7FAAA,I6FAd,A7FAA;AwIIN,AJDA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,A2EEN,AsFAA,A1IFA;AiHIA,AJDA,ADAA,AjCAA,AVFA,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFA,AiFEA,AsFAA,A1IFA,AFiBE,SmEjBOnH,A9FAAA,A2BiBAa,IAAP,OmEjBF,A9FAA,C8FAqB1I,A9FAAA,M8FArB,A9FAA,E8FA6B/G,A9FAAA,K8FA7B,A9FAA,E8FAoC,A9FAA;A8IIpC,AJDA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAF,AiFEF,AsFAA,A1IFA,AFiBC,MmEjBKyP,A9FAAA,GmGAG,A7FAA,C6FAL,ALAM,AxFAN,ANAM,G8FAGX,A9FAAA,U8FAU,A9FAA,C8FAC9O,A9FAAA,K8FAD,A9FAA,C8FArB,A9FAA;A8IIF,AJDA,ADAA,AjCAA,ALFMA,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,G6FAc,A7FAA,C6FAC5T,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAP,A7FAA,E6FAcmC,A7FAAA,I6FAd,A7FAA,C6FAd,A7FAA;AwIIN,AJDA,ADAA,AjCAA,ALFM,ALAJ,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAJ,AiFEF,AsFAA,A1IFA,AFiBA,MmEjBMtG,A9FAAA,G2BiBGH,CmEjBP,A9FAA,E8FAU,A9FAA,Q2BiBZ,CAAqBvI,MAArB,EAA6B/G,KAA7B,EAAoCwF,EAApC,EAAwC;AmHbxC,AJDA,ADAA,AjCAA,AVFIgK,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFiBExP,EAAAA,EmEjBEwP,A9FAAA,G2BiBG,CAAC9I,KmEjBK,A9FAA,C8FACK,A9FAAA,A2BiBZ,GAAe,GmEjBJ,A9FAA,C2BiBX,CmEjBoB/G,A9FAAA,K8FAT,A9FAA,C8FAT,A9FAA;A8IIJ,AJDA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,AFiBE4O,EAAAA,WAAW,CAAC7H,MAAD,EAAS/G,KAAT,CAAX;AmHbF,AJDA,ADAA,AjCAA,ALFMA,ALAF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,ANAF,AiFEJ,AsFAA,A1IFA,MsEAMA,A7FAAA,EwFAEA,A9FAAA,GmGAG,A7FAA,C6FAC4T,A7FAAA,CwFAC,A9FAA,C8FAC/G,A9FAAA,GmGAR,A7FAA,C6FAY3S,A7FAAA,I6FAZ,A7FAA,C6FAiB6b,ALAf,AxFAeA,ANAf,ImGAF,A7FAA,CwFAsB,A9FAA,C8FAxB,A9FAA,E8FA2B,A9FAA;A8II/B,AJDA,ADAA,AjCAA,ALFM,ALAA/V,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAAA,AiFEN,AsFAA,A1IFA,AFgBE,MmEhBIA,A9FAAA,A2BgBAwF,EAAJ,EAAQ,CmEhBC,A9FAA,C8FACqB,A9FAAA,Q8FAN,A9FAA,G8FAiB,A9FAA,I8FAjB,A9FAA;A8IIN,AJDA,ADAA,AjCAA,ALdE,ALYIE,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGdE,ANYIA,AiFEN,AsFAA,A1IFA,AFgBI,MmEhBEA,A9FAAA,E2BgBE/G,ImEhBI,A9FAA,C8FAC7E,A9FAAA,A2BgBA,CAAC0L,GmEhBR,A9FAA,C8FAY,A9FAA,I2BgBd,EAAoBiU,EmEhBlB,A9FAA,C2BgBqB,CAACjhB,QAAJ,CAAa2L,EAAb,EAApB,KAA0CuB,MAAM,CAAChM,IAAP,CAAY,QAAZ,EAAsByK,EAAtB;AmHZ9C,AJDA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFgBG;AmHZH,AJDA,ADAA,AjCAA,ALFExF,ALAI,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAI,AiFEN,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,EwFAE7T,A9FAAA,K8FAK,A9FAA,C8FACkH,A9FAAA,EmGAd,A7FAA,I6FAoB,A7FAA,C6FApB,A7FAA,IwFAI,A9FAA,E8FAuB,A9FAA;A8II7B,AJDA,ADAA,AjCAA,ALFEiM,ALAM,A3GCR,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAM,AiFER,AsFAA,A1IFA,AFeEnT,EwEfAmT,A7FAAA,AqBeAnT,KwEfK,A7FAA,AqBeA,CwEfC,A7FAA,AqBeAwG,KAAN,GAAc,IAAd,WwEfK,A7FAA,E6FA0BxG,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAhC,A7FAA,E6FA4CmC,A7FAAA,Q6FA5C,A7FAA,C6FAL,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFE,ALAM,A3GCR,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAM,AiFER,AsFAA,A1IFA,AFeEjP,EAAAA,IwEfIkP,A7FAAA,EqBeE,CAACtT,EwEfE,A7FAA,G6FAG,A7FAA,C6FAC,A7FAA,C6FACqT,A7FAAA,CqBed,GAAkB,IwEfL,A7FAA,CqBeb,GwEf0BA,A7FAAA,Q6FAQ,A7FAA,C6FAC3G,A7FAAA,G6FAT,A7FAA,K6FAiB,A7FAA,K6FA/B,A7FAA,K6FAyC0G,A7FAAA,I6FAI,A7FAA,K6FAK7d,A7FAAA,O6FAO,A7FAA,C6FACge,A7FAAA,M6FA1D,A7FAA,I6FAoEH,A7FAAA,I6FAI,A7FAA,K6FAK7d,A7FAAA,O6FAO,A7FAA,C6FACie,A7FAAA,M6FAjG,A7FAA;AwIIF,AJDA,ADAA,AjCAA,ALFE,ALAM,A3GCR,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAM,AiFER,AsFAA,A1IFA,AFeC,MwEfKC,A7FAAA,K6FAK,A7FAA,CwFACpP,A9FAAA,EmGAEiP,A7FAAA,IwFAI,A9FAA,CmGAC,A7FAA,EwFAElP,A9FAAA,CmGACkJ,A7FAAA,K6FAH,ALAQ,AxFAR,ANAQ,C8FACtK,A9FAAA,EmGAE0Q,A7FAAA,M6FA5B,A7FAA,MwFAM,A9FAA;A8IIR,AJDA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMrW,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAV,A7FAA,E6FAsBvO,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiBuc,A7FAAA,K6FAjB,A7FAA,E6FAtB,A7FAA,K6FAmDzS,A7FAAA,G6FAG,A7FAA,C6FAC5I,A7FAAA,I6FAJ,A7FAA,C6FAS,A7FAA,K6FAT,A7FAA,E6FAgBqb,A7FAAA,K6FAhB,A7FAA;AwIIrD,AJDA,ADAA,AjCAA,ALFEL,ALAM,A3GCR,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAM,AiFER,AsFAA,A1IFA,AFeA,EwEfEA,A7FAAA,I6FAI,A7FAA,C6FAClb,A7FAAA,E6FAL,A7FAA,AqBeO0P,CwEfC,A7FAA,EwFAE,A9FAA,C8FACvD,A9FAAA,KmGAX,A7FAA,CwFAU,A9FAA,CmGAQsP,A7FAAA,GwFAGtP,A9FAAA,A2BevB,CAAwB0I,IwEftB,A7FAA,CwFA2B,A9FAA,C8FACxI,A9FAAA,C2Be9B,EAAiClH,KAAjC,EAAwCpB,CmEfjB,A9FAA,E2BevB,EmEf6CoI,A9FAAA,A2BeA,MmEfM,A9FAA,C8FACP,A9FAAA,U8FA5C,A9FAA,E8FAwD,A9FAA;A8IIhE,AJDA,ADAA,AjCAA,AVFUM,A3GCV,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFUA,AiFEV,AsFAA,A1IFA,AFeE,MAAI9C,ImEfI8C,A9FAAA,C2BeC,GAAG2I,EmEfE,A9FAA,C8FACnK,A9FAAA,I2BeI,CAACtB,EmEfZ,A9FAA,G2BeR;AmHXF,AJDA,ADAA,AjCAA,ALFE,ALAO,A3GCT,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAO,AiFET,AsFAA,A1IFA,AFeEyL,EAAAA,OAAO,CAACzL,CwEfCqS,A7FAAA,IqBeT,GAAgB,CwEfhB,A7FAA,C6FAkBtG,A7FAAA,EqBelB,MwEfA,A7FAA,E6FA4BuG,A7FAAA,U6FA5B,A7FAA,E6FAwC,A7FAA;AwII1C,AJDA,ADAA,AjCAA,ALFIpD,ALAG,A3GCP,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAG,AiFEP,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,U6FAD,A7FAA,C6FAL,A7FAA;AwIIJ,AJDA,ADAA,AjCAA,AVFK,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFK,AiFEL,AsFAA,A1IFA,AFcE,SAAOlP,KAAP,EAAc;AmHVhB,AJDA,ADAA,AjCAA,ALFI,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAD,AiFEH,AsFAA,A1IFA,AFcI,QwEdI+L,A7FAAA,AqBcAxK,EAAE,GAAGvB,GwEdG,A7FAA,EqBcE,CAACmG,EwEdEzG,A7FAAA,G6FAjB,A7FAA,E6FAsB,A7FAA,CqBctB;A+GXJ,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,A2EEN,AsFAA,A1IFA,AFcI3D,IAAAA,KAAK,CwEdCuW,A7FAAA,AqBcA1J,SAAN,CwEdgB,A7FAA,I6FAI0J,A7FAAA,U6FAU,A7FAA,C6FACC,A7FAAA,U6FAX,A7FAA,K6FA0B,A7FAA,K6FA5C,A7FAA,E6FAmD,A7FAA;AoIGzD,ADAA,AjCAA,ALFQD,ALAN,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFQA,ANAN,AiFEF,AsFAA,A1IFA,AFcI/Q,IAAAA,EAAE,CAAC5G,CwEdC2X,A7FAAA,CwFAC9G,A9FAAA,C2BcH,CAAF,EmEdF,A9FAA,KmGAgB,A7FAA,C6FAC+G,A7FAAA,U6FAX,A7FAA,G6FAwB,A7FAA,I6FAxB,A7FAA;AoIGR,ADAA,AjCAA,ALFQC,ALAP,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFQA,ANAP,AiFED,AsFAA,A1IFA,AFcIxS,IAAAA,IwEdIwS,A7FAAA,CqBcC,GAAGxS,GwEdG,A7FAA,EqBcE,CAACE,IAAd;A+GXJ,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFO,A2EEP,AsFAA,A1IFA,AFcG;A+GXH,ADAA,AjCAA,ALFK,ALAL,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFK,ANAL,AiFEA,AsFAA,A1IFA,SiEASmL,A9FAAA,W8FAT,A9FAA,C8FAqBvI,A9FAAA,M8FArB,A9FAA,E8FA6B/G,A9FAAA,K8FA7B,A9FAA,E8FAoCwF,A9FAAA,E8FApC,A9FAA,E8FAwC,A9FAA;A0IGxC,ADAA,AjCAA,ALFG,ALADxF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANADA,AiFEF,AsFAA,A1IFA,AFaE,EmEbAA,A9FAAA,I2BaIA,CmEbC,A9FAA,C8FAC0G,A9FAAA,G2BaG,CAACqG,EmEbV,A9FAA,G8FAe,A9FAA,I8FAf,A9FAA,S2BaA,EAA8B;A+GVhC,ADAA,AjCAA,AVFE6B,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFEA,AiFEF,AsFAA,A1IFA,AFaI5O,EmEbF4O,A9FAAA,E2BaE5O,KAAK,CAAC+M,GmEbG,A9FAA,C8FAChG,A9FAAA,M8FAD,A9FAA,E8FAS/G,A9FAAA,K8FAT,A9FAA,C8FAX,A9FAA,A2BaE,CAAyBmE,IAAzB,GAAgCuL,OAAhC;A+GVJ,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,AFaG,GAFD,MAEO,EwEbEO,A7FAAA,K6FAT,A7FAA,G6FAiB,A7FAA;AoIGnB,ADAA,AjCAA,ALFIkD,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAF,AiFEF,AsFAA,A1IFA,AFaInT,IwEbAmT,A7FAAA,AqBaAnT,EmEbEwF,A9FAAA,E8FAJ,A9FAA,CmGAO,A7FAA,AqBaA,CwEbC,ALAA,AxFAA,ANAA,A2BaAuH,OwEbD,A7FAA,C6FAL,A7FAA,UqBaA,GAA2B2C,OAA3B;A+GVJ,ADAA,AjCAA,ALFIqG,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFaG,IwEbCA,A7FAAA,I6FAI,ALAA/V,AxFAA,ANAAA,CmGACqP,A7FAAA,G6FAL,A7FAA,CwFAS,A9FAA,C8FACxI,A9FAAA,Q8FAV,A9FAA,E8FAoB3O,A9FAAA,O8FAO,A9FAA,C8FAC2B,A9FAAA,Q8FAR,A9FAA,C8FAiB2L,A9FAAA,E8FAjB,A9FAA,E8FApB,A9FAA,K8FA8CuB,A9FAAA,M8FAM,A9FAA,C8FAChM,A9FAAA,I8FAP,A9FAA,C8FAY,A9FAA,Q8FAZ,A9FAA,E8FAsByK,A9FAAA,E8FAtB,A9FAA;A0IGlD,ADAA,AjCAA,ALFG,ALAA,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAA,AiFEH,AsFAA,A1IFA,AFaC,GwEpDmD,A7FAA,C6FuChD,A7FAA;AoIGJ,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,ALAAxF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFaA3D,EmEbE2D,A9FAAA,I2BaI,CmEbC,A9FAA,A2BaAtC,CmEbC8I,A9FAAA,K8FAN,A9FAA,G8FAc,A9FAA,I8FAd,A9FAA,C2BaF,CAAsBwD,QAAQ,CAAC3P,SAA/B,EAA0C,WAA1C,EAAuD;A+GVvD,ADAA,AjCAA,ALFE,ALAA0M,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFaEnJ,EmEbAmJ,A9FAAA,A2BaAnJ,GAAG,EAAE,CmEbC,A9FAA,C8FAC+E,A9FAAA,Q8FAP,A9FAA,E2BaiB,CmEbC,A9FAA,K8FAlB,A9FAA;A0IGF,ADAA,AjCAA,AVFC,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFC,AiFED,AsFAA,A1IFA,AFaI,QAAI,KAAKmD,cAAL,KAAwB3I,SAA5B,EAAuC;A+GV3C,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFaM,aAAO,KAAP;A+GVN,ADAA,AjCAA,ALFE,ALAF,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAF,AiFEA,AsFAA,A1IFA,AFaK,MwEbCuZ,A7FAAA,GwFAGnM,A9FAAA,ImGAI,A7FAA,G6FAGoM,A7FAAA,OwFAhB,A9FAA,C8FAwBjH,A9FAAA,GmGAG,A7FAA,C6FAC/L,A7FAAA,G6FAD,ALA3B,AxFA2B,ANA3B,CmGAE,A7FAA,CwFA+B3D,A9FAAA,K8FAjC,A9FAA,E8FAwCpB,A9FAAA,G8FAxC,A9FAA,E8FA6C,A9FAA;A0IG7C,ADAA,AjCAA,ALFEmX,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,ANAA,AiFEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,ALAA9R,AxFAA,ANAAA,CmGACpJ,A7FAAA,E6FAL,A7FAA,C6FAQ,A7FAA,CwFAC,A9FAA,G8FAG6U,A9FAAA,GmGAZ,A7FAA,E6FAiBgH,A7FAAA,EwFAE,A9FAA,C8FACzS,A9FAAA,ImGApB,A7FAA,CwFAA,A9FAA;A0IGF,ADAA,AjCAA,ALFE,ALAAyL,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAAA,AiFEF,AsFAA,A1IFA,AFYI,EmEZFA,A9FAAA,ImGAIkH,A7FAAA,GwFAG,A9FAA,C8FAC3S,A9FAAA,C2BYC,IwEZI,ALAb,AxFAa,ANAb,C2BYc6B,EwEZE,ALAA,AxFAA,ANAA,I8FAhB,A9FAA,CmGAA,A7FAA,OqBYS,CAAoBF,SAA3B;A+GTJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA,AFYG,GANoD;A+GHvD,ADAA,AjCAA,ALFE,ALAA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAA,AiFEF,AsFAA,A1IFA,AFYE/H,EAAAA,GAAG,EAAE,EmEZEoG,A9FAAA,EmGAEwS,A7FAAA,GwFAT,A9FAA,E8FAc,A9FAA,C2BYC1Z,CwEZf,A7FAA,G6FAmB,A7FAA,CqBYd,EAAiB;A+GTxB,ADAA,AjCAA,ALFIoW,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,AFYI,IwEZAA,A7FAAA,IwFAI3N,A9FAAA,CmGAC,A7FAA,C6FAC,ALAA,AxFAA,ANAA,G8FAGvB,A9FAAA,K8FAK,A9FAA,CmGAT,ALAUmG,AxFAV,ANAUA,CmGAf,A7FAA,C6FDiB,A7FAA,C6FCC,A7FAA,KwFAlB,A9FAA;A0IGJ,ADAA,AjCAA,AVFIpK,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFIA,AiFEJ,AsFAA,A1IFA,AFYI,ImEZAA,A9FAAA,K8FAK,A9FAA,C8FAC6M,A9FAAA,S8FAN,A9FAA;A0IGJ,ADAA,AjCAA,ALFIkJ,ALAAvQ,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIuQ,ANAAvQ,AiFEJ,AsFAA,A1IFA,AFYI,IwEZAuQ,ALAAvQ,AxFAAuQ,ANAAvQ,E8FAE,A9FAA,C8FAC5G,A9FAAA,CmGAC,A7FAA,AqBYA,CwEZC3D,A7FAAA,AqBYA,CmEZH,A9FAA,C8FAF,A9FAA,G2BYU6K,SwEZV,A7FAA,C6FAoB,A7FAA,IqBYpB,EAA0B,CwEZ1B,A7FAA,E6FA6BmL,A7FAAA,O6FA7B,A7FAA;AoIGJ,ADAA,AjCAA,ALFI8E,ALAA9R,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI8R,ANAA9R,AiFEJ,AsFAA,A1IFA,AFYM,IwEZF8R,ALAA9R,AxFAA8R,ANAA9R,ImGAI,A7FAA,C6FAChJ,ALAA,AxFAAA,ANAA,G8FAGgJ,A9FAAA,K8FAK,A9FAA,C8FACE,A9FAAA,I8FAd,A9FAA,CmGAA,A7FAA,C6FAoB,A7FAA,Q6FApB,A7FAA,E6FA8B0M,A7FAAA,Q6FA9B,A7FAA;AoIGJ,ADAA,AjCAA,ALFIkF,ALAD,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAD,AiFEH,AsFAA,A1IFA,AFYK,GmErBwC,A9FAA,CmGSzCA,ALAA,AxFAAA,ANAA,C2BOoB,CAOpB,EwEdI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,O6FApB,A7FAA,E6FA6Byb,A7FAAA,O6FA7B,A7FAA;AoIGJ,ADAA,AjCAA,ALFIX,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,AFcI,IwEdAA,A7FAAA,I6FAI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,O6FApB,A7FAA,E6FA6B+V,A7FAAA,O6FA7B,A7FAA;AoIGJ,ADAA,AjCAA,ALFI+E,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,I6FAI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,Q6FApB,A7FAA,E6FA8Bqb,A7FAAA,Q6FA9B,A7FAA;AoIGJ,ADAA,AjCAA,ALFI3S,ALAF3D,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI2D,ANAF3D,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,EmGAE2D,A7FAAA,G6FAG,ALAA,AxFAA,ANAA,CmGAC1I,ALAA8R,AxFAA9R,ANAA8R,cmGAJ,A7FAA,C6FAmB,A7FAA,GwFArB,A9FAA,C8FAyB5I,A9FAAA,CmGAvB,A7FAA,E6FA0B8L,A7FAAA,CwFA5B,A9FAA,G8FAgCP,A9FAAA,CmGA9B,A7FAA,MwFAF,A9FAA;A0IGF,ADAA,AjCAA,ALFI/L,ALAH,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAH,AiFED,AsFAA,A1IFA,AFYI,IwEZAA,A7FAAA,G6FAG,A7FAA,C6FAC1I,A7FAAA,CqBYC6K,awEZL,A7FAA,C6FAmB,A7FAA,AqBYnB,CAAoBF,IwEZpB,A7FAA,E6FA0ByQ,A7FAAA,GqBY1B,GwEZA,A7FAA,AqBYgCtZ,KAAhC;A+GTJ,ADAA,AjCAA,ALFI4G,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,AFYG,IwEZCA,A7FAAA,G6FAG,A7FAA,C6FAC1I,A7FAAA,c6FAJ,A7FAA,C6FAmB,A7FAA,M6FAnB,A7FAA,E6FA2B4b,A7FAAA,M6FA3B,A7FAA;AoIGJ,ADAA,AjCAA,ALFID,ALAJva,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIua,ANAJva,AiFEA,AsFAA,A1IFA,AFNuD,CAAvD,GwEMIua,A7FAAA,EwFAE,A9FAA,C8FAClZ,A9FAAA,MmGAM,A7FAA,G6FAG,A7FAA,I6FAZ,A7FAA,C6FXiB,ALWrB,AxFXqB,ANWrB,CmGAsB,ALAAsM,AxFAA,ANAAA,Q8FAQ,A9FAA,C8FAC3P,A9FAAA,S8FA/B,A9FAA,E8FA0C,A9FAA,W8FA1C,A9FAA,E8FAuD,A9FAA;A0IGvD,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAF,AiFEF,AsFAA,A1IFA,AFaA2P,QAAQ,CAAC3P,SAAT,CAAmBkL,OAAnB,GAA6B6F,WAAW,CAAC7F,OAAzC;A+GVA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAF,AiFEF,AsFAA,A1IFA,AFaAyE,QAAQ,CAAC3P,SAAT,CAAmBsV,UAAnB,GAAgCvE,WAAW,CAAC9E,SAA5C;A+GVA,ADAA,AjCAA,ALFI,ALAF,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAF,AiFEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,ALAF3I,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAFA,AiFEF,AsFAA,A1IFA,AFYAqM,EmEZErM,A9FAAA,M2BYM,CAACtD,GmEZG,A9FAA,E8FAE,A9FAA,I2BYd,CmEhBuD,A9FAA,A2BgBpC4L,QAAnB,GAA8B,UAAUrH,GAAV,EAAe4G,EAAf,EAAmB;A+GTjD,ADAA,AjCAA,AVFE5H,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFEA,AiFEF,AsFAA,A1IFA,AFYE,EmEZAA,A9FAAA,G8FAG,A9FAA,E8FAE,A9FAA,A2BYAyR,GAAL,MmEZczR,A9FAAA,G8FAT,A9FAA,G8FAe,A9FAA;A0IGtB,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,AFYE4H,EAAAA,EAAE,CAAC5G,GwEZGoB,ALAA,AxFAAA,ANAA,A2BYJ,CAAF,IwEZW,ALAA8F,AxFAA,ANAAA,CmGACsO,A7FAAA,U6FAN,A7FAA,GwFAA,A9FAA,EmGAqB,A7FAA,C6FAC2B,A7FAAA,EwFAE5Y,A9FAAA,EmGAE,A7FAA,C6FAC2I,A7FAAA,MwFA/B,A9FAA,E8FAuC,A9FAA,MmGAd,A7FAA,I6FAwBiQ,A7FAAA,I6FAI,A7FAA,C6FACjQ,A7FAAA,c6FAL,A7FAA,C6FAoBkG,A7FAAA,S6FAjE,A7FAA,C6FAJ,A7FAA,E6FAiF0K,A7FAAA,O6FAO,A7FAA;AoIG5F,ADAA,AjCAA,ALFG,ALAG,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANAG,AiFEN,AsFAA,A1IFA,AFYC,CAHD,YmETa,A9FAA,K8FAP,A9FAA;A0IGN,ADAA,AjCAA,AVFK,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFK,AiFEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE/S,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,G6FAG,A7FAA,C6FAC9I,A7FAAA,E6FAJ,A7FAA,C6FAO,A7FAA,M6FAP,A7FAA,E6FAegc,A7FAAA,M6FAf,A7FAA;AoIGF,ADAA,AjCAA,AVFI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFI,AiFEJ,AsFAA,A1IFA,WiEAW,A9FAA,K8FAK/Q,A9FAAA,c8FAL,A9FAA,C8FAoBF,A9FAAA,S8FA3B,A9FAA;A0IGJ,ADAA,AjCAA,ALFE,ALAC,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAC,AiFEH,AsFAA,A1IFA,GiEXuD,A9FAA,QmGW5CiR,A7FAAA,M6FAT,A7FAA,C6FAgB3M,A7FAAA,K6FAhB,A7FAA,E6FAuB,A7FAA;AoIGzB,ADAA,AjCAA,ALFIiJ,ALAFtV,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIsV,ANAFtV,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,EmGAEsV,A7FAAA,CwFAC,A9FAA,E8FAE,A9FAA,EmGAE,A7FAA,C6FAC,A7FAA,MwFAMtV,A9FAAA,EmGAP,A7FAA,C6FAL,ALAG,AxFAH,ANAG,C8FAad,A9FAAA,K8FAb,A9FAA,E8FAoB,A9FAA;A0IG3B,ADAA,AjCAA,ALFI,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAA,AiFEJ,AsFAA,A1IFA,QsEAQsE,A7FAAA,G6FAG,A7FAA,G6FAG0U,A7FAAA,I6FAI,A7FAA,C6FACxI,A7FAAA,K6FAL,A7FAA,C6FAWrD,A7FAAA,K6FAX,A7FAA,C6FAV,A7FAA;AoIGJ,ADAA,AjCAA,ALFIiJ,ALAA,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,ANAA,AiFEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,Y6FAD,A7FAA,E6FAe9R,A7FAAA,G6FAf,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,AVFI,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFI,AiFEJ,AsFAA,A1IFA,QiEAQ,A9FAA,C8FAC,A9FAA,K8FAKyE,A9FAAA,c8FAV,A9FAA,E8FA0B,A9FAA;A0IG9B,ADAA,AjCAA,ALFI,ALAE,A3GCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,ANAE,AiFEN,AsFAA,A1IFA,QsEAQzE,A7FAAA,G6FAG,A7FAA,K6FAK,A7FAA,K6FAZ,A7FAA,E6FAmB,A7FAA;AoIGvB,ADAA,AjCAA,ALFM,ALAD,A3GCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAD,AiFEL,AsFAA,A1IFA,KiEL2B,A9FAA,C8FKrB,A9FAA;A0IGN,ADAA,AjCAA,ALFM,ALAF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAF,AiFEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,A2EEN,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,A2EEN,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFM,ALAF,A3GCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFM,ANAF,AiFEJ,AsFAA,A1IFA,SiEASyE,A9FAAA,CmGAC,A7FAA,C6FAC9F,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,MwFAb,A9FAA,C8FAoBjO,A9FAAA,GmGAb,A7FAA,K6FAqB,A7FAA,C6FArB,ALAP,AxFAO,ANAP,G8FAgC7I,A9FAAA,CmGACiD,A7FAAA,IwFAjC,A9FAA,CmGAsC,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,K6FAgBmC,A7FAAA,I6FA1C,A7FAA,I6FAkD/V,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,C6FAnB,A7FAA,I6FAwB7K,A7FAAA,O6FAO,A7FAA,C6FAChJ,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAP,A7FAA,E6FAcmC,A7FAAA,I6FAd,A7FAA,C6FAP,A7FAA,K6FA+B,A7FAA,C6FAC,A7FAA,C6FA3G,A7FAA,K6FAiH,A7FAA,C6FACa,A7FAAA,S6FAtH,A7FAA,E6FAiI,A7FAA;AoIGvI,ADAA,AjCAA,ALFQzD,ALAL,A3GCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFQA,ANAL,AiFEH,AsFAA,A1IFA,QsEAQA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,6B6FAD,A7FAA,E6FAgCnT,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAtC,A7FAA,C6FAL,A7FAA;AoIGR,ADAA,AjCAA,ALFQpU,ALvB+C,A3GwBvD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFQA,ANvB+C,AiFyBvD,AsFAA,A1IFA,CiEvBA,A9FAA,OmGuBQA,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAN,A7FAA;AoIGR,ADAA,AjCAA,ALFO,ALAPpK,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFO,ANAPA,AiFEA,AsFAA,A1IFA,QiEAQ,A9FAA,C8FAC3P,A9FAAA,S8FAT,A9FAA,C8FAmBkL,A9FAAA,O8FAnB,A9FAA,G8FA6B6F,A9FAAA,W8FAW,A9FAA,C8FAC7F,A9FAAA,O8FAzC,A9FAA;A0IGA,ADAA,AjCAA,AVFAyE,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A3GFAA,AiFEA,AsFAA,A1IFA,QiEAQ,A9FAA,C8FAC3P,A9FAAA,S8FAT,A9FAA,C8FAmBsV,A9FAAA,U8FAnB,A9FAA,G8FAgCvE,A9FAAA,W8FAW,A9FAA,C8FAC9E,A9FAAA,S8FA5C,A9FAA;A0IGA,ADAA,AjCAA,ALFM3C,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,G6FAG,A7FAA,C6FACmT,A7FAAA,K6FAJ,A7FAA;AoIGN,ADAA,AjCAA,ALFK,ALAL9M,A3GCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFK,ANALA,AiFEA,AsFAA,A1IFA,QiEAQ,A9FAA,C8FAC3P,A9FAAA,S8FAT,A9FAA,C8FAmB4L,A9FAAA,Q8FAnB,A9FAA,G8FA8B,A9FAA,U8FAUrH,A9FAAA,G8FAV,A9FAA,E8FAe4G,A9FAAA,E8FAf,A9FAA,E8FAmB,A9FAA;A0IGjD,ADAA,AjCAA,ALFG,ALADA,A3GCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,ANADA,AiFEF,AsFAA,A1IFA,EiEAEA,A9FAAA,CmGxFkD,A7FAA,C6FwFhD,ALAA,AxFAA,ANAA,C8FAC5G,A9FAAA,G8FAD,A9FAA,C8FAF,A9FAA;A0IGF,ADAA,AjCAA,ALFE,ALAD,A3GCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,ANAD,AiFED,AsFAA,A1IFA,CiEFA,A9FAA;A0IKA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,WsEAWoS,A7FAAA,O6FAT,A7FAA,C6FAiBrS,A7FAAA,E6FAjB,A7FAA,E6FAqB,A7FAA;AoIGvB,ADAA,AjCAA,ALFIwU,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,S6FAD,A7FAA,E6FAYxU,A7FAAA,E6FAZ,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFI0X,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA;AoIGV,ADAA,AjCAA,ALFIN,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,I6FAI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,O6FApB,A7FAA,E6FA6B+V,A7FAAA,O6FA7B,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQiC,A7FAAA,e6FAe,A7FAA,C6FAC8C,A7FAAA,I6FAD,A7FAA,E6FAO,A7FAA,O6FAP,A7FAA,C6FAf,A7FAA,K6FAmC,A7FAA,C6FAvC,A7FAA,E6FA0CjP,A7FAAA,c6FAc,A7FAA,C6FACiP,A7FAAA,I6FAD,A7FAA,E6FAOpX,A7FAAA,E6FAP,A7FAA,C6FAd,A7FAA;AoIG9C,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,GsEjGoD,A7FAA,C6FiGhD,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEvD,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,e6FAe,A7FAA,C6FAC2a,A7FAAA,I6FAD,A7FAA,E6FAO,A7FAA,O6FAP,A7FAA,E6FAgB/E,A7FAAA,O6FAhB,A7FAA,C6FAf,A7FAA,C6FpGkD,A7FAA,C6FoGT,A7FAA;AoIG3C,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,WsEAWC,A7FAAA,O6FAT,A7FAA,G6FAmB,A7FAA;AoIGrB,ADAA,AjCAA,ALFI8E,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,I6FAI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,Q6FApB,A7FAA,E6FA8B4V,A7FAAA,Q6FA9B,A7FAA;AoIGJ,ADAA,AjCAA,ALFIwF,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA;AoIGV,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEN,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAChb,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,O6FAV,A7FAA,E6FAmBkW,A7FAAA,O6FAnB,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,WsEAWJ,A7FAAA,Q6FAT,A7FAA,G6FAoB,A7FAA;AoIGtB,ADAA,AjCAA,ALFIsC,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,U6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFI4C,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,I6FAI,A7FAA,C6FAC9a,A7FAAA,c6FAL,A7FAA,C6FAoB,A7FAA,O6FApB,A7FAA,E6FA6BgW,A7FAAA,O6FA7B,A7FAA;AoIGJ,ADAA,AjCAA,ALFIoF,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA;AoIGV,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEN,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAChb,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,Q6FAV,A7FAA,E6FAoB8V,A7FAAA,Q6FApB,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,WsEAWwF,A7FAAA,M6FAT,A7FAA,G6FAkB,A7FAA;AoIGpB,ADAA,AjCAA,ALFIlD,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,Q6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFIxP,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,G6FAG,A7FAA,C6FAC0S,A7FAAA,M6FAJ,A7FAA,C6FAWN,A7FAAA,I6FAX,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,GsExHoD,A7FAA,C6FwHhD,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEA,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAC5a,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,M6FAV,A7FAA,E6FAkBwI,A7FAAA,G6FAlB,A7FAA,E6F3HkD,A7FAA,C6F2H1B,A7FAA;AoIG1B,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,C6FAC3D,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAX,A7FAA,E6FAoB,A7FAA;AoIGtB,ADAA,AjCAA,ALFIX,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,a6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFIxP,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,G6FAG,A7FAA,C6FACoT,A7FAAA,M6FAJ,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAShB,A7FAAA,I6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,A2EED,AsFAA,A1IFA,CsEnIA,A7FAA;AoIsIA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEASY,A7FAAA,W6FAT,A7FAA,C6FAqBhT,A7FAAA,G6FArB,A7FAA,E6FA0B,A7FAA;AoIG1B,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS,A7FAA,S6FASqT,A7FAAA,yB6FAT,A7FAA,G6FAqC,A7FAA;AoIG9C,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQhX,A7FAAA,K6FAK,A7FAA,G6FAG2D,A7FAAA,G6FAG,A7FAA,C6FACgC,A7FAAA,c6FAhB,A7FAA;AoIGJ,ADAA,AjCAA,ALFIwN,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,a6FAD,A7FAA,E6FAgBnT,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAtB,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQpU,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAV,A7FAA,E6FAsBpU,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAN,A7FAA;AoIG1B,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQpU,A7FAAA,K6FAK,A7FAA,C6FACoU,A7FAAA,U6FAN,A7FAA,K6FAqB,A7FAA,C6FArB,A7FAA,I6FA0BnB,A7FAAA,e6FAe,A7FAA,C6FACtP,A7FAAA,G6FAD,A7FAA,E6FAM,A7FAA,M6FAN,A7FAA,C6FA7C,A7FAA,E6FA4D,A7FAA;AoIGhE,ADAA,AjCAA,ALFM3D,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,I6FAhB,A7FAA;AoIGN,ADAA,AjCAA,ALFM+B,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,I6FAI,A7FAA,C6FAClS,A7FAAA,G6FAD,A7FAA,C6FAJ,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,GsETE,A7FAA;AoIYF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFC,A2EED,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAkM,AhHCA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBgc,A7FAAA,M6FAnB,A7FAA,G6FA4B,A7FAA,U6FAUN,A7FAAA,I6FAV,A7FAA,E6FAgB,A7FAA;AoIG5C,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM/V,A7FAAA,K6FAK,A7FAA,G6FAG,A7FAA,K6FAK2F,A7FAAA,c6FAjB,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM4Q,A7FAAA,U6FAU,A7FAA,G6FAG,A7FAA;AoIGnB,ADAA,AjCAA,ALFIC,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA;AoIGhB,ADAA,AjCAA,ALJmB,AhHGnB,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGJmB,A2EInB,AsFAA,A1IFA,GsEFE,A7FAA,C6FF0C,A7FAA,C6FIvC,A7FAA;AoIGL,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMxW,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,K6FAqB,A7FAA,C6FAzB,A7FAA,E6FA4B,A7FAA,O6FAO,A7FAA,I6FAP,A7FAA,C6FNc,A7FAA,C6FMD,A7FAA;AoIG3C,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM7T,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,K6FAqB,A7FAA,C6FAzB,A7FAA,E6FA4B,A7FAA;AoIG9B,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQkC,A7FAAA,I6FAI,A7FAA,I6FAIA,A7FAAA,I6FAI,A7FAA,K6FAK/V,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FA3B,A7FAA,E6FAkC,A7FAA,O6FAO,A7FAA,I6FAP,A7FAA;AoIGtC,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACmC,A7FAAA,I6FAL,A7FAA,E6FAWA,A7FAAA,I6FAI,A7FAA,G6FAG/V,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAb,A7FAA,C6FHe,A7FAA,C6FGK,A7FAA;AoIGnC,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI5T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,G6FAc,A7FAA,I6FAd,A7FAA;AoIGJ,ADAA,AjCAA,ALFI5T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,C6FAnB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI7T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,K6FAhB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQiC,A7FAAA,I6FAJ,A7FAA,E6FAUA,A7FAAA,I6FAI,A7FAA,C6FAC5a,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,Q6FAV,A7FAA,E6FAoB,A7FAA,I6FApB,A7FAA,E6FA0Bob,A7FAAA,U6FA1B,A7FAA;AoIGd,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,WsEAW,A7FAA,I6FAP,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFG,A2EEH,AsFAA,A1IFA,GsElB4C,A7FAA,C6FkBxC,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,C6FACR,A7FAAA,I6FAL,A7FAA,E6FAW,A7FAA;AoIGb,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQkB,A7FAAA,K6FAK,A7FAA,G6FAGjX,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAlB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AgBAA,ApBDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQja,A7FAAA,G6FAG,A7FAA,G6FAGqG,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAhB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI7T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,G6FAc,A7FAA,I6FAd,A7FAA;AoIGJ,ADAA,AjCAA,ALFI5T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,C6FAnB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI7T,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,K6FAhB,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,SsEAS,A7FAA,I6FAI7Z,A7FAAA,C6FAC,A7FAA,G6FAG,A7FAA,C6FAb,A7FAA,E6FAgBA,A7FAAA,C6FAC,A7FAA,G6FAGN,A7FAAA,G6FApB,A7FAA,E6FAyBM,A7FAAA,C6FAC,A7FAA,E6FA1B,A7FAA,E6FA8B,A7FAA;AoIGlC,ADAA,AjCAA,ALFMgd,AhHCN,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FAChd,A7FAAA,C6FAD,A7FAA,C6FAL,A7FAA,C6FASkB,A7FAAA,I6FAT,A7FAA,C6FAc,A7FAA,Q6FAd,A7FAA,E6FAwB,A7FAA,I6FAxB,A7FAA,E6FA8B,A7FAA;AoIGpC,ADAA,AjCAA,ALFQqb,AhHCR,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFQA,A2EER,AsFAA,A1IFA,QsEAQA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA;AoIGpB,ADAA,AjCAA,ALJoC,AhHGpC,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGJoC,A2EIpC,AsFAA,A1IFA,OsEFM,A7FAA;AoIKN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,WsEAW,A7FAA,I6FAP,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA,GsEpC4C,A7FAA,C6FoCxC,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AWDA,A9FCA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMrV,A7FAAA,K6FAK,A7FAA,G6FAG6H,A7FAAA,O6FAO,A7FAA,C6FAChJ,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAP,A7FAA,E6FAcmC,A7FAAA,I6FAd,A7FAA,C6FAnB,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM5U,A7FAAA,K6FAK,A7FAA,K6FAK,A7FAA,C6FAC,A7FAA,C6FAf,A7FAA,E6FAkB,A7FAA,O6FAO,A7FAA,I6FAP,A7FAA;AoIGpB,ADAA,AjCAA,ALFEnB,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,C6FAYsD,A7FAAA,M6FAZ,A7FAA,C6FAmB/V,A7FAAA,K6FAnB,A7FAA,E6FA0B,A7FAA,C6FA1B,A7FAA;AoIGF,ADAA,AjCAA,ALFEnB,AhHCF,AgLCA,AWDA,A9FCA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,I6FAoB,A7FAA,C6FApB,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM7T,A7FAAA,K6FAK,A7FAA,C6FAC6T,A7FAAA,U6FAN,A7FAA,K6FAqB,A7FAA,C6FAzB,A7FAA,E6FA4B7T,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,G6FAc5T,A7FAAA,K6FAK,A7FAA,C6FAC4T,A7FAAA,K6FAN,A7FAA,C6FAY,A7FAA,C6FAZ,A7FAA,C6FAd,A7FAA;AoIG9B,ADAA,AjCAA,ALFEmC,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAC5a,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,Q6FAV,A7FAA,E6FAoB,A7FAA,I6FApB,A7FAA,E6FA0Bob,A7FAAA,U6FA1B,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS,A7FAA,I6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsE9CA,A7FAA,E6F8CG,A7FAA;AoIGH,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA1G,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBQ,A7FAAA,E6FAnB,A7FAA,G6FAwB,A7FAA,U6FAUsc,A7FAAA,E6FAV,A7FAA,E6FAczD,A7FAAA,E6FAd,A7FAA,E6FAkB,A7FAA;AoIG1C,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM0D,A7FAAA,G6FAG,A7FAA,G6FAGxM,A7FAAA,M6FAM,A7FAA,C6FACvQ,A7FAAA,S6FAP,A7FAA,C6FAiBQ,A7FAAA,E6FAjB,A7FAA,C6FAoB9B,A7FAAA,I6FApB,A7FAA,C6FAyB,A7FAA,I6FAzB,A7FAA,E6FA+Boe,A7FAAA,E6FA/B,A7FAA,E6FAmCzD,A7FAAA,E6FAnC,A7FAA,C6FAV,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM1T,A7FAAA,K6FAK,A7FAA,G6FAG,A7FAA,K6FAK2F,A7FAAA,c6FAjB,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMwR,A7FAAA,E6FAE,A7FAA,K6FAK,A7FAA,M6FAX,A7FAA,E6FAmB,A7FAA;AoIGrB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFInX,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FACiU,A7FAAA,iB6FAN,A7FAA,G6FA0B,A7FAA,K6FAKlT,A7FAAA,a6FAL,A7FAA,C6FAmB,A7FAA,U6FAnB,A7FAA,I6FAiC,A7FAA,C6FA3D,A7FAA,C6FHiB,A7FAA,C6FG6C,A7FAA;AoIGlE,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQf,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,K6FAkB,A7FAA,K6FAtB,A7FAA,E6FA6B,A7FAA,K6FAKiD,A7FAAA,M6FAL,A7FAA;AoIGjC,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA,GsENE,A7FAA,M6FMO,A7FAA,I6FAII,A7FAAA,E6FAE,A7FAA,K6FAK,A7FAA,U6FAX,A7FAA,E6FAuB,A7FAA;AoIGhC,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACnX,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAP,A7FAA,I6FAqB,A7FAA,C6FACzG,A7FAAA,K6FAK,A7FAA,C6FACiU,A7FAAA,iB6FAhC,A7FAA,E6FAmD,A7FAA;AoIGvD,ADAA,AjCAA,ALFMjU,AhHCN,AgLCA,AnFAA,A+BCA,AJDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FACiU,A7FAAA,iB6FAN,A7FAA,G6FA0BjU,A7FAAA,K6FAK,A7FAA,C6FAC+T,A7FAAA,Y6FAN,A7FAA,G6FAqB,A7FAA,I6FA/C,A7FAA;AoIGN,ADAA,AjCAA,ALFM/T,AhHCN,AgLCA,AnFAA,A+BCA,AJDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,K6FAhB,A7FAA;AoIGN,ADAA,AjCAA,ALFM9T,AhHCN,AgLCA,AnFAA,A+BCA,AJDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FACgU,A7FAAA,e6FAN,A7FAA,G6FAwB,A7FAA,K6FAxB,A7FAA;AoIGN,ADAA,AjCAA,ALFMb,AhHCN,AgLCA,AnFAA,A+BCA,AJDA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,a6FAD,A7FAA,E6FAgBnT,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAtB,A7FAA,E6FA8ByG,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,O6FApC,A7FAA,C6FAL,A7FAA;AoIGN,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A+BCA,AJDA,ArGFM,A2EEN,AsFAA,A1IFA,UsEAUvG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAV,A7FAA,E6FAkB,A7FAA;AoIGxB,ADAA,AjCAA,ALFQwb,AhHCR,AgLCA,AnFAA,A+BCA,AJDA,ArGFQA,A2EER,AsFAA,A1IFA,QsEAQA,A7FAAA,Y6FAY,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAZ,A7FAA;AoIGR,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AnFAA,A+BCA,AJDA,ArGFO,A2EEP,AsFAA,A1IFA,OsEFM,A7FAA,M6FEO,A7FAA,I6FAI,A7FAA,C6FAC/U,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,O6FAX,A7FAA,E6FAoB,A7FAA;AoIGjC,ADAA,AjCAA,ALFQrO,AhHCR,AgLCA,AnFAA,A+BCA,AJDA,ArGFQA,A2EER,AsFAA,A1IFA,QsEAQA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiBwd,A7FAAA,gB6FAjB,A7FAA,E6FAmC,A7FAA,I6FAnC,A7FAA;AoIGR,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AnFAA,A+BCA,AJDA,ArGFO,A2EEP,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A+BCA,AJDA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEASD,A7FAAA,G6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsE1BA,A7FAA;AoI6BA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAvH,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBS,A7FAAA,W6FAnB,A7FAA,G6FAiC+U,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBQ,A7FAAA,E6FApD,A7FAA;AoIGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAgV,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBY,A7FAAA,c6FAnB,A7FAA,G6FAoC,A7FAA,U6FAUkc,A7FAAA,E6FAV,A7FAA,E6FAczD,A7FAAA,E6FAd,A7FAA,E6FAkB,A7FAA;AoIGtD,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM0D,A7FAAA,G6FAG,A7FAA,G6FAGxM,A7FAAA,M6FAM,A7FAA,C6FACvQ,A7FAAA,S6FAP,A7FAA,C6FAiBY,A7FAAA,c6FAjB,A7FAA,C6FAgClC,A7FAAA,I6FAhC,A7FAA,C6FAqC,A7FAA,I6FArC,A7FAA,E6FA2Coe,A7FAAA,E6FA3C,A7FAA,E6FA+CzD,A7FAAA,E6FA/C,A7FAA,C6FAV,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMyD,A7FAAA,E6FAE,A7FAA,K6FAK,A7FAA,U6FAX,A7FAA,E6FAuB,A7FAA;AoIGzB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFIjf,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiByd,A7FAAA,uB6FAjB,A7FAA,E6FA0C,A7FAA,I6FA1C,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEASF,A7FAAA,G6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsEdA,A7FAA;AoIiBA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAvH,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBa,A7FAAA,kB6FAnB,A7FAA,G6FAwC,A7FAA,U6FAUic,A7FAAA,E6FAV,A7FAA,E6FAc,A7FAA;AoIGtD,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMC,A7FAAA,G6FAG,A7FAA,G6FAGxM,A7FAAA,M6FAM,A7FAA,C6FACvQ,A7FAAA,S6FAP,A7FAA,C6FAiBa,A7FAAA,kB6FAjB,A7FAA,C6FAoCZ,A7FAAA,K6FApC,A7FAA,C6FA0C,A7FAA,I6FA1C,A7FAA,E6FAgDN,A7FAAA,S6FAhD,A7FAA,C6FAV,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMmd,A7FAAA,E6FAE,A7FAA,K6FAK,A7FAA,U6FAP,A7FAA,I6FAqBA,A7FAAA,E6FAE,A7FAA,K6FAKha,A7FAAA,S6FAhC,A7FAA,E6FA2C,A7FAA;AoIG7C,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFIjF,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiByd,A7FAAA,uB6FAjB,A7FAA,E6FA0C,A7FAA,I6FA1C,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEASF,A7FAAA,G6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsEdA,A7FAA;AoIiBA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEASE,A7FAAA,uB6FAT,A7FAA,C6FAiClR,A7FAAA,I6FAjC,A7FAA,E6FAuC,A7FAA;AoIGvC,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMpG,A7FAAA,K6FAK,A7FAA,G6FAGoG,A7FAAA,I6FAI,A7FAA,C6FACT,A7FAAA,c6FAjB,A7FAA;AoIGF,ADAA,AjCAA,ALFE3F,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FACiU,A7FAAA,iB6FAN,A7FAA,G6FA0B7N,A7FAAA,I6FAI,A7FAA,C6FACrF,A7FAAA,a6FAL,A7FAA,C6FAmB,A7FAA,U6FAnB,A7FAA,I6FAiC,A7FAA,C6FA3D,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMf,A7FAAA,K6FAK,A7FAA,C6FACkU,A7FAAA,e6FAN,A7FAA,I6FAyB,A7FAA,C6FAClU,A7FAAA,K6FAK,A7FAA,C6FACmU,A7FAAA,M6FApC,A7FAA,E6FA4C,A7FAA;AoIG9C,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFInU,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,I6FAhB,A7FAA,C6FH0C,A7FAA,C6FGpB,A7FAA;AoIG1B,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA,GsEJE,A7FAA,M6FIO,A7FAA,I6FAI1N,A7FAAA,I6FAI,A7FAA,C6FACrF,A7FAAA,a6FAL,A7FAA,C6FAmB,A7FAA,M6FAnB,A7FAA,I6FA6B,A7FAA,C6FAjC,A7FAA,E6FAoC,A7FAA;AoIG7C,ADAA,AjCAA,ALFIqF,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,I6FAI,A7FAA,C6FAC2Q,A7FAAA,M6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEASM,A7FAAA,gB6FAT,A7FAA,C6FA0BjR,A7FAAA,I6FA1B,A7FAA,E6FAgC,A7FAA;AoIGhC,ADAA,AjCAA,ALFE+M,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,0B6FAD,A7FAA,C6FAL,A7FAA;AoIGF,ADAA,AjCAA,ALFE/M,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAC4L,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,C6FAV,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,EsEAE,A7FAA;AoIGF,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAnC,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmB0c,A7FAAA,M6FAnB,A7FAA,G6FA4B,A7FAA,Y6FAY,A7FAA;AoIGxC,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM/W,A7FAAA,K6FAK,A7FAA,G6FAG,A7FAA,K6FAK2F,A7FAAA,c6FAjB,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,C6FAC3F,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAX,A7FAA,E6FAoB,A7FAA;AoIGtB,ADAA,AjCAA,ALFIX,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,Q6FAD,A7FAA,C6FAL,A7FAA,C6FDkB,A7FAA,C6FCD,A7FAA;AoIGrB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFInT,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,G6FAgB,A7FAA,C6FAC9T,A7FAAA,K6FAK,A7FAA,C6FACiU,A7FAAA,iB6FAvB,A7FAA;AoIGJ,ADAA,AjCAA,ALFI8C,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,E6FAO/W,A7FAAA,K6FAP,A7FAA,C6FAN,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEA,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FACmU,A7FAAA,M6FAN,A7FAA,G6FAe,A7FAA,K6FAf,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS,A7FAA,I6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsEdA,A7FAA;AoIiBA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEAS4C,A7FAAA,M6FAT,A7FAA,C6FAgBhQ,A7FAAA,M6FAhB,A7FAA,E6FAwB/G,A7FAAA,K6FAxB,A7FAA,E6FA+B,A7FAA;AoIG/B,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,C6FACA,A7FAAA,K6FAK,A7FAA,C6FACkU,A7FAAA,e6FAX,A7FAA,E6FA4B,A7FAA;AoIG9B,ADAA,AjCAA,ALFIlU,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FACkU,A7FAAA,e6FAN,A7FAA,G6FAwB,A7FAA,I6FAxB,A7FAA;AoIGJ,ADAA,AjCAA,ALFIhc,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiB0d,A7FAAA,O6FAjB,A7FAA,E6FA0BxQ,A7FAAA,M6FA1B,A7FAA,E6FAkC/G,A7FAAA,K6FAlC,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEASuX,A7FAAA,O6FAT,A7FAA,C6FAiBxQ,A7FAAA,M6FAjB,A7FAA,E6FAyB/G,A7FAAA,K6FAzB,A7FAA,E6FAgC,A7FAA;AoIGhC,ADAA,AjCAA,ALFEmT,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,Q6FAD,A7FAA,E6FAWnT,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,O6FAjB,A7FAA,C6FAL,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,C6FACvG,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,O6FAX,A7FAA,E6FAoB,A7FAA;AoIGtB,ADAA,AjCAA,ALFIQ,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA,C6FACiL,A7FAAA,I6FAP,A7FAA,C6FAY,A7FAA,C6FAZ,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEhS,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FACkU,A7FAAA,e6FAN,A7FAA,G6FAwB,A7FAA,K6FAxB,A7FAA;AoIGF,ADAA,AjCAA,ALFEnN,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,M6FAM,A7FAA,C6FAC5L,A7FAAA,I6FAP,A7FAA,C6FAY,A7FAA,Q6FAZ,A7FAA;AoIGF,ADAA,AjCAA,ALFE0a,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,I6FAI,A7FAA,C6FAC9O,A7FAAA,M6FAD,A7FAA,C6FAJ,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM/G,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,I6FAiB,A7FAA,C6FAC9T,A7FAAA,K6FAK,A7FAA,C6FACuG,A7FAAA,O6FA5B,A7FAA,E6FAqCQ,A7FAAA,M6FAM,A7FAA,C6FACiL,A7FAAA,I6FAP,A7FAA,C6FAY,A7FAA,C6FAZ,A7FAA;AoIGvC,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAnC,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmByc,A7FAAA,K6FAnB,A7FAA,G6FA2B,A7FAA,Y6FAY,A7FAA;AoIGvC,ADAA,AjCAA,ALFE3D,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,uB6FAD,A7FAA,E6FA0B,A7FAA,K6FAKxN,A7FAAA,c6FAL,A7FAA,C6FAoBmO,A7FAAA,O6FA9C,A7FAA,C6FAL,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM,A7FAA,K6FAKnO,A7FAAA,c6FAL,A7FAA,C6FAoBmO,A7FAAA,O6FApB,A7FAA,K6FAgC,A7FAA,K6FApC,A7FAA,E6FA2C,A7FAA;AoIG7C,ADAA,AjCAA,ALFIX,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,O6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,SsEASxN,A7FAAA,c6FAL,A7FAA,C6FAoBmO,A7FAAA,O6FApB,A7FAA,G6FA8B,A7FAA,K6FA9B,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A+BCA,AJDA,ArGFI,A2EEJ,AsFAA,A1IFA,SsEAS3Y,A7FAAA,I6FAL,A7FAA,C6FAU,A7FAA,O6FAV,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A+BCA,AJDA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,OsEAOwK,A7FAAA,c6FAL,A7FAA,C6FAoBwO,A7FAAA,M6FApB,A7FAA,G6FA6B,A7FAA,I6FA7B,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A+BCA,AJDA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS,A7FAA,I6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A+BCA,AJDA,ArGFC,A2EED,AsFAA,A1IFA,CsEXA,A7FAA;AoIcA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A+BCA,AJDA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A+BCA,AJDA,ArGFA,A2EEA,AsFAA,A1IFA,SsEAS0B,A7FAAA,I6FAT,A7FAA,C6FAc9O,A7FAAA,M6FAd,A7FAA,E6FAsB,A7FAA;AoIGtB,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAM/G,A7FAAA,K6FAK,A7FAA,G6FAG+G,A7FAAA,M6FAM,A7FAA,C6FACpB,A7FAAA,c6FAnB,A7FAA;AoIGF,ADAA,AjCAA,ALFEwN,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,M6FAD,A7FAA,E6FASnT,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAf,A7FAA,C6FAL,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS9T,A7FAAA,K6FAK,A7FAA,C6FAC8T,A7FAAA,O6FAN,A7FAA,I6FAiB/M,A7FAAA,M6FAM,A7FAA,C6FACiL,A7FAAA,I6FAP,A7FAA,O6FAkB,A7FAA,I6FA1C,A7FAA,E6FAgD,A7FAA;AoIGlD,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA,A1IFA,EsEAE,A7FAA;AoIGF,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAnC,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,A1IFA,QsEAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBmd,A7FAAA,I6FAnB,A7FAA,G6FA0B,A7FAA,U6FAUzQ,A7FAAA,M6FAV,A7FAA,E6FAkB,A7FAA;AoIG5C,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMtB,A7FAAA,K6FAK,A7FAA,G6FAG,A7FAA,I6FAZ,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMzF,A7FAAA,K6FAK,A7FAA,G6FAG,A7FAA,K6FAK2F,A7FAAA,c6FAjB,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,MsEAMwO,A7FAAA,M6FAM,A7FAA,G6FAG,A7FAA,K6FAb,A7FAA;AoIGF,ADAA,AjCAA,ALFEpN,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,M6FAM,A7FAA,C6FAClM,A7FAAA,E6FAP,A7FAA,C6FAU,A7FAA,K6FAV,A7FAA,E6FAiB,A7FAA,Y6FAY,A7FAA;AoIG/B,ADAA,AjCAA,ALFIsY,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,a6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQnT,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FAN,A7FAA,I6FAiB,A7FAA,C6FACtU,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FA5B,A7FAA,E6FAmC,A7FAA;AoIGvC,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,A1IFA,UsEAU0D,A7FAAA,K6FAK,A7FAA,G6FAGlK,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FAN,A7FAA,C6FAcjF,A7FAAA,G6FAd,A7FAA,E6FAZ,A7FAA;AoIGN,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,A1IFA,UsEAUnF,A7FAAA,K6FAK,A7FAA,I6FAIA,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FAnB,A7FAA,E6FA2BkM,A7FAAA,K6FAK,A7FAA,C6FACvL,A7FAAA,I6FAN,A7FAA,C6FAWgQ,A7FAAA,K6FAX,A7FAA;AoIGjC,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFIzE,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FACvL,A7FAAA,I6FAN,A7FAA,C6FAW,A7FAA,I6FAX,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsETE,A7FAA;AoIYF,ADAA,AjCAA,ALFE6M,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,M6FAM,A7FAA,C6FAClM,A7FAAA,E6FAP,A7FAA,C6FAU,A7FAA,M6FAV,A7FAA,E6FAkB,A7FAA,U6FAUqP,A7FAAA,K6FAV,A7FAA,E6FAiB,A7FAA;AoIGrC,ADAA,AjCAA,ALFIiJ,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,c6FAD,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQnT,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FAV,A7FAA,E6FAmBpK,A7FAAA,K6FAK,A7FAA,G6FAGlK,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FAN,A7FAA,C6FAc/G,A7FAAA,K6FAd,A7FAA,C6FAoBrD,A7FAAA,K6FApB,A7FAA,C6FAR,A7FAA,C6FFc,A7FAA,C6FEsB,A7FAA;AoIG3D,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQlK,A7FAAA,K6FAK,A7FAA,C6FAC+J,A7FAAA,U6FAN,A7FAA,K6FAqBG,A7FAAA,K6FAK,A7FAA,K6FAK,A7FAA,I6FAV,A7FAA,I6FAkBA,A7FAAA,K6FAK,A7FAA,K6FAK/M,A7FAAA,S6FAjD,A7FAA,C6FAJ,A7FAA,E6FAiE,A7FAA,O6FAjE,A7FAA,K6FA6E,A7FAA,I6FAI,A7FAA,C6FAC6C,A7FAAA,K6FAK,A7FAA,C6FAC+J,A7FAAA,U6FAP,A7FAA,K6FAsB,A7FAA,C6FACG,A7FAAA,K6FAD,A7FAA,I6FAU,A7FAA,C6FACA,A7FAAA,K6FAK,A7FAA,C6FAC3Q,A7FAAA,M6FAvC,A7FAA,C6FAJ,A7FAA,E6FAoD,A7FAA;AoIGrI,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQ8H,A7FAAA,G6FAG,A7FAA,G6FAGoE,A7FAAA,K6FAK,A7FAA,C6FACvL,A7FAAA,I6FAN,A7FAA,C6FAWgQ,A7FAAA,K6FAX,A7FAA,C6FAV,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQ,A7FAA,C6FAC7I,A7FAAA,G6FAL,A7FAA,E6FAU,A7FAA;AoIGd,ADAA,AjCAA,ALFM8S,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,M6FAM,A7FAA,G6FAG,A7FAA,I6FAT,A7FAA;AoIGN,ADAA,AjCAA,ALFMpN,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,M6FAM,A7FAA,C6FAC+P,A7FAAA,K6FAP,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsEZE,A7FAA,E6Ff0C,A7FAA,C6F2BtC,A7FAA;AoIGN,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,OsEAO,A7FAA,I6FAI7c,A7FAAA,C6FAT,A7FAA,I6FAc8M,A7FAAA,M6FAd,A7FAA,E6FAsB,A7FAA;AoIGxB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQ,A7FAA,K6FAK9M,A7FAAA,C6FAL,A7FAA,M6FAYkD,A7FAAA,S6FAZ,A7FAA,I6FAyB,A7FAA,O6FAO4J,A7FAAA,M6FAM,A7FAA,C6FAC9M,A7FAAA,C6FAD,A7FAA,C6FAb,A7FAA,K6FAqB,A7FAA,U6FAlD,A7FAA,E6FA8D,A7FAA;AoIGlE,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,A1IFA,WsEAWA,A7FAAA,C6FAL,A7FAA,I6FAU,A7FAA,S6FASwd,A7FAAA,U6FAT,A7FAA,C6FAoB3H,A7FAAA,M6FApB,A7FAA,E6FA4B,A7FAA;AoIG5C,ADAA,AjCAA,ALFQ,AhHCR,AgLCA,AnFAA,A2BAA,ArGFQ,A2EER,AsFAA,A1IFA,esEAe,A7FAA,S6FAS4H,A7FAAA,wB6FAT,A7FAA,G6FAoC,A7FAA;AoIGnD,ADAA,AjCAA,ALFU,AhHCV,AgLCA,AnFAA,A2BAA,ArGFU,A2EEV,AsFAA,A1IFA,iBsEAiB3Q,A7FAAA,M6FAM,A7FAA,C6FAC+I,A7FAAA,M6FAD,A7FAA,C6FAN,A7FAA,C6FAexV,A7FAAA,K6FAf,A7FAA,C6FAqByM,A7FAAA,M6FArB,A7FAA,E6FA6B/M,A7FAAA,S6FA7B,A7FAA,C6FAP,A7FAA;AoIGV,ADAA,AjCAA,ALFS,AhHCT,AgLCA,AnFAA,A2BAA,ArGFS,A2EET,AsFAA,A1IFA,SsEFQ,A7FAA;AoIKR,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AnFAA,A2BAA,ArGFO,A2EEP,AsFAA,A1IFA,OsEJgB,A7FAA,C6FIRC,A7FAAA,C6FJQ,A7FAA,C6FAV,A7FAA;AoION,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsEtC4C,A7FAA,C6FsCxC,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,OsEAO,A7FAA,I6FAIkE,A7FAAA,C6FAC,A7FAA,G6FAG,A7FAA,C6FAb,A7FAA,E6FAgBA,A7FAAA,C6FAC,A7FAA,G6FAGqV,A7FAAA,Y6FAY,A7FAA,C6FACja,A7FAAA,M6FAjC,A7FAA,E6FAyC4E,A7FAAA,C6FAC,A7FAA,E6FA1C,A7FAA,E6FA8C,A7FAA;AoIGhD,ADAA,AjCAA,ALFI4I,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,M6FAM,A7FAA,C6FAClM,A7FAAA,E6FAP,A7FAA,C6FAU2Y,A7FAAA,Y6FAY,A7FAA,C6FACrV,A7FAAA,C6FAD,A7FAA,C6FAtB,A7FAA,E6FA2B,A7FAA,K6FAKhD,A7FAAA,I6FAL,A7FAA,C6FAU+E,A7FAAA,I6FAV,A7FAA,C6FAe,A7FAA,I6FAf,A7FAA,E6FAqBsT,A7FAAA,Y6FAY,A7FAA,C6FACrV,A7FAAA,C6FAD,A7FAA,C6FAjC,A7FAA,C6FA3B,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsE3C4C,A7FAA,C6F2CxC,A7FAA;AoIGJ,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,OsEAOoW,A7FAAA,K6FAL,A7FAA,G6FAa,A7FAA,U6FAUpW,A7FAAA,C6FAV,A7FAA,E6FAa,A7FAA;AoIG5B,ADAA,AjCAA,ALFIgV,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,A1IFA,IsEAIA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,e6FAD,A7FAA,E6FAkBhV,A7FAAA,C6FAlB,A7FAA,C6FAL,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQgW,A7FAAA,M6FAJ,A7FAA,E6FAY,A7FAA;AoIGhB,ADAA,AjCAA,ALFMA,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,M6FAM,A7FAA,G6FAG,A7FAA,K6FAT,A7FAA;AoIGN,ADAA,AjCAA,ALFMpN,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,M6FAM,A7FAA,C6FACgQ,A7FAAA,M6FAP,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsEPE,A7FAA;AoIUF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA,SsEAS,A7FAA,I6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA,A1IFA,CsEzDA,A7FAA;AoI4DA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,A1IFA,IsEAI,A7FAA,O6FAO1J,A7FAAA,M6FAP,A7FAA,K6FAkB,A7FAA,U6FAtB,A7FAA,E6FAkC,A7FAA;AoIGlC,ADAA,AjCAA,ALFEwC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,A1IFA,EsEAEA,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FAT,A7FAA,C6FAmBgT,A7FAAA,M6FAM,A7FAA,C6FACoF,A7FAAA,a6FA1B,A7FAA,I6FA2C,A7FAA,Y6FAY,A7FAA;AoIGzD,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,QsEAQG,A7FAAA,iC6FAiC,A7FAA,K6FAKzV,A7FAAA,S6FA1C,A7FAA,E6FAqD,A7FAA;AoIGzD,ADAA,AjCAA,ALFMyV,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,A1IFA,MsEAMA,A7FAAA,iC6FAiC,A7FAA,G6FAGhR,A7FAAA,O6FAO,A7FAA,C6FAC,A7FAA,mC6FAD,A7FAA,C6FA3C,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,A1IFA,WsEAWgR,A7FAAA,iC6FAiC,A7FAA,C6FAC,A7FAA,I6FAD,A7FAA,C6FAxC,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,A1IFA,GsENE,A7FAA;AoISF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFAvW,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,A1IFA,MsEAM,A7FAA,C6FACqB,A7FAAA,c6FAP,A7FAA,C6FAsBmS,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FA/B,A7FAA,E6FA0C,A7FAA,uB6FA1C,A7FAA,E6FAmE,A7FAA;AoIGnE,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,A1IFA;A6GGA,ADAA,AjCAA,ALFEsD,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA,K6FJqD,A7FAA;AoIOnE,ADAA,AjCAA,ALFEC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,S6FASA,A7FAAA,G6FAT,A7FAA,G6FAe,A7FAA;AoIGtB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,WpEFW,A7FAA,K6FAK+H,A7FAAA,c6FAL,A7FAA,C6FAoB8D,A7FAAA,a6FA3B,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALVmE,AhHSnE,AgLCA,AnFAA,A2BAA,ArGVmE,A2EUnE,AsFAA,CpEVA,A7FAA;AoIWA,ADAA,AjCAA,ALFApN,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,MpEFM,A7FAA,C6FACqB,A7FAAA,c6FAP,A7FAA,C6FAsBmS,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FA/B,A7FAA,E6FA0C,A7FAA,gB6FA1C,A7FAA,E6FA4D,A7FAA;AoIG5D,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFEsD,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA,K6FJ8C,A7FAA;AoIO5D,ADAA,AjCAA,ALFEC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,S6FASA,A7FAAA,G6FAT,A7FAA,G6FAe,A7FAA;AoIGtB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,WpEFW,A7FAA,K6FAK+H,A7FAAA,c6FAL,A7FAA,I6FAuB,A7FAA,K6FAKA,A7FAAA,c6FAL,A7FAA,C6FAoBuJ,A7FAAA,M6FAlD,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALV4D,AhHS5D,AgLCA,AnFAA,A2BAA,ArGV4D,A2EU5D,AsFAA,CpEVA,A7FAA;AoIWA,ADAA,AjCAA,ALFA7S,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,MpEFM,A7FAA,C6FACqB,A7FAAA,c6FAP,A7FAA,C6FAsBmS,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FA/B,A7FAA,E6FA0C,A7FAA,iB6FA1C,A7FAA,E6FA6D,A7FAA;AoIG7D,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFEsD,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA,K6FJ+C,A7FAA;AoIO7D,ADAA,AjCAA,ALFEC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,S6FASA,A7FAAA,G6FAT,A7FAA,G6FAe,A7FAA;AoIGtB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,WpEFW,A7FAA,K6FAK+H,A7FAAA,c6FAL,A7FAA,C6FAoBmO,A7FAAA,O6FA3B,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,GpET6D,A7FAA;AoIU7D,ADAA,AjCAA,ALFEjW,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,S6FASA,A7FAAA,G6FAT,A7FAA,C6FAamC,A7FAAA,K6FAb,A7FAA,E6FAoB,A7FAA;AoIG3B,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,QpEFQ,A7FAA,K6FAK2F,A7FAAA,c6FAT,A7FAA,E6FAyB,A7FAA;AoIG7B,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,WpEFWA,A7FAAA,c6FAL,A7FAA,C6FAoBmO,A7FAAA,O6FApB,A7FAA,G6FA8B9T,A7FAAA,K6FA9B,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA;A7BCA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALf6D,AhHc7D,AgLCA,AnFAA,A2BAA,ArGf6D,A2Ee7D,AsFAA,CpEfA,A7FAA,G6FaI,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA6P,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,QpEFQ,A7FAA,C6FAC8H,A7FAAA,S6FAT,A7FAA,G6FAqBhC,A7FAAA,Q6FArB,A7FAA;AoIGA,ADAA,AjCAA,ALFAtZ,AhHCA,AgLCA,AnFAA,A2BAA,ArGFAA,A2EEA,AsFAA,MpEFM,A7FAA,C6FACqB,A7FAAA,c6FAP,A7FAA,C6FAsBmS,A7FAAA,Q6FAQ,A7FAA,C6FACxV,A7FAAA,S6FA/B,A7FAA,E6FA0C,A7FAA,gB6FA1C,A7FAA,E6FA4D,A7FAA;AoIG5D,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFEsD,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,U6FAU,A7FAA,E6FAE,A7FAA,K6FJ8C,A7FAA;AoIO5D,ADAA,AjCAA,ALFEC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,G6FAG,A7FAA,E6FAE,A7FAA,S6FASA,A7FAAA,G6FAT,A7FAA,G6FAe,A7FAA;AoIGtB,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,WpEFW,A7FAA,K6FAK+H,A7FAAA,c6FAL,A7FAA,C6FAoBpM,A7FAAA,M6FA3B,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALV4D,AhHS5D,AgLCA,AnFAA,A2BAA,ArGV4D,A2EU5D,AsFAA,CpEVA,A7FAA,G6FQI,A7FAA;AoIGJ,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,SpEFSoc,A7FAAA,Q6FAT,A7FAA,C6FAkBxX,A7FAAA,C6FAlB,A7FAA,E6FAqB6B,A7FAAA,K6FArB,A7FAA,E6FA4B,A7FAA;AoIG5B,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFMA,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,K6FAiB,A7FAA,C6FArB,A7FAA,E6FAwB,A7FAA,O6FAO,A7FAA,I6FAP,A7FAA;AoIG1B,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFM8H,A7FAAA,G6FAJ,A7FAA;AoIGF,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFMrB,A7FAAA,K6FAK,A7FAA,C6FAC+J,A7FAAA,U6FAV,A7FAA,E6FAsB1I,A7FAAA,G6FAG,A7FAA,G6FAGrB,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAa5O,A7FAAA,K6FAb,A7FAA,E6FAN,A7FAA,C6FAtB,A7FAA,K6FAsD,A7FAA,I6FAI,A7FAA,C6FACnC,A7FAAA,C6FAD,A7FAA,I6FAMA,A7FAAA,C6FAC,A7FAA,I6FAI6B,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FArB,A7FAA,E6FA6B,A7FAA;AoIGrF,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA;A7BCA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,QpEFQyG,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FAV,A7FAA,E6FAmBjT,A7FAAA,G6FAG,A7FAA,G6FAGrB,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAa7K,A7FAAA,I6FAb,A7FAA,C6FAkB,A7FAA,E6FAlB,A7FAA,C6FAN,A7FAA,C6FAnB,A7FAA,K6FAoD,A7FAA,I6FAIrE,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAa3V,A7FAAA,M6FAb,A7FAA,K6FAwB,A7FAA,C6FA5B,A7FAA,E6FA+B8H,A7FAAA,G6FAG,A7FAA,G6FAGrB,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAapK,A7FAAA,K6FAb,A7FAA,E6FAN,A7FAA,C6FA/B,A7FAA,K6FA+DzD,A7FAAA,G6FAG,A7FAA,G6FAGrB,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAa1V,A7FAAA,M6FAb,A7FAA,C6FAoBwG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FA1B,A7FAA,C6FAN,A7FAA;AoIGvH,ADAA,AjCAA,ALFIyG,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAa9K,A7FAAA,K6FAb,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,GpENwD,A7FAA,M6FI/C,A7FAA;AoIGT,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA;A7BCA,ADAA,AjCAA,ALFI/C,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,G6FAG,A7FAA,G6FAGrB,A7FAAA,K6FAK,A7FAA,C6FACkP,A7FAAA,M6FAN,A7FAA,C6FAaxK,A7FAAA,O6FAb,A7FAA,C6FAqBvG,A7FAAA,C6FArB,A7FAA,E6FAwB6B,A7FAAA,K6FAK,A7FAA,C6FACsU,A7FAAA,O6FA9B,A7FAA,C6FAN,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,SpEFSjT,A7FAAA,G6FAP,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,SpEFSoU,A7FAAA,W6FAT,A7FAA,C6FAqB1O,A7FAAA,M6FArB,A7FAA,E6FA6B,A7FAA;AoIG7B,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFM/G,A7FAAA,K6FAK,A7FAA,G6FAG+G,A7FAAA,M6FAM,A7FAA,C6FACpB,A7FAAA,c6FAnB,A7FAA;AoIGF,ADAA,AjCAA,ALFEwN,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,a6FAD,A7FAA,E6FAgBnT,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAtB,A7FAA,C6FAL,A7FAA;AoIGF,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFM,A7FAA,C6FACzG,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAX,A7FAA,E6FAuB,A7FAA;AoIGzB,ADAA,AjCAA,ALFIzG,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,K6FAK,A7FAA,C6FACwG,A7FAAA,K6FAN,A7FAA,G6FAc,A7FAA,I6FAd,A7FAA;AoIGJ,ADAA,AjCAA,ALFItO,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,O6FAO,A7FAA,C6FAC2B,A7FAAA,Q6FAR,A7FAA,C6FAiB+d,A7FAAA,a6FAjB,A7FAA,E6FAgC5X,A7FAAA,K6FAhC,A7FAA,E6FAuC+G,A7FAAA,M6FAvC,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,SpEFS6Q,A7FAAA,a6FAT,A7FAA,C6FAuB5X,A7FAAA,K6FAvB,A7FAA,E6FA8B+G,A7FAAA,M6FA9B,A7FAA,E6FAsC,A7FAA;AoIGtC,ADAA,AjCAA,ALFEoM,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,K6FAK,A7FAA,C6FAC,A7FAA,e6FAD,A7FAA,E6FAkBnT,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAxB,A7FAA,E6FAoCzG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FA1C,A7FAA,C6FAL,A7FAA,C6FDoC,A7FAA,C6FCoB,A7FAA;AoIG1D,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,MpEFM,A7FAA,C6FACyG,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAP,A7FAA,I6FAqBzG,A7FAAA,K6FAK,A7FAA,C6FACzG,A7FAAA,M6FAN,A7FAA,K6FAiB,A7FAA,C6FA1C,A7FAA,E6FA6C,A7FAA;AoIG/C,ADAA,AjCAA,ALFIyG,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,K6FAK,A7FAA,C6FACyG,A7FAAA,U6FAN,A7FAA,G6FAmB,A7FAA,I6FAnB,A7FAA;AoIGJ,ADAA,AjCAA,ALFIM,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,M6FAM,A7FAA,C6FACiJ,A7FAAA,Q6FAP,A7FAA,G6FAkB,A7FAA,K6FAlB,A7FAA;AoIGJ,ADAA,AjCAA,ALFIjJ,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFIA,A2EEJ,AsFAA,IpEFIA,A7FAAA,M6FAM,A7FAA,C6FAC5L,A7FAAA,I6FAP,A7FAA,C6FAY,A7FAA,K6FAZ,A7FAA;AoIGJ,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,QpEFQ6E,A7FAAA,K6FAK,A7FAA,C6FACkH,A7FAAA,W6FAV,A7FAA,E6FAuB,A7FAA;AoIG3B,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA;A7BCA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA;A7BCA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,UpEFUD,A7FAAA,M6FAM,A7FAA,G6FAGF,A7FAAA,M6FAM,A7FAA,C6FACjB,A7FAAA,c6FApB,A7FAA;AoIGN,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFM,AhHCN,AgLCA,AnFAA,A2BAA,ArGFM,A2EEN,AsFAA,UpEFU,A7FAA,C6FACmB,A7FAAA,M6FAD,A7FAA,I6FAWA,A7FAAA,M6FAM,A7FAA,C6FACC,A7FAAA,W6FAP,A7FAA,I6FAsBD,A7FAAA,M6FAM,A7FAA,C6FACJ,A7FAAA,Q6FA5C,A7FAA,E6FAsD,A7FAA;AoIG5D,ADAA,AjCAA,ALFQE,AhHCR,AgLCA,AnFAA,A2BAA,ArGFQA,A2EER,AsFAA,QpEFQA,A7FAAA,M6FAM,A7FAA,C6FACxB,A7FAAA,O6FAP,A7FAA;AoIGR,ADAA,AjCAA,ALFO,AhHCP,AgLCA,AnFAA,A2BAA,ArGFO,A2EEP,AsFAA;A7BCA,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA;A7BCA,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,IpEFI,A7FAA,O6FAO8H,A7FAAA,M6FAP,A7FAA,K6FAkB,A7FAA,U6FAtB,A7FAA,E6FAkC,A7FAA;AoIGlC,ADAA,AjCAA,ALFEwC,AhHCF,AgLCA,AnFAA,A2BAA,ArGFEA,A2EEF,AsFAA,EpEFEA,A7FAAA,Q6FAQ,A7FAA,C6FAC5E,A7FAAA,I6FAT,A7FAA,G6FAgB,A7FAA,U6FAU4M,A7FAAA,Q6FAV,A7FAA,E6FAoBlH,A7FAAA,I6FApB,A7FAA,E6FA0B,A7FAA;AoIG5C,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,QpEFQ1F,A7FAAA,I6FAI,A7FAA,K6FAK9N,A7FAAA,S6FAb,A7FAA,E6FAwB,A7FAA;AoIG5B,ADAA,AjCAA,ALFM8N,AhHCN,AgLCA,AnFAA,A2BAA,ArGFMA,A2EEN,AsFAA,MpEFMA,A7FAAA,I6FAI,A7FAA,G6FAGrJ,A7FAAA,O6FAO,A7FAA,C6FAC,A7FAA,yB6FAD,A7FAA,C6FAd,A7FAA;AoIGN,ADAA,AjCAA,ALFK,AhHCL,AgLCA,AnFAA,A2BAA,ArGFK,A2EEL,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,WpEFWqJ,A7FAAA,I6FAI,A7FAA,C6FAC4E,A7FAAA,Q6FAD,A7FAA,E6FAWgI,A7FAAA,Q6FAX,A7FAA,E6FAqBlH,A7FAAA,I6FArB,A7FAA,C6FAX,A7FAA;AoIGJ,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA,GpERE,A7FAA;AoISF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFA,AhHCA,AgLCA,AnFAA,A2BAA,ArGFA,A2EEA,AsFAA,SpEFS3H,A7FAAA,O6FAT,A7FAA,C6FAiB8O,A7FAAA,E6FAjB,A7FAA,E6FAqBC,A7FAAA,C6FArB,A7FAA,E6FAwB,A7FAA;AoIGxB,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,OpEFO,A7FAA,I6FAI9d,A7FAAA,C6FAC,A7FAA,G6FAG,A7FAA,C6FAR,A7FAA,E6FAWgV,A7FAAA,C6FAC,A7FAA,G6FAG6I,A7FAAA,E6FAE,A7FAA,C6FACve,A7FAAA,M6FAvB,A7FAA,E6FA+BU,A7FAAA,C6FAC,A7FAA,G6FAGgV,A7FAAA,C6FAnC,A7FAA,E6FAsChV,A7FAAA,C6FAC,A7FAA,E6FAvC,A7FAA,E6FA2C,A7FAA;AoIG7C,ADAA,AjCAA,ALFI,AhHCJ,AgLCA,AnFAA,A2BAA,ArGFI,A2EEJ,AsFAA,QpEFQ6d,A7FAAA,E6FAE,A7FAA,C6FAC7d,A7FAAA,C6FAD,A7FAA,C6FAF,A7FAA,K6FAU8d,A7FAAA,C6FAd,A7FAA,E6FAiB,A7FAA,O6FAO9d,A7FAAA,C6FAP,A7FAA;AoIGrB,ADAA,AjCAA,ALFG,AhHCH,AgLCA,AnFAA,A2BAA,ArGFG,A2EEH,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ALFE,AhHCF,AgLCA,AnFAA,A2BAA,ArGFE,A2EEF,AsFAA,SpEFS,A7FAA,C6FAC,A7FAA,C6FAR,A7FAA;AoIGF,ADAA,AjCAA,ALFC,AhHCD,AgLCA,AnFAA,A2BAA,ArGFC,A2EED,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,ArHDA,AgLCA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A7BCA,ADAA,AjCAA,A2DAA,AnFAA,A2BAA,A1BAA,AsFAA;A9BCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"comic.5fbb8f27.js","sourceRoot":"../src","sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function eventListener() {\n      if (errorListener !== undefined) {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n    var errorListener;\n\n    // Adding an error listener is not optional because\n    // if an error is thrown on an event emitter we cannot\n    // guarantee that the actual event we are waiting will\n    // be fired. The result could be a silent way to create\n    // memory or file descriptor leaks, which is something\n    // we should avoid.\n    if (name !== 'error') {\n      errorListener = function errorListener(err) {\n        emitter.removeListener(name, eventListener);\n        reject(err);\n      };\n\n      emitter.once('error', errorListener);\n    }\n\n    emitter.once(name, eventListener);\n  });\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","'use strict'\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('readable-stream').Transform\nvar inherits = require('inherits')\n\nfunction throwIfNotStringOrBuffer (val, prefix) {\n  if (!Buffer.isBuffer(val) && typeof val !== 'string') {\n    throw new TypeError(prefix + ' must be a string or a buffer')\n  }\n}\n\nfunction HashBase (blockSize) {\n  Transform.call(this)\n\n  this._block = Buffer.allocUnsafe(blockSize)\n  this._blockSize = blockSize\n  this._blockOffset = 0\n  this._length = [0, 0, 0, 0]\n\n  this._finalized = false\n}\n\ninherits(HashBase, Transform)\n\nHashBase.prototype._transform = function (chunk, encoding, callback) {\n  var error = null\n  try {\n    this.update(chunk, encoding)\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype._flush = function (callback) {\n  var error = null\n  try {\n    this.push(this.digest())\n  } catch (err) {\n    error = err\n  }\n\n  callback(error)\n}\n\nHashBase.prototype.update = function (data, encoding) {\n  throwIfNotStringOrBuffer(data, 'Data')\n  if (this._finalized) throw new Error('Digest already called')\n  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n  // consume data\n  var block = this._block\n  var offset = 0\n  while (this._blockOffset + data.length - offset >= this._blockSize) {\n    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]\n    this._update()\n    this._blockOffset = 0\n  }\n  while (offset < data.length) block[this._blockOffset++] = data[offset++]\n\n  // update length\n  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {\n    this._length[j] += carry\n    carry = (this._length[j] / 0x0100000000) | 0\n    if (carry > 0) this._length[j] -= 0x0100000000 * carry\n  }\n\n  return this\n}\n\nHashBase.prototype._update = function () {\n  throw new Error('_update is not implemented')\n}\n\nHashBase.prototype.digest = function (encoding) {\n  if (this._finalized) throw new Error('Digest already called')\n  this._finalized = true\n\n  var digest = this._digest()\n  if (encoding !== undefined) digest = digest.toString(encoding)\n\n  // reset state\n  this._block.fill(0)\n  this._blockOffset = 0\n  for (var i = 0; i < 4; ++i) this._length[i] = 0\n\n  return digest\n}\n\nHashBase.prototype._digest = function () {\n  throw new Error('_digest is not implemented')\n}\n\nmodule.exports = HashBase\n","'use strict'\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\nvar Buffer = require('safe-buffer').Buffer\n\nvar ARRAY16 = new Array(16)\n\nfunction MD5 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n}\n\ninherits(MD5, HashBase)\n\nMD5.prototype._update = function () {\n  var M = ARRAY16\n  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)\n\n  var a = this._a\n  var b = this._b\n  var c = this._c\n  var d = this._d\n\n  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)\n  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)\n  c = fnF(c, d, a, b, M[2], 0x242070db, 17)\n  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)\n  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)\n  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)\n  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)\n  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)\n  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)\n  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)\n  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)\n  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)\n  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)\n  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)\n  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)\n  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)\n\n  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)\n  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)\n  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)\n  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)\n  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)\n  d = fnG(d, a, b, c, M[10], 0x02441453, 9)\n  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)\n  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)\n  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)\n  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)\n  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)\n  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)\n  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)\n  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)\n  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)\n  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)\n\n  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)\n  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)\n  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)\n  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)\n  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)\n  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)\n  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)\n  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)\n  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)\n  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)\n  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)\n  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)\n  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)\n  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)\n  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)\n  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)\n\n  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)\n  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)\n  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)\n  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)\n  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)\n  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)\n  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)\n  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)\n  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)\n  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)\n  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)\n  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)\n  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)\n  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)\n  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)\n  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)\n\n  this._a = (this._a + a) | 0\n  this._b = (this._b + b) | 0\n  this._c = (this._c + c) | 0\n  this._d = (this._d + d) | 0\n}\n\nMD5.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.allocUnsafe(16)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fnF (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnG (a, b, c, d, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnH (a, b, c, d, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0\n}\n\nfunction fnI (a, b, c, d, m, k, s) {\n  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0\n}\n\nmodule.exports = MD5\n","'use strict'\nvar Buffer = require('buffer').Buffer\nvar inherits = require('inherits')\nvar HashBase = require('hash-base')\n\nvar ARRAY16 = new Array(16)\n\nvar zl = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n]\n\nvar zr = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n]\n\nvar sl = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n]\n\nvar sr = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n]\n\nvar hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]\nvar hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]\n\nfunction RIPEMD160 () {\n  HashBase.call(this, 64)\n\n  // state\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n}\n\ninherits(RIPEMD160, HashBase)\n\nRIPEMD160.prototype._update = function () {\n  var words = ARRAY16\n  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)\n\n  var al = this._a | 0\n  var bl = this._b | 0\n  var cl = this._c | 0\n  var dl = this._d | 0\n  var el = this._e | 0\n\n  var ar = this._a | 0\n  var br = this._b | 0\n  var cr = this._c | 0\n  var dr = this._d | 0\n  var er = this._e | 0\n\n  // computation\n  for (var i = 0; i < 80; i += 1) {\n    var tl\n    var tr\n    if (i < 16) {\n      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])\n      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])\n    } else if (i < 32) {\n      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])\n      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])\n    } else if (i < 48) {\n      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])\n      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])\n    } else if (i < 64) {\n      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])\n      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])\n    } else { // if (i<80) {\n      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])\n      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])\n    }\n\n    al = el\n    el = dl\n    dl = rotl(cl, 10)\n    cl = bl\n    bl = tl\n\n    ar = er\n    er = dr\n    dr = rotl(cr, 10)\n    cr = br\n    br = tr\n  }\n\n  // update state\n  var t = (this._b + cl + dr) | 0\n  this._b = (this._c + dl + er) | 0\n  this._c = (this._d + el + ar) | 0\n  this._d = (this._e + al + br) | 0\n  this._e = (this._a + bl + cr) | 0\n  this._a = t\n}\n\nRIPEMD160.prototype._digest = function () {\n  // create padding and handle blocks\n  this._block[this._blockOffset++] = 0x80\n  if (this._blockOffset > 56) {\n    this._block.fill(0, this._blockOffset, 64)\n    this._update()\n    this._blockOffset = 0\n  }\n\n  this._block.fill(0, this._blockOffset, 56)\n  this._block.writeUInt32LE(this._length[0], 56)\n  this._block.writeUInt32LE(this._length[1], 60)\n  this._update()\n\n  // produce result\n  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)\n  buffer.writeInt32LE(this._a, 0)\n  buffer.writeInt32LE(this._b, 4)\n  buffer.writeInt32LE(this._c, 8)\n  buffer.writeInt32LE(this._d, 12)\n  buffer.writeInt32LE(this._e, 16)\n  return buffer\n}\n\nfunction rotl (x, n) {\n  return (x << n) | (x >>> (32 - n))\n}\n\nfunction fn1 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn2 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn3 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn4 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0\n}\n\nfunction fn5 (a, b, c, d, e, m, k, s) {\n  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0\n}\n\nmodule.exports = RIPEMD160\n","var Buffer = require('safe-buffer').Buffer\n\n// prototype class for hash functions\nfunction Hash (blockSize, finalSize) {\n  this._block = Buffer.alloc(blockSize)\n  this._finalSize = finalSize\n  this._blockSize = blockSize\n  this._len = 0\n}\n\nHash.prototype.update = function (data, enc) {\n  if (typeof data === 'string') {\n    enc = enc || 'utf8'\n    data = Buffer.from(data, enc)\n  }\n\n  var block = this._block\n  var blockSize = this._blockSize\n  var length = data.length\n  var accum = this._len\n\n  for (var offset = 0; offset < length;) {\n    var assigned = accum % blockSize\n    var remainder = Math.min(length - offset, blockSize - assigned)\n\n    for (var i = 0; i < remainder; i++) {\n      block[assigned + i] = data[offset + i]\n    }\n\n    accum += remainder\n    offset += remainder\n\n    if ((accum % blockSize) === 0) {\n      this._update(block)\n    }\n  }\n\n  this._len += length\n  return this\n}\n\nHash.prototype.digest = function (enc) {\n  var rem = this._len % this._blockSize\n\n  this._block[rem] = 0x80\n\n  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest\n  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize\n  this._block.fill(0, rem + 1)\n\n  if (rem >= this._finalSize) {\n    this._update(this._block)\n    this._block.fill(0)\n  }\n\n  var bits = this._len * 8\n\n  // uint32\n  if (bits <= 0xffffffff) {\n    this._block.writeUInt32BE(bits, this._blockSize - 4)\n\n  // uint64\n  } else {\n    var lowBits = (bits & 0xffffffff) >>> 0\n    var highBits = (bits - lowBits) / 0x100000000\n\n    this._block.writeUInt32BE(highBits, this._blockSize - 8)\n    this._block.writeUInt32BE(lowBits, this._blockSize - 4)\n  }\n\n  this._update(this._block)\n  var hash = this._hash()\n\n  return enc ? hash.toString(enc) : hash\n}\n\nHash.prototype._update = function () {\n  throw new Error('_update must be implemented by subclass')\n}\n\nmodule.exports = Hash\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined\n * in FIPS PUB 180-1\n * This source code is derived from sha1.js of the same repository.\n * The difference between SHA-0 and SHA-1 is just a bitwise rotate left\n * operation was added.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha, Hash)\n\nSha.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha\n","/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0\n]\n\nvar W = new Array(80)\n\nfunction Sha1 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha1, Hash)\n\nSha1.prototype.init = function () {\n  this._a = 0x67452301\n  this._b = 0xefcdab89\n  this._c = 0x98badcfe\n  this._d = 0x10325476\n  this._e = 0xc3d2e1f0\n\n  return this\n}\n\nfunction rotl1 (num) {\n  return (num << 1) | (num >>> 31)\n}\n\nfunction rotl5 (num) {\n  return (num << 5) | (num >>> 27)\n}\n\nfunction rotl30 (num) {\n  return (num << 30) | (num >>> 2)\n}\n\nfunction ft (s, b, c, d) {\n  if (s === 0) return (b & c) | ((~b) & d)\n  if (s === 2) return (b & c) | (b & d) | (c & d)\n  return b ^ c ^ d\n}\n\nSha1.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])\n\n  for (var j = 0; j < 80; ++j) {\n    var s = ~~(j / 20)\n    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0\n\n    e = d\n    d = c\n    c = rotl30(b)\n    b = a\n    a = t\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n}\n\nSha1.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(20)\n\n  H.writeInt32BE(this._a | 0, 0)\n  H.writeInt32BE(this._b | 0, 4)\n  H.writeInt32BE(this._c | 0, 8)\n  H.writeInt32BE(this._d | 0, 12)\n  H.writeInt32BE(this._e | 0, 16)\n\n  return H\n}\n\nmodule.exports = Sha1\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,\n  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,\n  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,\n  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,\n  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,\n  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,\n  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,\n  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,\n  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,\n  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,\n  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,\n  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,\n  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,\n  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,\n  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,\n  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2\n]\n\nvar W = new Array(64)\n\nfunction Sha256 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha256, Hash)\n\nSha256.prototype.init = function () {\n  this._a = 0x6a09e667\n  this._b = 0xbb67ae85\n  this._c = 0x3c6ef372\n  this._d = 0xa54ff53a\n  this._e = 0x510e527f\n  this._f = 0x9b05688c\n  this._g = 0x1f83d9ab\n  this._h = 0x5be0cd19\n\n  return this\n}\n\nfunction ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x) {\n  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)\n}\n\nfunction sigma1 (x) {\n  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)\n}\n\nfunction gamma0 (x) {\n  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)\n}\n\nfunction gamma1 (x) {\n  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)\n}\n\nSha256.prototype._update = function (M) {\n  var W = this._w\n\n  var a = this._a | 0\n  var b = this._b | 0\n  var c = this._c | 0\n  var d = this._d | 0\n  var e = this._e | 0\n  var f = this._f | 0\n  var g = this._g | 0\n  var h = this._h | 0\n\n  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)\n  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0\n\n  for (var j = 0; j < 64; ++j) {\n    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0\n    var T2 = (sigma0(a) + maj(a, b, c)) | 0\n\n    h = g\n    g = f\n    f = e\n    e = (d + T1) | 0\n    d = c\n    c = b\n    b = a\n    a = (T1 + T2) | 0\n  }\n\n  this._a = (a + this._a) | 0\n  this._b = (b + this._b) | 0\n  this._c = (c + this._c) | 0\n  this._d = (d + this._d) | 0\n  this._e = (e + this._e) | 0\n  this._f = (f + this._f) | 0\n  this._g = (g + this._g) | 0\n  this._h = (h + this._h) | 0\n}\n\nSha256.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(32)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n  H.writeInt32BE(this._h, 28)\n\n  return H\n}\n\nmodule.exports = Sha256\n","/**\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined\n * in FIPS 180-2\n * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n *\n */\n\nvar inherits = require('inherits')\nvar Sha256 = require('./sha256')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(64)\n\nfunction Sha224 () {\n  this.init()\n\n  this._w = W // new Array(64)\n\n  Hash.call(this, 64, 56)\n}\n\ninherits(Sha224, Sha256)\n\nSha224.prototype.init = function () {\n  this._a = 0xc1059ed8\n  this._b = 0x367cd507\n  this._c = 0x3070dd17\n  this._d = 0xf70e5939\n  this._e = 0xffc00b31\n  this._f = 0x68581511\n  this._g = 0x64f98fa7\n  this._h = 0xbefa4fa4\n\n  return this\n}\n\nSha224.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(28)\n\n  H.writeInt32BE(this._a, 0)\n  H.writeInt32BE(this._b, 4)\n  H.writeInt32BE(this._c, 8)\n  H.writeInt32BE(this._d, 12)\n  H.writeInt32BE(this._e, 16)\n  H.writeInt32BE(this._f, 20)\n  H.writeInt32BE(this._g, 24)\n\n  return H\n}\n\nmodule.exports = Sha224\n","var inherits = require('inherits')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n]\n\nvar W = new Array(160)\n\nfunction Sha512 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha512, Hash)\n\nSha512.prototype.init = function () {\n  this._ah = 0x6a09e667\n  this._bh = 0xbb67ae85\n  this._ch = 0x3c6ef372\n  this._dh = 0xa54ff53a\n  this._eh = 0x510e527f\n  this._fh = 0x9b05688c\n  this._gh = 0x1f83d9ab\n  this._hh = 0x5be0cd19\n\n  this._al = 0xf3bcc908\n  this._bl = 0x84caa73b\n  this._cl = 0xfe94f82b\n  this._dl = 0x5f1d36f1\n  this._el = 0xade682d1\n  this._fl = 0x2b3e6c1f\n  this._gl = 0xfb41bd6b\n  this._hl = 0x137e2179\n\n  return this\n}\n\nfunction Ch (x, y, z) {\n  return z ^ (x & (y ^ z))\n}\n\nfunction maj (x, y, z) {\n  return (x & y) | (z & (x | y))\n}\n\nfunction sigma0 (x, xl) {\n  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)\n}\n\nfunction sigma1 (x, xl) {\n  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)\n}\n\nfunction Gamma0 (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)\n}\n\nfunction Gamma0l (x, xl) {\n  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)\n}\n\nfunction Gamma1 (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)\n}\n\nfunction Gamma1l (x, xl) {\n  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)\n}\n\nfunction getCarry (a, b) {\n  return (a >>> 0) < (b >>> 0) ? 1 : 0\n}\n\nSha512.prototype._update = function (M) {\n  var W = this._w\n\n  var ah = this._ah | 0\n  var bh = this._bh | 0\n  var ch = this._ch | 0\n  var dh = this._dh | 0\n  var eh = this._eh | 0\n  var fh = this._fh | 0\n  var gh = this._gh | 0\n  var hh = this._hh | 0\n\n  var al = this._al | 0\n  var bl = this._bl | 0\n  var cl = this._cl | 0\n  var dl = this._dl | 0\n  var el = this._el | 0\n  var fl = this._fl | 0\n  var gl = this._gl | 0\n  var hl = this._hl | 0\n\n  for (var i = 0; i < 32; i += 2) {\n    W[i] = M.readInt32BE(i * 4)\n    W[i + 1] = M.readInt32BE(i * 4 + 4)\n  }\n  for (; i < 160; i += 2) {\n    var xh = W[i - 15 * 2]\n    var xl = W[i - 15 * 2 + 1]\n    var gamma0 = Gamma0(xh, xl)\n    var gamma0l = Gamma0l(xl, xh)\n\n    xh = W[i - 2 * 2]\n    xl = W[i - 2 * 2 + 1]\n    var gamma1 = Gamma1(xh, xl)\n    var gamma1l = Gamma1l(xl, xh)\n\n    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n    var Wi7h = W[i - 7 * 2]\n    var Wi7l = W[i - 7 * 2 + 1]\n\n    var Wi16h = W[i - 16 * 2]\n    var Wi16l = W[i - 16 * 2 + 1]\n\n    var Wil = (gamma0l + Wi7l) | 0\n    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0\n    Wil = (Wil + gamma1l) | 0\n    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0\n    Wil = (Wil + Wi16l) | 0\n    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0\n\n    W[i] = Wih\n    W[i + 1] = Wil\n  }\n\n  for (var j = 0; j < 160; j += 2) {\n    Wih = W[j]\n    Wil = W[j + 1]\n\n    var majh = maj(ah, bh, ch)\n    var majl = maj(al, bl, cl)\n\n    var sigma0h = sigma0(ah, al)\n    var sigma0l = sigma0(al, ah)\n    var sigma1h = sigma1(eh, el)\n    var sigma1l = sigma1(el, eh)\n\n    // t1 = h + sigma1 + ch + K[j] + W[j]\n    var Kih = K[j]\n    var Kil = K[j + 1]\n\n    var chh = Ch(eh, fh, gh)\n    var chl = Ch(el, fl, gl)\n\n    var t1l = (hl + sigma1l) | 0\n    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0\n    t1l = (t1l + chl) | 0\n    t1h = (t1h + chh + getCarry(t1l, chl)) | 0\n    t1l = (t1l + Kil) | 0\n    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0\n    t1l = (t1l + Wil) | 0\n    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0\n\n    // t2 = sigma0 + maj\n    var t2l = (sigma0l + majl) | 0\n    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0\n\n    hh = gh\n    hl = gl\n    gh = fh\n    gl = fl\n    fh = eh\n    fl = el\n    el = (dl + t1l) | 0\n    eh = (dh + t1h + getCarry(el, dl)) | 0\n    dh = ch\n    dl = cl\n    ch = bh\n    cl = bl\n    bh = ah\n    bl = al\n    al = (t1l + t2l) | 0\n    ah = (t1h + t2h + getCarry(al, t1l)) | 0\n  }\n\n  this._al = (this._al + al) | 0\n  this._bl = (this._bl + bl) | 0\n  this._cl = (this._cl + cl) | 0\n  this._dl = (this._dl + dl) | 0\n  this._el = (this._el + el) | 0\n  this._fl = (this._fl + fl) | 0\n  this._gl = (this._gl + gl) | 0\n  this._hl = (this._hl + hl) | 0\n\n  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0\n  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0\n  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0\n  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0\n  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0\n  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0\n  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0\n  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0\n}\n\nSha512.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(64)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n  writeInt64BE(this._gh, this._gl, 48)\n  writeInt64BE(this._hh, this._hl, 56)\n\n  return H\n}\n\nmodule.exports = Sha512\n","var inherits = require('inherits')\nvar SHA512 = require('./sha512')\nvar Hash = require('./hash')\nvar Buffer = require('safe-buffer').Buffer\n\nvar W = new Array(160)\n\nfunction Sha384 () {\n  this.init()\n  this._w = W\n\n  Hash.call(this, 128, 112)\n}\n\ninherits(Sha384, SHA512)\n\nSha384.prototype.init = function () {\n  this._ah = 0xcbbb9d5d\n  this._bh = 0x629a292a\n  this._ch = 0x9159015a\n  this._dh = 0x152fecd8\n  this._eh = 0x67332667\n  this._fh = 0x8eb44a87\n  this._gh = 0xdb0c2e0d\n  this._hh = 0x47b5481d\n\n  this._al = 0xc1059ed8\n  this._bl = 0x367cd507\n  this._cl = 0x3070dd17\n  this._dl = 0xf70e5939\n  this._el = 0xffc00b31\n  this._fl = 0x68581511\n  this._gl = 0x64f98fa7\n  this._hl = 0xbefa4fa4\n\n  return this\n}\n\nSha384.prototype._hash = function () {\n  var H = Buffer.allocUnsafe(48)\n\n  function writeInt64BE (h, l, offset) {\n    H.writeInt32BE(h, offset)\n    H.writeInt32BE(l, offset + 4)\n  }\n\n  writeInt64BE(this._ah, this._al, 0)\n  writeInt64BE(this._bh, this._bl, 8)\n  writeInt64BE(this._ch, this._cl, 16)\n  writeInt64BE(this._dh, this._dl, 24)\n  writeInt64BE(this._eh, this._el, 32)\n  writeInt64BE(this._fh, this._fl, 40)\n\n  return H\n}\n\nmodule.exports = Sha384\n","var exports = module.exports = function SHA (algorithm) {\n  algorithm = algorithm.toLowerCase()\n\n  var Algorithm = exports[algorithm]\n  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')\n\n  return new Algorithm()\n}\n\nexports.sha = require('./sha')\nexports.sha1 = require('./sha1')\nexports.sha224 = require('./sha224')\nexports.sha256 = require('./sha256')\nexports.sha384 = require('./sha384')\nexports.sha512 = require('./sha512')\n","'use strict';\n\nif (typeof process === 'undefined' ||\n    !process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","module.exports = require('events').EventEmitter;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = Object.create(require('core-util-is'));\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","module.exports = require('./lib/_stream_writable.js');\n","module.exports = require('./lib/_stream_duplex.js');\n","module.exports = require('./readable').Transform\n","module.exports = require('./readable').PassThrough\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar Base = require('cipher-base')\n\nvar ZEROS = Buffer.alloc(128)\nvar blocksize = 64\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  this._alg = alg\n  this._key = key\n\n  if (key.length > blocksize) {\n    key = alg(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  this._hash = [ipad]\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.push(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._alg(Buffer.concat(this._hash))\n  return this._alg(Buffer.concat([this._opad, h]))\n}\nmodule.exports = Hmac\n","var MD5 = require('md5.js')\n\nmodule.exports = function (buffer) {\n  return new MD5().update(buffer).digest()\n}\n","'use strict'\nvar inherits = require('inherits')\nvar Legacy = require('./legacy')\nvar Base = require('cipher-base')\nvar Buffer = require('safe-buffer').Buffer\nvar md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\n\nvar sha = require('sha.js')\n\nvar ZEROS = Buffer.alloc(128)\n\nfunction Hmac (alg, key) {\n  Base.call(this, 'digest')\n  if (typeof key === 'string') {\n    key = Buffer.from(key)\n  }\n\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  this._alg = alg\n  this._key = key\n  if (key.length > blocksize) {\n    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n    key = hash.update(key).digest()\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)\n  var opad = this._opad = Buffer.allocUnsafe(blocksize)\n\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)\n  this._hash.update(ipad)\n}\n\ninherits(Hmac, Base)\n\nHmac.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHmac.prototype._final = function () {\n  var h = this._hash.digest()\n  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)\n  return hash.update(this._opad).update(h).digest()\n}\n\nmodule.exports = function createHmac (alg, key) {\n  alg = alg.toLowerCase()\n  if (alg === 'rmd160' || alg === 'ripemd160') {\n    return new Hmac('rmd160', key)\n  }\n  if (alg === 'md5') {\n    return new Legacy(md5, key)\n  }\n  return new Hmac(alg, key)\n}\n","module.exports = {\n  \"sha224WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"RSA-SHA224\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"302d300d06096086480165030402040500041c\"\n  },\n  \"sha256WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"RSA-SHA256\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"3031300d060960864801650304020105000420\"\n  },\n  \"sha384WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"RSA-SHA384\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"3041300d060960864801650304020205000430\"\n  },\n  \"sha512WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA512\": {\n    \"sign\": \"ecdsa/rsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"3051300d060960864801650304020305000440\"\n  },\n  \"RSA-SHA1\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"3021300906052b0e03021a05000414\"\n  },\n  \"ecdsa-with-SHA1\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"sha256\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"sha224\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"sha384\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"sha512\": {\n    \"sign\": \"ecdsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA1\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha1\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA224\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha224\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA256\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha256\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA384\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha384\",\n    \"id\": \"\"\n  },\n  \"DSA-WITH-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-SHA512\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"sha512\",\n    \"id\": \"\"\n  },\n  \"DSA-RIPEMD160\": {\n    \"sign\": \"dsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"\"\n  },\n  \"ripemd160WithRSA\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"RSA-RIPEMD160\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"rmd160\",\n    \"id\": \"3021300906052b2403020105000414\"\n  },\n  \"md5WithRSAEncryption\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  },\n  \"RSA-MD5\": {\n    \"sign\": \"rsa\",\n    \"hash\": \"md5\",\n    \"id\": \"3020300c06082a864886f70d020505000410\"\n  }\n}\n;","module.exports = require('./browser/algorithms.json')\n","var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs\n\nmodule.exports = function (iterations, keylen) {\n  if (typeof iterations !== 'number') {\n    throw new TypeError('Iterations not a number')\n  }\n\n  if (iterations < 0) {\n    throw new TypeError('Bad iterations')\n  }\n\n  if (typeof keylen !== 'number') {\n    throw new TypeError('Key length not a number')\n  }\n\n  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */\n    throw new TypeError('Bad key length')\n  }\n}\n","var defaultEncoding\n/* istanbul ignore next */\nif (process.browser) {\n  defaultEncoding = 'utf-8'\n} else if (process.version) {\n  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)\n\n  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'\n} else {\n  defaultEncoding = 'utf-8'\n}\nmodule.exports = defaultEncoding\n","var Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (thing, encoding, name) {\n  if (Buffer.isBuffer(thing)) {\n    return thing\n  } else if (typeof thing === 'string') {\n    return Buffer.from(thing, encoding)\n  } else if (ArrayBuffer.isView(thing)) {\n    return Buffer.from(thing.buffer)\n  } else {\n    throw new TypeError(name + ' must be a string, a Buffer, a typed array or a DataView')\n  }\n}\n","var md5 = require('create-hash/md5')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar toBuffer = require('./to-buffer')\n\nvar ZEROS = Buffer.alloc(128)\nvar sizes = {\n  md5: 16,\n  sha1: 20,\n  sha224: 28,\n  sha256: 32,\n  sha384: 48,\n  sha512: 64,\n  rmd160: 20,\n  ripemd160: 20\n}\n\nfunction Hmac (alg, key, saltLen) {\n  var hash = getDigest(alg)\n  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64\n\n  if (key.length > blocksize) {\n    key = hash(key)\n  } else if (key.length < blocksize) {\n    key = Buffer.concat([key, ZEROS], blocksize)\n  }\n\n  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])\n  for (var i = 0; i < blocksize; i++) {\n    ipad[i] = key[i] ^ 0x36\n    opad[i] = key[i] ^ 0x5C\n  }\n\n  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)\n  ipad.copy(ipad1, 0, 0, blocksize)\n  this.ipad1 = ipad1\n  this.ipad2 = ipad\n  this.opad = opad\n  this.alg = alg\n  this.blocksize = blocksize\n  this.hash = hash\n  this.size = sizes[alg]\n}\n\nHmac.prototype.run = function (data, ipad) {\n  data.copy(ipad, this.blocksize)\n  var h = this.hash(ipad)\n  h.copy(this.opad, this.blocksize)\n  return this.hash(this.opad)\n}\n\nfunction getDigest (alg) {\n  function shaFunc (data) {\n    return sha(alg).update(data).digest()\n  }\n  function rmd160Func (data) {\n    return new RIPEMD160().update(data).digest()\n  }\n\n  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160Func\n  if (alg === 'md5') return md5\n  return shaFunc\n}\n\nfunction pbkdf2 (password, salt, iterations, keylen, digest) {\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n\n  digest = digest || 'sha1'\n\n  var hmac = new Hmac(digest, password, salt.length)\n\n  var DK = Buffer.allocUnsafe(keylen)\n  var block1 = Buffer.allocUnsafe(salt.length + 4)\n  salt.copy(block1, 0, 0, salt.length)\n\n  var destPos = 0\n  var hLen = sizes[digest]\n  var l = Math.ceil(keylen / hLen)\n\n  for (var i = 1; i <= l; i++) {\n    block1.writeUInt32BE(i, salt.length)\n\n    var T = hmac.run(block1, hmac.ipad1)\n    var U = T\n\n    for (var j = 1; j < iterations; j++) {\n      U = hmac.run(U, hmac.ipad2)\n      for (var k = 0; k < hLen; k++) T[k] ^= U[k]\n    }\n\n    T.copy(DK, destPos)\n    destPos += hLen\n  }\n\n  return DK\n}\n\nmodule.exports = pbkdf2\n","var Buffer = require('safe-buffer').Buffer\n\nvar checkParameters = require('./precondition')\nvar defaultEncoding = require('./default-encoding')\nvar sync = require('./sync')\nvar toBuffer = require('./to-buffer')\n\nvar ZERO_BUF\nvar subtle = global.crypto && global.crypto.subtle\nvar toBrowser = {\n  sha: 'SHA-1',\n  'sha-1': 'SHA-1',\n  sha1: 'SHA-1',\n  sha256: 'SHA-256',\n  'sha-256': 'SHA-256',\n  sha384: 'SHA-384',\n  'sha-384': 'SHA-384',\n  'sha-512': 'SHA-512',\n  sha512: 'SHA-512'\n}\nvar checks = []\nfunction checkNative (algo) {\n  if (global.process && !global.process.browser) {\n    return Promise.resolve(false)\n  }\n  if (!subtle || !subtle.importKey || !subtle.deriveBits) {\n    return Promise.resolve(false)\n  }\n  if (checks[algo] !== undefined) {\n    return checks[algo]\n  }\n  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)\n  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)\n    .then(function () {\n      return true\n    }).catch(function () {\n      return false\n    })\n  checks[algo] = prom\n  return prom\n}\n\nfunction browserPbkdf2 (password, salt, iterations, length, algo) {\n  return subtle.importKey(\n    'raw', password, { name: 'PBKDF2' }, false, ['deriveBits']\n  ).then(function (key) {\n    return subtle.deriveBits({\n      name: 'PBKDF2',\n      salt: salt,\n      iterations: iterations,\n      hash: {\n        name: algo\n      }\n    }, key, length << 3)\n  }).then(function (res) {\n    return Buffer.from(res)\n  })\n}\n\nfunction resolvePromise (promise, callback) {\n  promise.then(function (out) {\n    process.nextTick(function () {\n      callback(null, out)\n    })\n  }, function (e) {\n    process.nextTick(function () {\n      callback(e)\n    })\n  })\n}\nmodule.exports = function (password, salt, iterations, keylen, digest, callback) {\n  if (typeof digest === 'function') {\n    callback = digest\n    digest = undefined\n  }\n\n  digest = digest || 'sha1'\n  var algo = toBrowser[digest.toLowerCase()]\n\n  if (!algo || typeof global.Promise !== 'function') {\n    return process.nextTick(function () {\n      var out\n      try {\n        out = sync(password, salt, iterations, keylen, digest)\n      } catch (e) {\n        return callback(e)\n      }\n      callback(null, out)\n    })\n  }\n\n  checkParameters(iterations, keylen)\n  password = toBuffer(password, defaultEncoding, 'Password')\n  salt = toBuffer(salt, defaultEncoding, 'Salt')\n  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')\n\n  resolvePromise(checkNative(algo).then(function (resp) {\n    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)\n\n    return sync(password, salt, iterations, keylen, digest)\n  }), callback)\n}\n","exports.pbkdf2 = require('./lib/async')\nexports.pbkdf2Sync = require('./lib/sync')\n","'use strict';\n\nexports.readUInt32BE = function readUInt32BE(bytes, off) {\n  var res =  (bytes[0 + off] << 24) |\n             (bytes[1 + off] << 16) |\n             (bytes[2 + off] << 8) |\n             bytes[3 + off];\n  return res >>> 0;\n};\n\nexports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {\n  bytes[0 + off] = value >>> 24;\n  bytes[1 + off] = (value >>> 16) & 0xff;\n  bytes[2 + off] = (value >>> 8) & 0xff;\n  bytes[3 + off] = value & 0xff;\n};\n\nexports.ip = function ip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  for (var i = 6; i >= 0; i -= 2) {\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n    }\n    for (var j = 1; j <= 25; j += 8) {\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.rip = function rip(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  for (var i = 0; i < 4; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outL <<= 1;\n      outL |= (inR >>> (j + i)) & 1;\n      outL <<= 1;\n      outL |= (inL >>> (j + i)) & 1;\n    }\n  }\n  for (var i = 4; i < 8; i++) {\n    for (var j = 24; j >= 0; j -= 8) {\n      outR <<= 1;\n      outR |= (inR >>> (j + i)) & 1;\n      outR <<= 1;\n      outR |= (inL >>> (j + i)) & 1;\n    }\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.pc1 = function pc1(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  // 7, 15, 23, 31, 39, 47, 55, 63\n  // 6, 14, 22, 30, 39, 47, 55, 63\n  // 5, 13, 21, 29, 39, 47, 55, 63\n  // 4, 12, 20, 28\n  for (var i = 7; i >= 5; i--) {\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outL <<= 1;\n      outL |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outL <<= 1;\n    outL |= (inR >> (j + i)) & 1;\n  }\n\n  // 1, 9, 17, 25, 33, 41, 49, 57\n  // 2, 10, 18, 26, 34, 42, 50, 58\n  // 3, 11, 19, 27, 35, 43, 51, 59\n  // 36, 44, 52, 60\n  for (var i = 1; i <= 3; i++) {\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inR >> (j + i)) & 1;\n    }\n    for (var j = 0; j <= 24; j += 8) {\n      outR <<= 1;\n      outR |= (inL >> (j + i)) & 1;\n    }\n  }\n  for (var j = 0; j <= 24; j += 8) {\n    outR <<= 1;\n    outR |= (inL >> (j + i)) & 1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.r28shl = function r28shl(num, shift) {\n  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));\n};\n\nvar pc2table = [\n  // inL => outL\n  14, 11, 17, 4, 27, 23, 25, 0,\n  13, 22, 7, 18, 5, 9, 16, 24,\n  2, 20, 12, 21, 1, 8, 15, 26,\n\n  // inR => outR\n  15, 4, 25, 19, 9, 1, 26, 16,\n  5, 11, 23, 8, 12, 7, 17, 0,\n  22, 3, 10, 14, 6, 20, 27, 24\n];\n\nexports.pc2 = function pc2(inL, inR, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  var len = pc2table.length >>> 1;\n  for (var i = 0; i < len; i++) {\n    outL <<= 1;\n    outL |= (inL >>> pc2table[i]) & 0x1;\n  }\n  for (var i = len; i < pc2table.length; i++) {\n    outR <<= 1;\n    outR |= (inR >>> pc2table[i]) & 0x1;\n  }\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nexports.expand = function expand(r, out, off) {\n  var outL = 0;\n  var outR = 0;\n\n  outL = ((r & 1) << 5) | (r >>> 27);\n  for (var i = 23; i >= 15; i -= 4) {\n    outL <<= 6;\n    outL |= (r >>> i) & 0x3f;\n  }\n  for (var i = 11; i >= 3; i -= 4) {\n    outR |= (r >>> i) & 0x3f;\n    outR <<= 6;\n  }\n  outR |= ((r & 0x1f) << 1) | (r >>> 31);\n\n  out[off + 0] = outL >>> 0;\n  out[off + 1] = outR >>> 0;\n};\n\nvar sTable = [\n  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,\n  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,\n  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,\n  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,\n\n  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,\n  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,\n  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,\n  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,\n\n  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,\n  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,\n  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,\n  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,\n\n  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,\n  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,\n  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,\n  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,\n\n  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,\n  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,\n  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,\n  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,\n\n  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,\n  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,\n  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,\n  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,\n\n  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,\n  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,\n  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,\n  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,\n\n  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,\n  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,\n  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,\n  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11\n];\n\nexports.substitute = function substitute(inL, inR) {\n  var out = 0;\n  for (var i = 0; i < 4; i++) {\n    var b = (inL >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  for (var i = 0; i < 4; i++) {\n    var b = (inR >>> (18 - i * 6)) & 0x3f;\n    var sb = sTable[4 * 0x40 + i * 0x40 + b];\n\n    out <<= 4;\n    out |= sb;\n  }\n  return out >>> 0;\n};\n\nvar permuteTable = [\n  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,\n  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7\n];\n\nexports.permute = function permute(num) {\n  var out = 0;\n  for (var i = 0; i < permuteTable.length; i++) {\n    out <<= 1;\n    out |= (num >>> permuteTable[i]) & 0x1;\n  }\n  return out >>> 0;\n};\n\nexports.padSplit = function padSplit(num, size, group) {\n  var str = num.toString(2);\n  while (str.length < size)\n    str = '0' + str;\n\n  var out = [];\n  for (var i = 0; i < size; i += group)\n    out.push(str.slice(i, i + group));\n  return out.join(' ');\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\n\nfunction Cipher(options) {\n  this.options = options;\n\n  this.type = this.options.type;\n  this.blockSize = 8;\n  this._init();\n\n  this.buffer = new Array(this.blockSize);\n  this.bufferOff = 0;\n}\nmodule.exports = Cipher;\n\nCipher.prototype._init = function _init() {\n  // Might be overrided\n};\n\nCipher.prototype.update = function update(data) {\n  if (data.length === 0)\n    return [];\n\n  if (this.type === 'decrypt')\n    return this._updateDecrypt(data);\n  else\n    return this._updateEncrypt(data);\n};\n\nCipher.prototype._buffer = function _buffer(data, off) {\n  // Append data to buffer\n  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);\n  for (var i = 0; i < min; i++)\n    this.buffer[this.bufferOff + i] = data[off + i];\n  this.bufferOff += min;\n\n  // Shift next\n  return min;\n};\n\nCipher.prototype._flushBuffer = function _flushBuffer(out, off) {\n  this._update(this.buffer, 0, out, off);\n  this.bufferOff = 0;\n  return this.blockSize;\n};\n\nCipher.prototype._updateEncrypt = function _updateEncrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;\n  var out = new Array(count * this.blockSize);\n\n  if (this.bufferOff !== 0) {\n    inputOff += this._buffer(data, inputOff);\n\n    if (this.bufferOff === this.buffer.length)\n      outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Write blocks\n  var max = data.length - ((data.length - inputOff) % this.blockSize);\n  for (; inputOff < max; inputOff += this.blockSize) {\n    this._update(data, inputOff, out, outputOff);\n    outputOff += this.blockSize;\n  }\n\n  // Queue rest\n  for (; inputOff < data.length; inputOff++, this.bufferOff++)\n    this.buffer[this.bufferOff] = data[inputOff];\n\n  return out;\n};\n\nCipher.prototype._updateDecrypt = function _updateDecrypt(data) {\n  var inputOff = 0;\n  var outputOff = 0;\n\n  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;\n  var out = new Array(count * this.blockSize);\n\n  // TODO(indutny): optimize it, this is far from optimal\n  for (; count > 0; count--) {\n    inputOff += this._buffer(data, inputOff);\n    outputOff += this._flushBuffer(out, outputOff);\n  }\n\n  // Buffer rest of the input\n  inputOff += this._buffer(data, inputOff);\n\n  return out;\n};\n\nCipher.prototype.final = function final(buffer) {\n  var first;\n  if (buffer)\n    first = this.update(buffer);\n\n  var last;\n  if (this.type === 'encrypt')\n    last = this._finalEncrypt();\n  else\n    last = this._finalDecrypt();\n\n  if (first)\n    return first.concat(last);\n  else\n    return last;\n};\n\nCipher.prototype._pad = function _pad(buffer, off) {\n  if (off === 0)\n    return false;\n\n  while (off < buffer.length)\n    buffer[off++] = 0;\n\n  return true;\n};\n\nCipher.prototype._finalEncrypt = function _finalEncrypt() {\n  if (!this._pad(this.buffer, this.bufferOff))\n    return [];\n\n  var out = new Array(this.blockSize);\n  this._update(this.buffer, 0, out, 0);\n  return out;\n};\n\nCipher.prototype._unpad = function _unpad(buffer) {\n  return buffer;\n};\n\nCipher.prototype._finalDecrypt = function _finalDecrypt() {\n  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');\n  var out = new Array(this.blockSize);\n  this._flushBuffer(out, 0);\n\n  return this._unpad(out);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar utils = require('./utils');\nvar Cipher = require('./cipher');\n\nfunction DESState() {\n  this.tmp = new Array(2);\n  this.keys = null;\n}\n\nfunction DES(options) {\n  Cipher.call(this, options);\n\n  var state = new DESState();\n  this._desState = state;\n\n  this.deriveKeys(state, options.key);\n}\ninherits(DES, Cipher);\nmodule.exports = DES;\n\nDES.create = function create(options) {\n  return new DES(options);\n};\n\nvar shiftTable = [\n  1, 1, 2, 2, 2, 2, 2, 2,\n  1, 2, 2, 2, 2, 2, 2, 1\n];\n\nDES.prototype.deriveKeys = function deriveKeys(state, key) {\n  state.keys = new Array(16 * 2);\n\n  assert.equal(key.length, this.blockSize, 'Invalid key length');\n\n  var kL = utils.readUInt32BE(key, 0);\n  var kR = utils.readUInt32BE(key, 4);\n\n  utils.pc1(kL, kR, state.tmp, 0);\n  kL = state.tmp[0];\n  kR = state.tmp[1];\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var shift = shiftTable[i >>> 1];\n    kL = utils.r28shl(kL, shift);\n    kR = utils.r28shl(kR, shift);\n    utils.pc2(kL, kR, state.keys, i);\n  }\n};\n\nDES.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._desState;\n\n  var l = utils.readUInt32BE(inp, inOff);\n  var r = utils.readUInt32BE(inp, inOff + 4);\n\n  // Initial Permutation\n  utils.ip(l, r, state.tmp, 0);\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  if (this.type === 'encrypt')\n    this._encrypt(state, l, r, state.tmp, 0);\n  else\n    this._decrypt(state, l, r, state.tmp, 0);\n\n  l = state.tmp[0];\n  r = state.tmp[1];\n\n  utils.writeUInt32BE(out, l, outOff);\n  utils.writeUInt32BE(out, r, outOff + 4);\n};\n\nDES.prototype._pad = function _pad(buffer, off) {\n  var value = buffer.length - off;\n  for (var i = off; i < buffer.length; i++)\n    buffer[i] = value;\n\n  return true;\n};\n\nDES.prototype._unpad = function _unpad(buffer) {\n  var pad = buffer[buffer.length - 1];\n  for (var i = buffer.length - pad; i < buffer.length; i++)\n    assert.equal(buffer[i], pad);\n\n  return buffer.slice(0, buffer.length - pad);\n};\n\nDES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {\n  var l = lStart;\n  var r = rStart;\n\n  // Apply f() x16 times\n  for (var i = 0; i < state.keys.length; i += 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(r, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = r;\n    r = (l ^ f) >>> 0;\n    l = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(r, l, out, off);\n};\n\nDES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {\n  var l = rStart;\n  var r = lStart;\n\n  // Apply f() x16 times\n  for (var i = state.keys.length - 2; i >= 0; i -= 2) {\n    var keyL = state.keys[i];\n    var keyR = state.keys[i + 1];\n\n    // f(r, k)\n    utils.expand(l, state.tmp, 0);\n\n    keyL ^= state.tmp[0];\n    keyR ^= state.tmp[1];\n    var s = utils.substitute(keyL, keyR);\n    var f = utils.permute(s);\n\n    var t = l;\n    l = (r ^ f) >>> 0;\n    r = t;\n  }\n\n  // Reverse Initial Permutation\n  utils.rip(l, r, out, off);\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar Cipher = require('./cipher');\nvar DES = require('./des');\n\nfunction EDEState(type, key) {\n  assert.equal(key.length, 24, 'Invalid key length');\n\n  var k1 = key.slice(0, 8);\n  var k2 = key.slice(8, 16);\n  var k3 = key.slice(16, 24);\n\n  if (type === 'encrypt') {\n    this.ciphers = [\n      DES.create({ type: 'encrypt', key: k1 }),\n      DES.create({ type: 'decrypt', key: k2 }),\n      DES.create({ type: 'encrypt', key: k3 })\n    ];\n  } else {\n    this.ciphers = [\n      DES.create({ type: 'decrypt', key: k3 }),\n      DES.create({ type: 'encrypt', key: k2 }),\n      DES.create({ type: 'decrypt', key: k1 })\n    ];\n  }\n}\n\nfunction EDE(options) {\n  Cipher.call(this, options);\n\n  var state = new EDEState(this.type, this.options.key);\n  this._edeState = state;\n}\ninherits(EDE, Cipher);\n\nmodule.exports = EDE;\n\nEDE.create = function create(options) {\n  return new EDE(options);\n};\n\nEDE.prototype._update = function _update(inp, inOff, out, outOff) {\n  var state = this._edeState;\n\n  state.ciphers[0]._update(inp, inOff, out, outOff);\n  state.ciphers[1]._update(out, outOff, out, outOff);\n  state.ciphers[2]._update(out, outOff, out, outOff);\n};\n\nEDE.prototype._pad = DES.prototype._pad;\nEDE.prototype._unpad = DES.prototype._unpad;\n","'use strict';\n\nexports.utils = require('./des/utils');\nexports.Cipher = require('./des/cipher');\nexports.DES = require('./des/des');\nexports.CBC = require('./des/cbc');\nexports.EDE = require('./des/ede');\n","var CipherBase = require('cipher-base')\nvar des = require('des.js')\nvar inherits = require('inherits')\nvar Buffer = require('safe-buffer').Buffer\n\nvar modes = {\n  'des-ede3-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede3': des.EDE,\n  'des-ede-cbc': des.CBC.instantiate(des.EDE),\n  'des-ede': des.EDE,\n  'des-cbc': des.CBC.instantiate(des.DES),\n  'des-ecb': des.DES\n}\nmodes.des = modes['des-cbc']\nmodes.des3 = modes['des-ede3-cbc']\nmodule.exports = DES\ninherits(DES, CipherBase)\nfunction DES (opts) {\n  CipherBase.call(this)\n  var modeName = opts.mode.toLowerCase()\n  var mode = modes[modeName]\n  var type\n  if (opts.decrypt) {\n    type = 'decrypt'\n  } else {\n    type = 'encrypt'\n  }\n  var key = opts.key\n  if (!Buffer.isBuffer(key)) {\n    key = Buffer.from(key)\n  }\n  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {\n    key = Buffer.concat([key, key.slice(0, 8)])\n  }\n  var iv = opts.iv\n  if (!Buffer.isBuffer(iv)) {\n    iv = Buffer.from(iv)\n  }\n  this._des = mode.create({\n    key: key,\n    iv: iv,\n    type: type\n  })\n}\nDES.prototype._update = function (data) {\n  return Buffer.from(this._des.update(data))\n}\nDES.prototype._final = function () {\n  return Buffer.from(this._des.final())\n}\n","exports.encrypt = function (self, block) {\n  return self._cipher.encryptBlock(block)\n}\n\nexports.decrypt = function (self, block) {\n  return self._cipher.decryptBlock(block)\n}\n","module.exports = function xor (a, b) {\n  var length = Math.min(a.length, b.length)\n  var buffer = new Buffer(length)\n\n  for (var i = 0; i < length; ++i) {\n    buffer[i] = a[i] ^ b[i]\n  }\n\n  return buffer\n}\n","var xor = require('buffer-xor')\n\nexports.encrypt = function (self, block) {\n  var data = xor(block, self._prev)\n\n  self._prev = self._cipher.encryptBlock(data)\n  return self._prev\n}\n\nexports.decrypt = function (self, block) {\n  var pad = self._prev\n\n  self._prev = block\n  var out = self._cipher.decryptBlock(block)\n\n  return xor(out, pad)\n}\n","var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad = self._cipher.encryptBlock(self._prev)\n  var out = pad[0] ^ byteParam\n\n  self._prev = Buffer.concat([\n    self._prev.slice(1),\n    Buffer.from([decrypt ? byteParam : out])\n  ])\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var Buffer = require('safe-buffer').Buffer\n\nfunction encryptByte (self, byteParam, decrypt) {\n  var pad\n  var i = -1\n  var len = 8\n  var out = 0\n  var bit, value\n  while (++i < len) {\n    pad = self._cipher.encryptBlock(self._prev)\n    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0\n    value = pad[0] ^ bit\n    out += ((value & 0x80) >> (i % 8))\n    self._prev = shiftIn(self._prev, decrypt ? bit : value)\n  }\n  return out\n}\n\nfunction shiftIn (buffer, value) {\n  var len = buffer.length\n  var i = -1\n  var out = Buffer.allocUnsafe(buffer.length)\n  buffer = Buffer.concat([buffer, Buffer.from([value])])\n\n  while (++i < len) {\n    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)\n  }\n\n  return out\n}\n\nexports.encrypt = function (self, chunk, decrypt) {\n  var len = chunk.length\n  var out = Buffer.allocUnsafe(len)\n  var i = -1\n\n  while (++i < len) {\n    out[i] = encryptByte(self, chunk[i], decrypt)\n  }\n\n  return out\n}\n","var xor = require('buffer-xor')\n\nfunction getBlock (self) {\n  self._prev = self._cipher.encryptBlock(self._prev)\n  return self._prev\n}\n\nexports.encrypt = function (self, chunk) {\n  while (self._cache.length < chunk.length) {\n    self._cache = Buffer.concat([self._cache, getBlock(self)])\n  }\n\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","function incr32 (iv) {\n  var len = iv.length\n  var item\n  while (len--) {\n    item = iv.readUInt8(len)\n    if (item === 255) {\n      iv.writeUInt8(0, len)\n    } else {\n      item++\n      iv.writeUInt8(item, len)\n      break\n    }\n  }\n}\nmodule.exports = incr32\n","var xor = require('buffer-xor')\nvar Buffer = require('safe-buffer').Buffer\nvar incr32 = require('../incr32')\n\nfunction getBlock (self) {\n  var out = self._cipher.encryptBlockRaw(self._prev)\n  incr32(self._prev)\n  return out\n}\n\nvar blockSize = 16\nexports.encrypt = function (self, chunk) {\n  var chunkNum = Math.ceil(chunk.length / blockSize)\n  var start = self._cache.length\n  self._cache = Buffer.concat([\n    self._cache,\n    Buffer.allocUnsafe(chunkNum * blockSize)\n  ])\n  for (var i = 0; i < chunkNum; i++) {\n    var out = getBlock(self)\n    var offset = start + i * blockSize\n    self._cache.writeUInt32BE(out[0], offset + 0)\n    self._cache.writeUInt32BE(out[1], offset + 4)\n    self._cache.writeUInt32BE(out[2], offset + 8)\n    self._cache.writeUInt32BE(out[3], offset + 12)\n  }\n  var pad = self._cache.slice(0, chunk.length)\n  self._cache = self._cache.slice(chunk.length)\n  return xor(chunk, pad)\n}\n","module.exports = {\n  \"aes-128-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-192-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-256-ecb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 0,\n    \"mode\": \"ECB\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-192-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-256-cbc\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes128\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes192\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes256\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CBC\",\n    \"type\": \"block\"\n  },\n  \"aes-128-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb8\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB8\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-cfb1\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CFB1\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ofb\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"OFB\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-192-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-256-ctr\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 16,\n    \"mode\": \"CTR\",\n    \"type\": \"stream\"\n  },\n  \"aes-128-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 128,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-192-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 192,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  },\n  \"aes-256-gcm\": {\n    \"cipher\": \"AES\",\n    \"key\": 256,\n    \"iv\": 12,\n    \"mode\": \"GCM\",\n    \"type\": \"auth\"\n  }\n}\n;","var modeModules = {\n  ECB: require('./ecb'),\n  CBC: require('./cbc'),\n  CFB: require('./cfb'),\n  CFB8: require('./cfb8'),\n  CFB1: require('./cfb1'),\n  OFB: require('./ofb'),\n  CTR: require('./ctr'),\n  GCM: require('./ctr')\n}\n\nvar modes = require('./list.json')\n\nfor (var key in modes) {\n  modes[key].module = modeModules[modes[key].mode]\n}\n\nmodule.exports = modes\n","// based on the aes implimentation in triple sec\n// https://github.com/keybase/triplesec\n// which is in turn based on the one from crypto-js\n// https://code.google.com/p/crypto-js/\n\nvar Buffer = require('safe-buffer').Buffer\n\nfunction asUInt32Array (buf) {\n  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n\n  var len = (buf.length / 4) | 0\n  var out = new Array(len)\n\n  for (var i = 0; i < len; i++) {\n    out[i] = buf.readUInt32BE(i * 4)\n  }\n\n  return out\n}\n\nfunction scrubVec (v) {\n  for (var i = 0; i < v.length; v++) {\n    v[i] = 0\n  }\n}\n\nfunction cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {\n  var SUB_MIX0 = SUB_MIX[0]\n  var SUB_MIX1 = SUB_MIX[1]\n  var SUB_MIX2 = SUB_MIX[2]\n  var SUB_MIX3 = SUB_MIX[3]\n\n  var s0 = M[0] ^ keySchedule[0]\n  var s1 = M[1] ^ keySchedule[1]\n  var s2 = M[2] ^ keySchedule[2]\n  var s3 = M[3] ^ keySchedule[3]\n  var t0, t1, t2, t3\n  var ksRow = 4\n\n  for (var round = 1; round < nRounds; round++) {\n    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]\n    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]\n    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]\n    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]\n    s0 = t0\n    s1 = t1\n    s2 = t2\n    s3 = t3\n  }\n\n  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]\n  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]\n  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]\n  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]\n  t0 = t0 >>> 0\n  t1 = t1 >>> 0\n  t2 = t2 >>> 0\n  t3 = t3 >>> 0\n\n  return [t0, t1, t2, t3]\n}\n\n// AES constants\nvar RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]\nvar G = (function () {\n  // Compute double table\n  var d = new Array(256)\n  for (var j = 0; j < 256; j++) {\n    if (j < 128) {\n      d[j] = j << 1\n    } else {\n      d[j] = (j << 1) ^ 0x11b\n    }\n  }\n\n  var SBOX = []\n  var INV_SBOX = []\n  var SUB_MIX = [[], [], [], []]\n  var INV_SUB_MIX = [[], [], [], []]\n\n  // Walk GF(2^8)\n  var x = 0\n  var xi = 0\n  for (var i = 0; i < 256; ++i) {\n    // Compute sbox\n    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)\n    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63\n    SBOX[x] = sx\n    INV_SBOX[sx] = x\n\n    // Compute multiplication\n    var x2 = d[x]\n    var x4 = d[x2]\n    var x8 = d[x4]\n\n    // Compute sub bytes, mix columns tables\n    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)\n    SUB_MIX[0][x] = (t << 24) | (t >>> 8)\n    SUB_MIX[1][x] = (t << 16) | (t >>> 16)\n    SUB_MIX[2][x] = (t << 8) | (t >>> 24)\n    SUB_MIX[3][x] = t\n\n    // Compute inv sub bytes, inv mix columns tables\n    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)\n    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)\n    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)\n    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)\n    INV_SUB_MIX[3][sx] = t\n\n    if (x === 0) {\n      x = xi = 1\n    } else {\n      x = x2 ^ d[d[d[x8 ^ x2]]]\n      xi ^= d[d[xi]]\n    }\n  }\n\n  return {\n    SBOX: SBOX,\n    INV_SBOX: INV_SBOX,\n    SUB_MIX: SUB_MIX,\n    INV_SUB_MIX: INV_SUB_MIX\n  }\n})()\n\nfunction AES (key) {\n  this._key = asUInt32Array(key)\n  this._reset()\n}\n\nAES.blockSize = 4 * 4\nAES.keySize = 256 / 8\nAES.prototype.blockSize = AES.blockSize\nAES.prototype.keySize = AES.keySize\nAES.prototype._reset = function () {\n  var keyWords = this._key\n  var keySize = keyWords.length\n  var nRounds = keySize + 6\n  var ksRows = (nRounds + 1) * 4\n\n  var keySchedule = []\n  for (var k = 0; k < keySize; k++) {\n    keySchedule[k] = keyWords[k]\n  }\n\n  for (k = keySize; k < ksRows; k++) {\n    var t = keySchedule[k - 1]\n\n    if (k % keySize === 0) {\n      t = (t << 8) | (t >>> 24)\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n\n      t ^= RCON[(k / keySize) | 0] << 24\n    } else if (keySize > 6 && k % keySize === 4) {\n      t =\n        (G.SBOX[t >>> 24] << 24) |\n        (G.SBOX[(t >>> 16) & 0xff] << 16) |\n        (G.SBOX[(t >>> 8) & 0xff] << 8) |\n        (G.SBOX[t & 0xff])\n    }\n\n    keySchedule[k] = keySchedule[k - keySize] ^ t\n  }\n\n  var invKeySchedule = []\n  for (var ik = 0; ik < ksRows; ik++) {\n    var ksR = ksRows - ik\n    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]\n\n    if (ik < 4 || ksR <= 4) {\n      invKeySchedule[ik] = tt\n    } else {\n      invKeySchedule[ik] =\n        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^\n        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^\n        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^\n        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]\n    }\n  }\n\n  this._nRounds = nRounds\n  this._keySchedule = keySchedule\n  this._invKeySchedule = invKeySchedule\n}\n\nAES.prototype.encryptBlockRaw = function (M) {\n  M = asUInt32Array(M)\n  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)\n}\n\nAES.prototype.encryptBlock = function (M) {\n  var out = this.encryptBlockRaw(M)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[1], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[3], 12)\n  return buf\n}\n\nAES.prototype.decryptBlock = function (M) {\n  M = asUInt32Array(M)\n\n  // swap\n  var m1 = M[1]\n  M[1] = M[3]\n  M[3] = m1\n\n  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0], 0)\n  buf.writeUInt32BE(out[3], 4)\n  buf.writeUInt32BE(out[2], 8)\n  buf.writeUInt32BE(out[1], 12)\n  return buf\n}\n\nAES.prototype.scrub = function () {\n  scrubVec(this._keySchedule)\n  scrubVec(this._invKeySchedule)\n  scrubVec(this._key)\n}\n\nmodule.exports.AES = AES\n","var Buffer = require('safe-buffer').Buffer\nvar ZEROES = Buffer.alloc(16, 0)\n\nfunction toArray (buf) {\n  return [\n    buf.readUInt32BE(0),\n    buf.readUInt32BE(4),\n    buf.readUInt32BE(8),\n    buf.readUInt32BE(12)\n  ]\n}\n\nfunction fromArray (out) {\n  var buf = Buffer.allocUnsafe(16)\n  buf.writeUInt32BE(out[0] >>> 0, 0)\n  buf.writeUInt32BE(out[1] >>> 0, 4)\n  buf.writeUInt32BE(out[2] >>> 0, 8)\n  buf.writeUInt32BE(out[3] >>> 0, 12)\n  return buf\n}\n\nfunction GHASH (key) {\n  this.h = key\n  this.state = Buffer.alloc(16, 0)\n  this.cache = Buffer.allocUnsafe(0)\n}\n\n// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html\n// by Juho Vähä-Herttua\nGHASH.prototype.ghash = function (block) {\n  var i = -1\n  while (++i < block.length) {\n    this.state[i] ^= block[i]\n  }\n  this._multiply()\n}\n\nGHASH.prototype._multiply = function () {\n  var Vi = toArray(this.h)\n  var Zi = [0, 0, 0, 0]\n  var j, xi, lsbVi\n  var i = -1\n  while (++i < 128) {\n    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0\n    if (xi) {\n      // Z_i+1 = Z_i ^ V_i\n      Zi[0] ^= Vi[0]\n      Zi[1] ^= Vi[1]\n      Zi[2] ^= Vi[2]\n      Zi[3] ^= Vi[3]\n    }\n\n    // Store the value of LSB(V_i)\n    lsbVi = (Vi[3] & 1) !== 0\n\n    // V_i+1 = V_i >> 1\n    for (j = 3; j > 0; j--) {\n      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)\n    }\n    Vi[0] = Vi[0] >>> 1\n\n    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R\n    if (lsbVi) {\n      Vi[0] = Vi[0] ^ (0xe1 << 24)\n    }\n  }\n  this.state = fromArray(Zi)\n}\n\nGHASH.prototype.update = function (buf) {\n  this.cache = Buffer.concat([this.cache, buf])\n  var chunk\n  while (this.cache.length >= 16) {\n    chunk = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    this.ghash(chunk)\n  }\n}\n\nGHASH.prototype.final = function (abl, bl) {\n  if (this.cache.length) {\n    this.ghash(Buffer.concat([this.cache, ZEROES], 16))\n  }\n\n  this.ghash(fromArray([0, abl, 0, bl]))\n  return this.state\n}\n\nmodule.exports = GHASH\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\nvar GHASH = require('./ghash')\nvar xor = require('buffer-xor')\nvar incr32 = require('./incr32')\n\nfunction xorTest (a, b) {\n  var out = 0\n  if (a.length !== b.length) out++\n\n  var len = Math.min(a.length, b.length)\n  for (var i = 0; i < len; ++i) {\n    out += (a[i] ^ b[i])\n  }\n\n  return out\n}\n\nfunction calcIv (self, iv, ck) {\n  if (iv.length === 12) {\n    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])\n    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])\n  }\n  var ghash = new GHASH(ck)\n  var len = iv.length\n  var toPad = len % 16\n  ghash.update(iv)\n  if (toPad) {\n    toPad = 16 - toPad\n    ghash.update(Buffer.alloc(toPad, 0))\n  }\n  ghash.update(Buffer.alloc(8, 0))\n  var ivBits = len * 8\n  var tail = Buffer.alloc(8)\n  tail.writeUIntBE(ivBits, 0, 8)\n  ghash.update(tail)\n  self._finID = ghash.state\n  var out = Buffer.from(self._finID)\n  incr32(out)\n  return out\n}\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  var h = Buffer.alloc(4, 0)\n\n  this._cipher = new aes.AES(key)\n  var ck = this._cipher.encryptBlock(h)\n  this._ghash = new GHASH(ck)\n  iv = calcIv(this, iv, ck)\n\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._alen = 0\n  this._len = 0\n  this._mode = mode\n\n  this._authTag = null\n  this._called = false\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  if (!this._called && this._alen) {\n    var rump = 16 - (this._alen % 16)\n    if (rump < 16) {\n      rump = Buffer.alloc(rump, 0)\n      this._ghash.update(rump)\n    }\n  }\n\n  this._called = true\n  var out = this._mode.encrypt(this, chunk)\n  if (this._decrypt) {\n    this._ghash.update(chunk)\n  } else {\n    this._ghash.update(out)\n  }\n  this._len += chunk.length\n  return out\n}\n\nStreamCipher.prototype._final = function () {\n  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')\n\n  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))\n  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')\n\n  this._authTag = tag\n  this._cipher.scrub()\n}\n\nStreamCipher.prototype.getAuthTag = function getAuthTag () {\n  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')\n\n  return this._authTag\n}\n\nStreamCipher.prototype.setAuthTag = function setAuthTag (tag) {\n  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')\n\n  this._authTag = tag\n}\n\nStreamCipher.prototype.setAAD = function setAAD (buf) {\n  if (this._called) throw new Error('Attempting to set AAD in unsupported state')\n\n  this._ghash.update(buf)\n  this._alen += buf.length\n}\n\nmodule.exports = StreamCipher\n","var aes = require('./aes')\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('cipher-base')\nvar inherits = require('inherits')\n\nfunction StreamCipher (mode, key, iv, decrypt) {\n  Transform.call(this)\n\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._cache = Buffer.allocUnsafe(0)\n  this._secCache = Buffer.allocUnsafe(0)\n  this._decrypt = decrypt\n  this._mode = mode\n}\n\ninherits(StreamCipher, Transform)\n\nStreamCipher.prototype._update = function (chunk) {\n  return this._mode.encrypt(this, chunk, this._decrypt)\n}\n\nStreamCipher.prototype._final = function () {\n  this._cipher.scrub()\n}\n\nmodule.exports = StreamCipher\n","var Buffer = require('safe-buffer').Buffer\nvar MD5 = require('md5.js')\n\n/* eslint-disable camelcase */\nfunction EVP_BytesToKey (password, salt, keyBits, ivLen) {\n  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')\n  if (salt) {\n    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')\n    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')\n  }\n\n  var keyLen = keyBits / 8\n  var key = Buffer.alloc(keyLen)\n  var iv = Buffer.alloc(ivLen || 0)\n  var tmp = Buffer.alloc(0)\n\n  while (keyLen > 0 || ivLen > 0) {\n    var hash = new MD5()\n    hash.update(tmp)\n    hash.update(password)\n    if (salt) hash.update(salt)\n    tmp = hash.digest()\n\n    var used = 0\n\n    if (keyLen > 0) {\n      var keyStart = key.length - keyLen\n      used = Math.min(keyLen, tmp.length)\n      tmp.copy(key, keyStart, 0, used)\n      keyLen -= used\n    }\n\n    if (used < tmp.length && ivLen > 0) {\n      var ivStart = iv.length - ivLen\n      var length = Math.min(ivLen, tmp.length - used)\n      tmp.copy(iv, ivStart, used, used + length)\n      ivLen -= length\n    }\n  }\n\n  tmp.fill(0)\n  return { key: key, iv: iv }\n}\n\nmodule.exports = EVP_BytesToKey\n","var MODES = require('./modes')\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Cipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Cipher, Transform)\n\nCipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n\n  while ((chunk = this._cache.get())) {\n    thing = this._mode.encrypt(this, chunk)\n    out.push(thing)\n  }\n\n  return Buffer.concat(out)\n}\n\nvar PADDING = Buffer.alloc(16, 0x10)\n\nCipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    chunk = this._mode.encrypt(this, chunk)\n    this._cipher.scrub()\n    return chunk\n  }\n\n  if (!chunk.equals(PADDING)) {\n    this._cipher.scrub()\n    throw new Error('data not multiple of block length')\n  }\n}\n\nCipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function () {\n  if (this.cache.length > 15) {\n    var out = this.cache.slice(0, 16)\n    this.cache = this.cache.slice(16)\n    return out\n  }\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  var len = 16 - this.cache.length\n  var padBuff = Buffer.allocUnsafe(len)\n\n  var i = -1\n  while (++i < len) {\n    padBuff.writeUInt8(len, i)\n  }\n\n  return Buffer.concat([this.cache, padBuff])\n}\n\nfunction createCipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv)\n  }\n\n  return new Cipher(config.module, password, iv)\n}\n\nfunction createCipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createCipheriv = createCipheriv\nexports.createCipher = createCipher\n","var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","var ciphers = require('./encrypter')\nvar deciphers = require('./decrypter')\nvar modes = require('./modes/list.json')\n\nfunction getCiphers () {\n  return Object.keys(modes)\n}\n\nexports.createCipher = exports.Cipher = ciphers.createCipher\nexports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv\nexports.createDecipher = exports.Decipher = deciphers.createDecipher\nexports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","exports['des-ecb'] = {\n  key: 8,\n  iv: 0\n}\nexports['des-cbc'] = exports.des = {\n  key: 8,\n  iv: 8\n}\nexports['des-ede3-cbc'] = exports.des3 = {\n  key: 24,\n  iv: 8\n}\nexports['des-ede3'] = {\n  key: 24,\n  iv: 0\n}\nexports['des-ede-cbc'] = {\n  key: 16,\n  iv: 8\n}\nexports['des-ede'] = {\n  key: 16,\n  iv: 0\n}\n","var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","var bn = require('bn.js');\nvar brorand = require('brorand');\n\nfunction MillerRabin(rand) {\n  this.rand = rand || new brorand.Rand();\n}\nmodule.exports = MillerRabin;\n\nMillerRabin.create = function create(rand) {\n  return new MillerRabin(rand);\n};\n\nMillerRabin.prototype._randbelow = function _randbelow(n) {\n  var len = n.bitLength();\n  var min_bytes = Math.ceil(len / 8);\n\n  // Generage random bytes until a number less than n is found.\n  // This ensures that 0..n-1 have an equal probability of being selected.\n  do\n    var a = new bn(this.rand.generate(min_bytes));\n  while (a.cmp(n) >= 0);\n\n  return a;\n};\n\nMillerRabin.prototype._randrange = function _randrange(start, stop) {\n  // Generate a random number greater than or equal to start and less than stop.\n  var size = stop.sub(start);\n  return start.add(this._randbelow(size));\n};\n\nMillerRabin.prototype.test = function test(n, k, cb) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  var prime = true;\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n    if (cb)\n      cb(a);\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return false;\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s)\n      return false;\n  }\n\n  return prime;\n};\n\nMillerRabin.prototype.getDivisor = function getDivisor(n, k) {\n  var len = n.bitLength();\n  var red = bn.mont(n);\n  var rone = new bn(1).toRed(red);\n\n  if (!k)\n    k = Math.max(1, (len / 48) | 0);\n\n  // Find d and s, (n - 1) = (2 ^ s) * d;\n  var n1 = n.subn(1);\n  for (var s = 0; !n1.testn(s); s++) {}\n  var d = n.shrn(s);\n\n  var rn1 = n1.toRed(red);\n\n  for (; k > 0; k--) {\n    var a = this._randrange(new bn(2), n1);\n\n    var g = n.gcd(a);\n    if (g.cmpn(1) !== 0)\n      return g;\n\n    var x = a.toRed(red).redPow(d);\n    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)\n      continue;\n\n    for (var i = 1; i < s; i++) {\n      x = x.redSqr();\n\n      if (x.cmp(rone) === 0)\n        return x.fromRed().subn(1).gcd(n);\n      if (x.cmp(rn1) === 0)\n        break;\n    }\n\n    if (i === s) {\n      x = x.redSqr();\n      return x.fromRed().subn(1).gcd(n);\n    }\n  }\n\n  return false;\n};\n","var randomBytes = require('randombytes');\nmodule.exports = findPrime;\nfindPrime.simpleSieve = simpleSieve;\nfindPrime.fermatTest = fermatTest;\nvar BN = require('bn.js');\nvar TWENTYFOUR = new BN(24);\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar ONE = new BN(1);\nvar TWO = new BN(2);\nvar FIVE = new BN(5);\nvar SIXTEEN = new BN(16);\nvar EIGHT = new BN(8);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar ELEVEN = new BN(11);\nvar FOUR = new BN(4);\nvar TWELVE = new BN(12);\nvar primes = null;\n\nfunction _getPrimes() {\n  if (primes !== null)\n    return primes;\n\n  var limit = 0x100000;\n  var res = [];\n  res[0] = 2;\n  for (var i = 1, k = 3; k < limit; k += 2) {\n    var sqrt = Math.ceil(Math.sqrt(k));\n    for (var j = 0; j < i && res[j] <= sqrt; j++)\n      if (k % res[j] === 0)\n        break;\n\n    if (i !== j && res[j] <= sqrt)\n      continue;\n\n    res[i++] = k;\n  }\n  primes = res;\n  return res;\n}\n\nfunction simpleSieve(p) {\n  var primes = _getPrimes();\n\n  for (var i = 0; i < primes.length; i++)\n    if (p.modn(primes[i]) === 0) {\n      if (p.cmpn(primes[i]) === 0) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n  return true;\n}\n\nfunction fermatTest(p) {\n  var red = BN.mont(p);\n  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;\n}\n\nfunction findPrime(bits, gen) {\n  if (bits < 16) {\n    // this is what openssl does\n    if (gen === 2 || gen === 5) {\n      return new BN([0x8c, 0x7b]);\n    } else {\n      return new BN([0x8c, 0x27]);\n    }\n  }\n  gen = new BN(gen);\n\n  var num, n2;\n\n  while (true) {\n    num = new BN(randomBytes(Math.ceil(bits / 8)));\n    while (num.bitLength() > bits) {\n      num.ishrn(1);\n    }\n    if (num.isEven()) {\n      num.iadd(ONE);\n    }\n    if (!num.testn(1)) {\n      num.iadd(TWO);\n    }\n    if (!gen.cmp(TWO)) {\n      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        num.iadd(FOUR);\n      }\n    } else if (!gen.cmp(FIVE)) {\n      while (num.mod(TEN).cmp(THREE)) {\n        num.iadd(FOUR);\n      }\n    }\n    n2 = num.shrn(1);\n    if (simpleSieve(n2) && simpleSieve(num) &&\n      fermatTest(n2) && fermatTest(num) &&\n      millerRabin.test(n2) && millerRabin.test(num)) {\n      return num;\n    }\n  }\n\n}\n","module.exports = {\n    \"modp1\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff\"\n    },\n    \"modp2\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff\"\n    },\n    \"modp5\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff\"\n    },\n    \"modp14\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff\"\n    },\n    \"modp15\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff\"\n    },\n    \"modp16\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff\"\n    },\n    \"modp17\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff\"\n    },\n    \"modp18\": {\n        \"gen\": \"02\",\n        \"prime\": \"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff\"\n    }\n};","var BN = require('bn.js');\nvar MillerRabin = require('miller-rabin');\nvar millerRabin = new MillerRabin();\nvar TWENTYFOUR = new BN(24);\nvar ELEVEN = new BN(11);\nvar TEN = new BN(10);\nvar THREE = new BN(3);\nvar SEVEN = new BN(7);\nvar primes = require('./generatePrime');\nvar randomBytes = require('randombytes');\nmodule.exports = DH;\n\nfunction setPublicKey(pub, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc);\n  }\n  this._pub = new BN(pub);\n  return this;\n}\n\nfunction setPrivateKey(priv, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc);\n  }\n  this._priv = new BN(priv);\n  return this;\n}\n\nvar primeCache = {};\nfunction checkPrime(prime, generator) {\n  var gen = generator.toString('hex');\n  var hex = [gen, prime.toString(16)].join('_');\n  if (hex in primeCache) {\n    return primeCache[hex];\n  }\n  var error = 0;\n\n  if (prime.isEven() ||\n    !primes.simpleSieve ||\n    !primes.fermatTest(prime) ||\n    !millerRabin.test(prime)) {\n    //not a prime so +1\n    error += 1;\n\n    if (gen === '02' || gen === '05') {\n      // we'd be able to check the generator\n      // it would fail so +8\n      error += 8;\n    } else {\n      //we wouldn't be able to test the generator\n      // so +4\n      error += 4;\n    }\n    primeCache[hex] = error;\n    return error;\n  }\n  if (!millerRabin.test(prime.shrn(1))) {\n    //not a safe prime\n    error += 2;\n  }\n  var rem;\n  switch (gen) {\n    case '02':\n      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {\n        // unsuidable generator\n        error += 8;\n      }\n      break;\n    case '05':\n      rem = prime.mod(TEN);\n      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {\n        // prime mod 10 needs to equal 3 or 7\n        error += 8;\n      }\n      break;\n    default:\n      error += 4;\n  }\n  primeCache[hex] = error;\n  return error;\n}\n\nfunction DH(prime, generator, malleable) {\n  this.setGenerator(generator);\n  this.__prime = new BN(prime);\n  this._prime = BN.mont(this.__prime);\n  this._primeLen = prime.length;\n  this._pub = undefined;\n  this._priv = undefined;\n  this._primeCode = undefined;\n  if (malleable) {\n    this.setPublicKey = setPublicKey;\n    this.setPrivateKey = setPrivateKey;\n  } else {\n    this._primeCode = 8;\n  }\n}\nObject.defineProperty(DH.prototype, 'verifyError', {\n  enumerable: true,\n  get: function () {\n    if (typeof this._primeCode !== 'number') {\n      this._primeCode = checkPrime(this.__prime, this.__gen);\n    }\n    return this._primeCode;\n  }\n});\nDH.prototype.generateKeys = function () {\n  if (!this._priv) {\n    this._priv = new BN(randomBytes(this._primeLen));\n  }\n  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();\n  return this.getPublicKey();\n};\n\nDH.prototype.computeSecret = function (other) {\n  other = new BN(other);\n  other = other.toRed(this._prime);\n  var secret = other.redPow(this._priv).fromRed();\n  var out = new Buffer(secret.toArray());\n  var prime = this.getPrime();\n  if (out.length < prime.length) {\n    var front = new Buffer(prime.length - out.length);\n    front.fill(0);\n    out = Buffer.concat([front, out]);\n  }\n  return out;\n};\n\nDH.prototype.getPublicKey = function getPublicKey(enc) {\n  return formatReturnValue(this._pub, enc);\n};\n\nDH.prototype.getPrivateKey = function getPrivateKey(enc) {\n  return formatReturnValue(this._priv, enc);\n};\n\nDH.prototype.getPrime = function (enc) {\n  return formatReturnValue(this.__prime, enc);\n};\n\nDH.prototype.getGenerator = function (enc) {\n  return formatReturnValue(this._gen, enc);\n};\n\nDH.prototype.setGenerator = function (gen, enc) {\n  enc = enc || 'utf8';\n  if (!Buffer.isBuffer(gen)) {\n    gen = new Buffer(gen, enc);\n  }\n  this.__gen = gen;\n  this._gen = new BN(gen);\n  return this;\n};\n\nfunction formatReturnValue(bn, enc) {\n  var buf = new Buffer(bn.toArray());\n  if (!enc) {\n    return buf;\n  } else {\n    return buf.toString(enc);\n  }\n}\n","var generatePrime = require('./lib/generatePrime')\nvar primes = require('./lib/primes.json')\n\nvar DH = require('./lib/dh')\n\nfunction getDiffieHellman (mod) {\n  var prime = new Buffer(primes[mod].prime, 'hex')\n  var gen = new Buffer(primes[mod].gen, 'hex')\n\n  return new DH(prime, gen)\n}\n\nvar ENCODINGS = {\n  'binary': true, 'hex': true, 'base64': true\n}\n\nfunction createDiffieHellman (prime, enc, generator, genc) {\n  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {\n    return createDiffieHellman(prime, 'binary', enc, generator)\n  }\n\n  enc = enc || 'binary'\n  genc = genc || 'binary'\n  generator = generator || new Buffer([2])\n\n  if (!Buffer.isBuffer(generator)) {\n    generator = new Buffer(generator, genc)\n  }\n\n  if (typeof prime === 'number') {\n    return new DH(generatePrime(prime, generator), generator, true)\n  }\n\n  if (!Buffer.isBuffer(prime)) {\n    prime = new Buffer(prime, enc)\n  }\n\n  return new DH(prime, generator, true)\n}\n\nexports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman\nexports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","module.exports = require('events').EventEmitter;\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar _require = require('buffer'),\n    Buffer = _require.Buffer;\n\nvar _require2 = require('util'),\n    inspect = _require2.inspect;\n\nvar custom = inspect && inspect.custom || 'inspect';\n\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n\n      while (p = p.next) {\n        ret += s + p.data;\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n\n      return ret;\n    } // Consumes a specified amount of bytes or characters from the buffered data.\n\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    } // Consumes a specified amount of characters from the buffered data.\n\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Consumes a specified amount of bytes from the buffered data.\n\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n\n          break;\n        }\n\n        ++c;\n      }\n\n      this.length -= c;\n      return ret;\n    } // Make sure the linked list only shows the minimal necessary information.\n\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread({}, options, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n\n  return BufferList;\n}();","'use strict'; // undocumented cb() API, needed for core, not for public API\n\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n\n    return this;\n  } // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  } // if this is a duplex stream mark the writable part as destroyed as well\n\n\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n\n  return this;\n}\n\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\n\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\n\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\n\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n\n    return Math.floor(hwm);\n  } // Default value\n\n\n  return state.objectMode ? 16 : 16 * 1024;\n}\n\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n'use strict';\n\nmodule.exports = Writable;\n/* <replacement> */\n\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n} // It seems a linked list but it is not\n// there will be only 2 of these for each stream\n\n\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\n\n\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n/*<replacement>*/\n\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n    ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n    ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n    ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\n\nrequire('inherits')(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode; // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex); // if _final has been called\n\n  this.finalCalled = false; // drain event flag.\n\n  this.needDrain = false; // at the start of calling end()\n\n  this.ending = false; // when end() has been called, and returned\n\n  this.ended = false; // when 'finish' is emitted\n\n  this.finished = false; // has it been destroyed\n\n  this.destroyed = false; // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n\n  this.length = 0; // a flag to see when we're in the middle of a write.\n\n  this.writing = false; // when true all writes will be buffered until .uncork() call\n\n  this.corked = 0; // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n\n  this.sync = true; // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n\n  this.bufferProcessing = false; // the callback that's passed to _write(chunk,cb)\n\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  }; // the callback that the user supplies to write(chunk,encoding,cb)\n\n\n  this.writecb = null; // the amount that is being written when _write is called.\n\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null; // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n\n  this.pendingcb = 0; // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n\n  this.prefinished = false; // True if the error was already emitted and should not be thrown again\n\n  this.errorEmitted = false; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'finish' (and potentially 'end')\n\n  this.autoDestroy = !!options.autoDestroy; // count buffered requests\n\n  this.bufferedRequestCount = 0; // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})(); // Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\n\n\nvar realHasInstance;\n\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex'); // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex); // legacy.\n\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n} // Otherwise people can pipe Writable streams, which is just wrong.\n\n\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END(); // TODO: defer error events consistently everywhere, not just the cb\n\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n} // Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\n\n\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n\n  return true;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n}); // if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\n\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark; // we must ensure that previous needDrain will not be reset to false.\n\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er); // this can emit finish, and it will always happen\n    // after error\n\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er); // this can emit finish, but finish must\n    // always follow error\n\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n} // Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\n\n\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n} // if there's something in the buffer waiting, then process it\n\n\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish); // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--; // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding); // .end() fully uncorks\n\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  } // ignore unnecessary end() calls.\n\n\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\n\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\n\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\n\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n\n  if (need) {\n    prefinish(stream, state);\n\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  } // reuse the free corkReq.\n\n\n  state.corkedRequestsFree.next = corkReq;\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\n\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n'use strict';\n/*<replacement>*/\n\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n\n  for (var key in obj) {\n    keys.push(key);\n  }\n\n  return keys;\n};\n/*</replacement>*/\n\n\nmodule.exports = Duplex;\n\nvar Readable = require('./_stream_readable');\n\nvar Writable = require('./_stream_writable');\n\nrequire('inherits')(Duplex, Readable);\n\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n}); // the no-half-open enforcer\n\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return; // no more data can be written.\n  // But allow more writes to happen in this tick.\n\n  process.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    callback.apply(this, args);\n  };\n}\n\nfunction noop() {}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n\n  var writableEnded = stream._writableState && stream._writableState.finished;\n\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n\n  var onclose = function onclose() {\n    var err;\n\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\n\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar finished = require('./end-of-stream');\n\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\n\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\n\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n\n  if (resolve !== null) {\n    var data = iter[kStream].read(); // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\n\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\n\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\n\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n\n  next: function next() {\n    var _this = this;\n\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    } // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n\n\n    var lastPromise = this[kLastPromise];\n    var promise;\n\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n\n      promise = new Promise(this[kHandlePromise]);\n    }\n\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\n\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject]; // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n\n      iterator[kError] = err;\n      return;\n    }\n\n    var resolve = iterator[kLastResolve];\n\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\n\nmodule.exports = createReadableStreamAsyncIterator;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nmodule.exports = Readable;\n/*<replacement>*/\n\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n/*<replacement>*/\n\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\n\n\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n\nvar Buffer = require('buffer').Buffer;\n\nvar OurUint8Array = global.Uint8Array || function () {};\n\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\n\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n/*<replacement>*/\n\n\nvar debugUtil = require('util');\n\nvar debug;\n\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\n\nvar BufferList = require('./internal/streams/buffer_list');\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nvar _require = require('./internal/streams/state'),\n    getHighWaterMark = _require.getHighWaterMark;\n\nvar _require$codes = require('../errors').codes,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT; // Lazy loaded to improve the startup performance.\n\n\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\n\nrequire('inherits')(Readable, Stream);\n\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn); // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {}; // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex; // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode; // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex); // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false; // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n\n  this.sync = true; // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true; // Should close be emitted on destroy. Defaults to true.\n\n  this.emitClose = options.emitClose !== false; // Should .destroy() be called after 'end' (and potentially 'finish')\n\n  this.autoDestroy = !!options.autoDestroy; // has it been destroyed\n\n  this.destroyed = false; // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n\n  this.defaultEncoding = options.defaultEncoding || 'utf8'; // the number of writers that are awaiting a drain event in .pipe()s\n\n  this.awaitDrain = 0; // if true, a maybeReadMore has been scheduled\n\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options); // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex); // legacy\n\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    } // backward compatibility, the user is explicitly\n    // managing destroyed\n\n\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\n\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n}; // Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\n\n\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n}; // Unshift should *always* be something directly out of read()\n\n\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  } // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n\n\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n\n  return er;\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n}; // backwards compatibility.\n\n\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder; // If setEncoding(null), decoder.encoding equals utf8\n\n  this._readableState.encoding = this._readableState.decoder.encoding; // Iterate over current buffer to convert already stored Buffers:\n\n  var p = this._readableState.buffer.head;\n  var content = '';\n\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n\n  this._readableState.buffer.clear();\n\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n}; // Don't raise the hwm > 1GB\n\n\nvar MAX_HWM = 0x40000000;\n\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n\n  return n;\n} // This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\n\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  } // If we're asking for more than the current hwm, then raise the hwm.\n\n\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n; // Don't have enough\n\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n\n  return state.length;\n} // you can override either this method, or the async _read(n) below.\n\n\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false; // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state); // if we've ended, and we're now clear, then finish it up.\n\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  } // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n  // if we need a readable event, then we need to do some reading.\n\n\n  var doRead = state.needReadable;\n  debug('need readable', doRead); // if we currently have less than the highWaterMark, then also read some\n\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  } // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n\n\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true; // if the length is currently zero, then we *need* a readable event.\n\n    if (state.length === 0) state.needReadable = true; // call internal read method\n\n    this._read(state.highWaterMark);\n\n    state.sync = false; // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true; // If we tried to read() past the EOF, then emit end on the next tick.\n\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n\n  state.ended = true;\n\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n} // Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\n\n\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  } // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n\n\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n} // at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\n\n\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length) // didn't get any data, stop spinning.\n      break;\n  }\n\n  state.readingMore = false;\n} // abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\n\n\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  } // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n\n\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n\n  function cleanup() {\n    debug('cleanup'); // cleanup event handlers once the pipe is broken\n\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true; // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  src.on('data', ondata);\n\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n\n      src.pause();\n    }\n  } // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n\n\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  } // Make sure our error handler is attached before userland ones.\n\n\n  prependListener(dest, 'error', onerror); // Both close and finish should trigger unpipe, but only once.\n\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n\n  dest.once('close', onclose);\n\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  } // tell the dest that it's being piped to\n\n\n  dest.emit('pipe', src); // start the flow if it hasn't been started already.\n\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  }; // if we're not piping anywhere, then do nothing.\n\n  if (state.pipesCount === 0) return this; // just one destination.  most common case.\n\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes; // got a match.\n\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  } // slow case. multiple pipe destinations.\n\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, {\n        hasUnpiped: false\n      });\n    }\n\n    return this;\n  } // try to find the right one.\n\n\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n}; // set up data events if they are asked for\n// Ensure readable listeners eventually get something\n\n\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0; // Try start flowing on next tick if stream isn't explicitly paused\n\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n\n  return res;\n};\n\nReadable.prototype.addListener = Readable.prototype.on;\n\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n\n  return res;\n};\n\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true; // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n} // pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\n\n\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n\n  if (!state.flowing) {\n    debug('resume'); // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n\n  state.paused = false;\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n\n  if (!state.reading) {\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n\n  this._readableState.paused = true;\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n\n  while (state.flowing && stream.read() !== null) {\n    ;\n  }\n} // wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\n\n\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk); // don't skip over falsy values in objectMode\n\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  }); // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  } // proxy certain important events.\n\n\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  } // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n\n\n  this._read = function (n) {\n    debug('wrapped _read', n);\n\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n\n    return createReadableStreamAsyncIterator(this);\n  };\n}\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n}); // exposed for testing purposes only.\n\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n}); // Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\n\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length); // Check that we didn't get one last unshift.\n\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\n\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n\n    return from(Readable, iterable, opts);\n  };\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n'use strict';\n\nmodule.exports = Transform;\n\nvar _require$codes = require('../errors').codes,\n    ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n    ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n    ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n    ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\n\nvar Duplex = require('./_stream_duplex');\n\nrequire('inherits')(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  }; // start out asking for a readable event once data is transformed.\n\n  this._readableState.needReadable = true; // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  } // When the writable side finishes, then flush out anything remaining.\n\n\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n}; // This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\n\n\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n}; // Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\n\n\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data); // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\nrequire('inherits')(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n'use strict';\n\nvar eos;\n\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\n\nvar _require$codes = require('../../../errors').codes,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n    ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\n\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\n\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\n\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true; // request.destroy just do .end - .abort is what we want\n\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\n\nfunction call(fn) {\n  fn();\n}\n\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\n\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\n\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\n\nmodule.exports = pipeline;","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var bn = require('bn.js');\nvar randomBytes = require('randombytes');\nmodule.exports = crt;\nfunction blind(priv) {\n  var r = getr(priv);\n  var blinder = r.toRed(bn.mont(priv.modulus))\n  .redPow(new bn(priv.publicExponent)).fromRed();\n  return {\n    blinder: blinder,\n    unblinder:r.invm(priv.modulus)\n  };\n}\nfunction crt(msg, priv) {\n  var blinds = blind(priv);\n  var len = priv.modulus.byteLength();\n  var mod = bn.mont(priv.modulus);\n  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);\n  var c1 = blinded.toRed(bn.mont(priv.prime1));\n  var c2 = blinded.toRed(bn.mont(priv.prime2));\n  var qinv = priv.coefficient;\n  var p = priv.prime1;\n  var q = priv.prime2;\n  var m1 = c1.redPow(priv.exponent1);\n  var m2 = c2.redPow(priv.exponent2);\n  m1 = m1.fromRed();\n  m2 = m2.fromRed();\n  var h = m1.isub(m2).imul(qinv).umod(p);\n  h.imul(q);\n  m2.iadd(h);\n  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));\n}\ncrt.getr = getr;\nfunction getr(priv) {\n  var len = priv.modulus.byteLength();\n  var r = new bn(randomBytes(len));\n  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {\n    r = new bn(randomBytes(len));\n  }\n  return r;\n}\n","module.exports = {\n  \"_from\": \"elliptic@^6.5.3\",\n  \"_id\": \"elliptic@6.5.3\",\n  \"_inBundle\": false,\n  \"_integrity\": \"sha512-IMqzv5wNQf+E6aHeIqATs0tOLeOTwj1QKbRcS3jBbYkl5oLAserA8yJTT7/VyHUYG91PRmPyeQDObKLPpeS4dw==\",\n  \"_location\": \"/elliptic\",\n  \"_phantomChildren\": {},\n  \"_requested\": {\n    \"type\": \"range\",\n    \"registry\": true,\n    \"raw\": \"elliptic@^6.5.3\",\n    \"name\": \"elliptic\",\n    \"escapedName\": \"elliptic\",\n    \"rawSpec\": \"^6.5.3\",\n    \"saveSpec\": null,\n    \"fetchSpec\": \"^6.5.3\"\n  },\n  \"_requiredBy\": [\n    \"/browserify-sign\",\n    \"/create-ecdh\"\n  ],\n  \"_resolved\": \"https://registry.npmjs.org/elliptic/-/elliptic-6.5.3.tgz\",\n  \"_shasum\": \"cb59eb2efdaf73a0bd78ccd7015a62ad6e0f93d6\",\n  \"_spec\": \"elliptic@^6.5.3\",\n  \"_where\": \"/home/robertoms2/demoProject/node_modules/browserify-sign\",\n  \"author\": {\n    \"name\": \"Fedor Indutny\",\n    \"email\": \"fedor@indutny.com\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/indutny/elliptic/issues\"\n  },\n  \"bundleDependencies\": false,\n  \"dependencies\": {\n    \"bn.js\": \"^4.4.0\",\n    \"brorand\": \"^1.0.1\",\n    \"hash.js\": \"^1.0.0\",\n    \"hmac-drbg\": \"^1.0.0\",\n    \"inherits\": \"^2.0.1\",\n    \"minimalistic-assert\": \"^1.0.0\",\n    \"minimalistic-crypto-utils\": \"^1.0.0\"\n  },\n  \"deprecated\": false,\n  \"description\": \"EC cryptography\",\n  \"devDependencies\": {\n    \"brfs\": \"^1.4.3\",\n    \"coveralls\": \"^3.0.8\",\n    \"grunt\": \"^1.0.4\",\n    \"grunt-browserify\": \"^5.0.0\",\n    \"grunt-cli\": \"^1.2.0\",\n    \"grunt-contrib-connect\": \"^1.0.0\",\n    \"grunt-contrib-copy\": \"^1.0.0\",\n    \"grunt-contrib-uglify\": \"^1.0.1\",\n    \"grunt-mocha-istanbul\": \"^3.0.1\",\n    \"grunt-saucelabs\": \"^9.0.1\",\n    \"istanbul\": \"^0.4.2\",\n    \"jscs\": \"^3.0.7\",\n    \"jshint\": \"^2.10.3\",\n    \"mocha\": \"^6.2.2\"\n  },\n  \"files\": [\n    \"lib\"\n  ],\n  \"homepage\": \"https://github.com/indutny/elliptic\",\n  \"keywords\": [\n    \"EC\",\n    \"Elliptic\",\n    \"curve\",\n    \"Cryptography\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"lib/elliptic.js\",\n  \"name\": \"elliptic\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+ssh://git@github.com/indutny/elliptic.git\"\n  },\n  \"scripts\": {\n    \"jscs\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"jshint\": \"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js\",\n    \"lint\": \"npm run jscs && npm run jshint\",\n    \"test\": \"npm run lint && npm run unit\",\n    \"unit\": \"istanbul test _mocha --reporter=spec test/index.js\",\n    \"version\": \"grunt dist && git add dist/\"\n  },\n  \"version\": \"6.5.3\"\n}\n;","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    []\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      var m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      var m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n           this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n                                     bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  for (var j = 0; j < naf.length; j += doubles.step) {\n    var nafW = 0;\n    for (var k = j + doubles.step - 1; k >= j; k--)\n      nafW = (nafW << 1) + naf[k];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (var j = 0; j < repr.length; j++) {\n      var nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var k = 0; i >= 0 && naf[i] === 0; i--)\n      k++;\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n                                                       points,\n                                                       coeffs,\n                                                       len,\n                                                       jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  for (var i = 0; i < len; i++) {\n    var p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (var i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b] /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (var j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (var i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (var j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (var j = 0; j < len; j++) {\n      var z = tmp[j];\n      var p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (var i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n                          bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16)\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 }\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n  var npoints = this._endoWnafT1;\n  var ncoeffs = this._endoWnafT2;\n  for (var i = 0; i < points.length; i++) {\n    var split = this._endoSplit(coeffs[i]);\n    var p = points[i];\n    var beta = p._getBeta();\n\n    if (split.k1.negative) {\n      split.k1.ineg();\n      p = p.neg(true);\n    }\n    if (split.k2.negative) {\n      split.k2.ineg();\n      beta = beta.neg(true);\n    }\n\n    npoints[i * 2] = p;\n    npoints[i * 2 + 1] = beta;\n    ncoeffs[i * 2] = split.k1;\n    ncoeffs[i * 2 + 1] = split.k2;\n  }\n  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n  // Clean-up references to points and coefficients\n  for (var j = 0; j < i * 2; j++) {\n    npoints[j] = null;\n    ncoeffs[j] = null;\n  }\n  return res;\n};\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul)\n      }\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1)\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1)\n    }\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point))\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point))\n    }\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate)\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate)\n      }\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (var i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (var i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // E = a * C\n    var e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      var h = this.z.redSqr();\n      // J = F - 2 * H\n      var j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    var e = c.redAdd(d);\n    // H = (c * Z1)^2\n    var h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    var j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n                          this.y,\n                          this.z,\n                          this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'\n      ]\n    ]\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'\n      ]\n    ]\n  }\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve\n      });\n      return curve;\n    }\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'\n  ]\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'\n  ]\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'\n  ]\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'\n  ]\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650'\n  ]\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9'\n  ]\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658'\n  ]\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3'\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15'\n    }\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre\n  ]\n});\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(curves.hasOwnProperty(options), 'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray()\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  do {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  } while (true);\n};\n\nEC.prototype._truncateToN = function truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8'\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; true; iter++) {\n    var k = options.k ?\n        options.k(iter) :\n        new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n\n  if (!this.curve._maxwellTrick) {\n    var p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  var p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength)\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  var curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n               .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    try {\n      BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n    } catch (e) {\n      BN.prototype.inspect = inspect;\n    }\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","/* eslint-disable node/no-deprecated-api */\n\n'use strict'\n\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\nvar safer = {}\n\nvar key\n\nfor (key in buffer) {\n  if (!buffer.hasOwnProperty(key)) continue\n  if (key === 'SlowBuffer' || key === 'Buffer') continue\n  safer[key] = buffer[key]\n}\n\nvar Safer = safer.Buffer = {}\nfor (key in Buffer) {\n  if (!Buffer.hasOwnProperty(key)) continue\n  if (key === 'allocUnsafe' || key === 'allocUnsafeSlow') continue\n  Safer[key] = Buffer[key]\n}\n\nsafer.Buffer.prototype = Buffer.prototype\n\nif (!Safer.from || Safer.from === Uint8Array.from) {\n  Safer.from = function (value, encodingOrOffset, length) {\n    if (typeof value === 'number') {\n      throw new TypeError('The \"value\" argument must not be of type number. Received type ' + typeof value)\n    }\n    if (value && typeof value.length === 'undefined') {\n      throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type ' + typeof value)\n    }\n    return Buffer(value, encodingOrOffset, length)\n  }\n}\n\nif (!Safer.alloc) {\n  Safer.alloc = function (size, fill, encoding) {\n    if (typeof size !== 'number') {\n      throw new TypeError('The \"size\" argument must be of type number. Received type ' + typeof size)\n    }\n    if (size < 0 || size >= 2 * (1 << 30)) {\n      throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n    }\n    var buf = Buffer(size)\n    if (!fill || fill.length === 0) {\n      buf.fill(0)\n    } else if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n    return buf\n  }\n}\n\nif (!safer.kStringMaxLength) {\n  try {\n    safer.kStringMaxLength = process.binding('buffer').kStringMaxLength\n  } catch (e) {\n    // we can't determine kStringMaxLength in environments where process.binding\n    // is unsupported, so let's not set it\n  }\n}\n\nif (!safer.constants) {\n  safer.constants = {\n    MAX_LENGTH: safer.kMaxLength\n  }\n  if (safer.kStringMaxLength) {\n    safer.constants.MAX_STRING_LENGTH = safer.kStringMaxLength\n  }\n}\n\nmodule.exports = safer\n","'use strict';\n\nconst inherits = require('inherits');\n\nfunction Reporter(options) {\n  this._reporterState = {\n    obj: null,\n    path: [],\n    options: options || {},\n    errors: []\n  };\n}\nexports.Reporter = Reporter;\n\nReporter.prototype.isError = function isError(obj) {\n  return obj instanceof ReporterError;\n};\n\nReporter.prototype.save = function save() {\n  const state = this._reporterState;\n\n  return { obj: state.obj, pathLen: state.path.length };\n};\n\nReporter.prototype.restore = function restore(data) {\n  const state = this._reporterState;\n\n  state.obj = data.obj;\n  state.path = state.path.slice(0, data.pathLen);\n};\n\nReporter.prototype.enterKey = function enterKey(key) {\n  return this._reporterState.path.push(key);\n};\n\nReporter.prototype.exitKey = function exitKey(index) {\n  const state = this._reporterState;\n\n  state.path = state.path.slice(0, index - 1);\n};\n\nReporter.prototype.leaveKey = function leaveKey(index, key, value) {\n  const state = this._reporterState;\n\n  this.exitKey(index);\n  if (state.obj !== null)\n    state.obj[key] = value;\n};\n\nReporter.prototype.path = function path() {\n  return this._reporterState.path.join('/');\n};\n\nReporter.prototype.enterObject = function enterObject() {\n  const state = this._reporterState;\n\n  const prev = state.obj;\n  state.obj = {};\n  return prev;\n};\n\nReporter.prototype.leaveObject = function leaveObject(prev) {\n  const state = this._reporterState;\n\n  const now = state.obj;\n  state.obj = prev;\n  return now;\n};\n\nReporter.prototype.error = function error(msg) {\n  let err;\n  const state = this._reporterState;\n\n  const inherited = msg instanceof ReporterError;\n  if (inherited) {\n    err = msg;\n  } else {\n    err = new ReporterError(state.path.map(function(elem) {\n      return '[' + JSON.stringify(elem) + ']';\n    }).join(''), msg.message || msg, msg.stack);\n  }\n\n  if (!state.options.partial)\n    throw err;\n\n  if (!inherited)\n    state.errors.push(err);\n\n  return err;\n};\n\nReporter.prototype.wrapResult = function wrapResult(result) {\n  const state = this._reporterState;\n  if (!state.options.partial)\n    return result;\n\n  return {\n    result: this.isError(result) ? null : result,\n    errors: state.errors\n  };\n};\n\nfunction ReporterError(path, msg) {\n  this.path = path;\n  this.rethrow(msg);\n}\ninherits(ReporterError, Error);\n\nReporterError.prototype.rethrow = function rethrow(msg) {\n  this.message = msg + ' at: ' + (this.path || '(shallow)');\n  if (Error.captureStackTrace)\n    Error.captureStackTrace(this, ReporterError);\n\n  if (!this.stack) {\n    try {\n      // IE only adds stack when thrown\n      throw new Error(this.message);\n    } catch (e) {\n      this.stack = e.stack;\n    }\n  }\n  return this;\n};\n","'use strict';\n\nconst inherits = require('inherits');\nconst Reporter = require('../base/reporter').Reporter;\nconst Buffer = require('safer-buffer').Buffer;\n\nfunction DecoderBuffer(base, options) {\n  Reporter.call(this, options);\n  if (!Buffer.isBuffer(base)) {\n    this.error('Input not Buffer');\n    return;\n  }\n\n  this.base = base;\n  this.offset = 0;\n  this.length = base.length;\n}\ninherits(DecoderBuffer, Reporter);\nexports.DecoderBuffer = DecoderBuffer;\n\nDecoderBuffer.isDecoderBuffer = function isDecoderBuffer(data) {\n  if (data instanceof DecoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    Buffer.isBuffer(data.base) &&\n    data.constructor.name === 'DecoderBuffer' &&\n    typeof data.offset === 'number' &&\n    typeof data.length === 'number' &&\n    typeof data.save === 'function' &&\n    typeof data.restore === 'function' &&\n    typeof data.isEmpty === 'function' &&\n    typeof data.readUInt8 === 'function' &&\n    typeof data.skip === 'function' &&\n    typeof data.raw === 'function';\n\n  return isCompatible;\n};\n\nDecoderBuffer.prototype.save = function save() {\n  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };\n};\n\nDecoderBuffer.prototype.restore = function restore(save) {\n  // Return skipped data\n  const res = new DecoderBuffer(this.base);\n  res.offset = save.offset;\n  res.length = this.offset;\n\n  this.offset = save.offset;\n  Reporter.prototype.restore.call(this, save.reporter);\n\n  return res;\n};\n\nDecoderBuffer.prototype.isEmpty = function isEmpty() {\n  return this.offset === this.length;\n};\n\nDecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {\n  if (this.offset + 1 <= this.length)\n    return this.base.readUInt8(this.offset++, true);\n  else\n    return this.error(fail || 'DecoderBuffer overrun');\n};\n\nDecoderBuffer.prototype.skip = function skip(bytes, fail) {\n  if (!(this.offset + bytes <= this.length))\n    return this.error(fail || 'DecoderBuffer overrun');\n\n  const res = new DecoderBuffer(this.base);\n\n  // Share reporter state\n  res._reporterState = this._reporterState;\n\n  res.offset = this.offset;\n  res.length = this.offset + bytes;\n  this.offset += bytes;\n  return res;\n};\n\nDecoderBuffer.prototype.raw = function raw(save) {\n  return this.base.slice(save ? save.offset : this.offset, this.length);\n};\n\nfunction EncoderBuffer(value, reporter) {\n  if (Array.isArray(value)) {\n    this.length = 0;\n    this.value = value.map(function(item) {\n      if (!EncoderBuffer.isEncoderBuffer(item))\n        item = new EncoderBuffer(item, reporter);\n      this.length += item.length;\n      return item;\n    }, this);\n  } else if (typeof value === 'number') {\n    if (!(0 <= value && value <= 0xff))\n      return reporter.error('non-byte EncoderBuffer value');\n    this.value = value;\n    this.length = 1;\n  } else if (typeof value === 'string') {\n    this.value = value;\n    this.length = Buffer.byteLength(value);\n  } else if (Buffer.isBuffer(value)) {\n    this.value = value;\n    this.length = value.length;\n  } else {\n    return reporter.error('Unsupported type: ' + typeof value);\n  }\n}\nexports.EncoderBuffer = EncoderBuffer;\n\nEncoderBuffer.isEncoderBuffer = function isEncoderBuffer(data) {\n  if (data instanceof EncoderBuffer) {\n    return true;\n  }\n\n  // Or accept compatible API\n  const isCompatible = typeof data === 'object' &&\n    data.constructor.name === 'EncoderBuffer' &&\n    typeof data.length === 'number' &&\n    typeof data.join === 'function';\n\n  return isCompatible;\n};\n\nEncoderBuffer.prototype.join = function join(out, offset) {\n  if (!out)\n    out = Buffer.alloc(this.length);\n  if (!offset)\n    offset = 0;\n\n  if (this.length === 0)\n    return out;\n\n  if (Array.isArray(this.value)) {\n    this.value.forEach(function(item) {\n      item.join(out, offset);\n      offset += item.length;\n    });\n  } else {\n    if (typeof this.value === 'number')\n      out[offset] = this.value;\n    else if (typeof this.value === 'string')\n      out.write(this.value, offset);\n    else if (Buffer.isBuffer(this.value))\n      this.value.copy(out, offset);\n    offset += this.length;\n  }\n\n  return out;\n};\n","'use strict';\n\nconst Reporter = require('../base/reporter').Reporter;\nconst EncoderBuffer = require('../base/buffer').EncoderBuffer;\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst assert = require('minimalistic-assert');\n\n// Supported tags\nconst tags = [\n  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',\n  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',\n  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',\n  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'\n];\n\n// Public methods list\nconst methods = [\n  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',\n  'any', 'contains'\n].concat(tags);\n\n// Overrided methods list\nconst overrided = [\n  '_peekTag', '_decodeTag', '_use',\n  '_decodeStr', '_decodeObjid', '_decodeTime',\n  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',\n\n  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',\n  '_encodeNull', '_encodeInt', '_encodeBool'\n];\n\nfunction Node(enc, parent, name) {\n  const state = {};\n  this._baseState = state;\n\n  state.name = name;\n  state.enc = enc;\n\n  state.parent = parent || null;\n  state.children = null;\n\n  // State\n  state.tag = null;\n  state.args = null;\n  state.reverseArgs = null;\n  state.choice = null;\n  state.optional = false;\n  state.any = false;\n  state.obj = false;\n  state.use = null;\n  state.useDecoder = null;\n  state.key = null;\n  state['default'] = null;\n  state.explicit = null;\n  state.implicit = null;\n  state.contains = null;\n\n  // Should create new instance on each method\n  if (!state.parent) {\n    state.children = [];\n    this._wrap();\n  }\n}\nmodule.exports = Node;\n\nconst stateProps = [\n  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',\n  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',\n  'implicit', 'contains'\n];\n\nNode.prototype.clone = function clone() {\n  const state = this._baseState;\n  const cstate = {};\n  stateProps.forEach(function(prop) {\n    cstate[prop] = state[prop];\n  });\n  const res = new this.constructor(cstate.parent);\n  res._baseState = cstate;\n  return res;\n};\n\nNode.prototype._wrap = function wrap() {\n  const state = this._baseState;\n  methods.forEach(function(method) {\n    this[method] = function _wrappedMethod() {\n      const clone = new this.constructor(this);\n      state.children.push(clone);\n      return clone[method].apply(clone, arguments);\n    };\n  }, this);\n};\n\nNode.prototype._init = function init(body) {\n  const state = this._baseState;\n\n  assert(state.parent === null);\n  body.call(this);\n\n  // Filter children\n  state.children = state.children.filter(function(child) {\n    return child._baseState.parent === this;\n  }, this);\n  assert.equal(state.children.length, 1, 'Root node can have only one child');\n};\n\nNode.prototype._useArgs = function useArgs(args) {\n  const state = this._baseState;\n\n  // Filter children and args\n  const children = args.filter(function(arg) {\n    return arg instanceof this.constructor;\n  }, this);\n  args = args.filter(function(arg) {\n    return !(arg instanceof this.constructor);\n  }, this);\n\n  if (children.length !== 0) {\n    assert(state.children === null);\n    state.children = children;\n\n    // Replace parent to maintain backward link\n    children.forEach(function(child) {\n      child._baseState.parent = this;\n    }, this);\n  }\n  if (args.length !== 0) {\n    assert(state.args === null);\n    state.args = args;\n    state.reverseArgs = args.map(function(arg) {\n      if (typeof arg !== 'object' || arg.constructor !== Object)\n        return arg;\n\n      const res = {};\n      Object.keys(arg).forEach(function(key) {\n        if (key == (key | 0))\n          key |= 0;\n        const value = arg[key];\n        res[value] = key;\n      });\n      return res;\n    });\n  }\n};\n\n//\n// Overrided methods\n//\n\noverrided.forEach(function(method) {\n  Node.prototype[method] = function _overrided() {\n    const state = this._baseState;\n    throw new Error(method + ' not implemented for encoding: ' + state.enc);\n  };\n});\n\n//\n// Public methods\n//\n\ntags.forEach(function(tag) {\n  Node.prototype[tag] = function _tagMethod() {\n    const state = this._baseState;\n    const args = Array.prototype.slice.call(arguments);\n\n    assert(state.tag === null);\n    state.tag = tag;\n\n    this._useArgs(args);\n\n    return this;\n  };\n});\n\nNode.prototype.use = function use(item) {\n  assert(item);\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.use = item;\n\n  return this;\n};\n\nNode.prototype.optional = function optional() {\n  const state = this._baseState;\n\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.def = function def(val) {\n  const state = this._baseState;\n\n  assert(state['default'] === null);\n  state['default'] = val;\n  state.optional = true;\n\n  return this;\n};\n\nNode.prototype.explicit = function explicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.explicit = num;\n\n  return this;\n};\n\nNode.prototype.implicit = function implicit(num) {\n  const state = this._baseState;\n\n  assert(state.explicit === null && state.implicit === null);\n  state.implicit = num;\n\n  return this;\n};\n\nNode.prototype.obj = function obj() {\n  const state = this._baseState;\n  const args = Array.prototype.slice.call(arguments);\n\n  state.obj = true;\n\n  if (args.length !== 0)\n    this._useArgs(args);\n\n  return this;\n};\n\nNode.prototype.key = function key(newKey) {\n  const state = this._baseState;\n\n  assert(state.key === null);\n  state.key = newKey;\n\n  return this;\n};\n\nNode.prototype.any = function any() {\n  const state = this._baseState;\n\n  state.any = true;\n\n  return this;\n};\n\nNode.prototype.choice = function choice(obj) {\n  const state = this._baseState;\n\n  assert(state.choice === null);\n  state.choice = obj;\n  this._useArgs(Object.keys(obj).map(function(key) {\n    return obj[key];\n  }));\n\n  return this;\n};\n\nNode.prototype.contains = function contains(item) {\n  const state = this._baseState;\n\n  assert(state.use === null);\n  state.contains = item;\n\n  return this;\n};\n\n//\n// Decoding\n//\n\nNode.prototype._decode = function decode(input, options) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return input.wrapResult(state.children[0]._decode(input, options));\n\n  let result = state['default'];\n  let present = true;\n\n  let prevKey = null;\n  if (state.key !== null)\n    prevKey = input.enterKey(state.key);\n\n  // Check if tag is there\n  if (state.optional) {\n    let tag = null;\n    if (state.explicit !== null)\n      tag = state.explicit;\n    else if (state.implicit !== null)\n      tag = state.implicit;\n    else if (state.tag !== null)\n      tag = state.tag;\n\n    if (tag === null && !state.any) {\n      // Trial and Error\n      const save = input.save();\n      try {\n        if (state.choice === null)\n          this._decodeGeneric(state.tag, input, options);\n        else\n          this._decodeChoice(input, options);\n        present = true;\n      } catch (e) {\n        present = false;\n      }\n      input.restore(save);\n    } else {\n      present = this._peekTag(input, tag, state.any);\n\n      if (input.isError(present))\n        return present;\n    }\n  }\n\n  // Push object on stack\n  let prevObj;\n  if (state.obj && present)\n    prevObj = input.enterObject();\n\n  if (present) {\n    // Unwrap explicit values\n    if (state.explicit !== null) {\n      const explicit = this._decodeTag(input, state.explicit);\n      if (input.isError(explicit))\n        return explicit;\n      input = explicit;\n    }\n\n    const start = input.offset;\n\n    // Unwrap implicit and normal values\n    if (state.use === null && state.choice === null) {\n      let save;\n      if (state.any)\n        save = input.save();\n      const body = this._decodeTag(\n        input,\n        state.implicit !== null ? state.implicit : state.tag,\n        state.any\n      );\n      if (input.isError(body))\n        return body;\n\n      if (state.any)\n        result = input.raw(save);\n      else\n        input = body;\n    }\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), start, input.length, 'tagged');\n\n    if (options && options.track && state.tag !== null)\n      options.track(input.path(), input.offset, input.length, 'content');\n\n    // Select proper method for tag\n    if (state.any) {\n      // no-op\n    } else if (state.choice === null) {\n      result = this._decodeGeneric(state.tag, input, options);\n    } else {\n      result = this._decodeChoice(input, options);\n    }\n\n    if (input.isError(result))\n      return result;\n\n    // Decode children\n    if (!state.any && state.choice === null && state.children !== null) {\n      state.children.forEach(function decodeChildren(child) {\n        // NOTE: We are ignoring errors here, to let parser continue with other\n        // parts of encoded data\n        child._decode(input, options);\n      });\n    }\n\n    // Decode contained/encoded by schema, only in bit or octet strings\n    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {\n      const data = new DecoderBuffer(result);\n      result = this._getUse(state.contains, input._reporterState.obj)\n        ._decode(data, options);\n    }\n  }\n\n  // Pop object\n  if (state.obj && present)\n    result = input.leaveObject(prevObj);\n\n  // Set key\n  if (state.key !== null && (result !== null || present === true))\n    input.leaveKey(prevKey, state.key, result);\n  else if (prevKey !== null)\n    input.exitKey(prevKey);\n\n  return result;\n};\n\nNode.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {\n  const state = this._baseState;\n\n  if (tag === 'seq' || tag === 'set')\n    return null;\n  if (tag === 'seqof' || tag === 'setof')\n    return this._decodeList(input, tag, state.args[0], options);\n  else if (/str$/.test(tag))\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'objid' && state.args)\n    return this._decodeObjid(input, state.args[0], state.args[1], options);\n  else if (tag === 'objid')\n    return this._decodeObjid(input, null, null, options);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._decodeTime(input, tag, options);\n  else if (tag === 'null_')\n    return this._decodeNull(input, options);\n  else if (tag === 'bool')\n    return this._decodeBool(input, options);\n  else if (tag === 'objDesc')\n    return this._decodeStr(input, tag, options);\n  else if (tag === 'int' || tag === 'enum')\n    return this._decodeInt(input, state.args && state.args[0], options);\n\n  if (state.use !== null) {\n    return this._getUse(state.use, input._reporterState.obj)\n      ._decode(input, options);\n  } else {\n    return input.error('unknown tag: ' + tag);\n  }\n};\n\nNode.prototype._getUse = function _getUse(entity, obj) {\n\n  const state = this._baseState;\n  // Create altered use decoder if implicit is set\n  state.useDecoder = this._use(entity, obj);\n  assert(state.useDecoder._baseState.parent === null);\n  state.useDecoder = state.useDecoder._baseState.children[0];\n  if (state.implicit !== state.useDecoder._baseState.implicit) {\n    state.useDecoder = state.useDecoder.clone();\n    state.useDecoder._baseState.implicit = state.implicit;\n  }\n  return state.useDecoder;\n};\n\nNode.prototype._decodeChoice = function decodeChoice(input, options) {\n  const state = this._baseState;\n  let result = null;\n  let match = false;\n\n  Object.keys(state.choice).some(function(key) {\n    const save = input.save();\n    const node = state.choice[key];\n    try {\n      const value = node._decode(input, options);\n      if (input.isError(value))\n        return false;\n\n      result = { type: key, value: value };\n      match = true;\n    } catch (e) {\n      input.restore(save);\n      return false;\n    }\n    return true;\n  }, this);\n\n  if (!match)\n    return input.error('Choice not matched');\n\n  return result;\n};\n\n//\n// Encoding\n//\n\nNode.prototype._createEncoderBuffer = function createEncoderBuffer(data) {\n  return new EncoderBuffer(data, this.reporter);\n};\n\nNode.prototype._encode = function encode(data, reporter, parent) {\n  const state = this._baseState;\n  if (state['default'] !== null && state['default'] === data)\n    return;\n\n  const result = this._encodeValue(data, reporter, parent);\n  if (result === undefined)\n    return;\n\n  if (this._skipDefault(result, reporter, parent))\n    return;\n\n  return result;\n};\n\nNode.prototype._encodeValue = function encode(data, reporter, parent) {\n  const state = this._baseState;\n\n  // Decode root node\n  if (state.parent === null)\n    return state.children[0]._encode(data, reporter || new Reporter());\n\n  let result = null;\n\n  // Set reporter to share it with a child class\n  this.reporter = reporter;\n\n  // Check if data is there\n  if (state.optional && data === undefined) {\n    if (state['default'] !== null)\n      data = state['default'];\n    else\n      return;\n  }\n\n  // Encode children first\n  let content = null;\n  let primitive = false;\n  if (state.any) {\n    // Anything that was given is translated to buffer\n    result = this._createEncoderBuffer(data);\n  } else if (state.choice) {\n    result = this._encodeChoice(data, reporter);\n  } else if (state.contains) {\n    content = this._getUse(state.contains, parent)._encode(data, reporter);\n    primitive = true;\n  } else if (state.children) {\n    content = state.children.map(function(child) {\n      if (child._baseState.tag === 'null_')\n        return child._encode(null, reporter, data);\n\n      if (child._baseState.key === null)\n        return reporter.error('Child should have a key');\n      const prevKey = reporter.enterKey(child._baseState.key);\n\n      if (typeof data !== 'object')\n        return reporter.error('Child expected, but input is not object');\n\n      const res = child._encode(data[child._baseState.key], reporter, data);\n      reporter.leaveKey(prevKey);\n\n      return res;\n    }, this).filter(function(child) {\n      return child;\n    });\n    content = this._createEncoderBuffer(content);\n  } else {\n    if (state.tag === 'seqof' || state.tag === 'setof') {\n      // TODO(indutny): this should be thrown on DSL level\n      if (!(state.args && state.args.length === 1))\n        return reporter.error('Too many args for : ' + state.tag);\n\n      if (!Array.isArray(data))\n        return reporter.error('seqof/setof, but data is not Array');\n\n      const child = this.clone();\n      child._baseState.implicit = null;\n      content = this._createEncoderBuffer(data.map(function(item) {\n        const state = this._baseState;\n\n        return this._getUse(state.args[0], data)._encode(item, reporter);\n      }, child));\n    } else if (state.use !== null) {\n      result = this._getUse(state.use, parent)._encode(data, reporter);\n    } else {\n      content = this._encodePrimitive(state.tag, data);\n      primitive = true;\n    }\n  }\n\n  // Encode data itself\n  if (!state.any && state.choice === null) {\n    const tag = state.implicit !== null ? state.implicit : state.tag;\n    const cls = state.implicit === null ? 'universal' : 'context';\n\n    if (tag === null) {\n      if (state.use === null)\n        reporter.error('Tag could be omitted only for .use()');\n    } else {\n      if (state.use === null)\n        result = this._encodeComposite(tag, primitive, cls, content);\n    }\n  }\n\n  // Wrap in explicit\n  if (state.explicit !== null)\n    result = this._encodeComposite(state.explicit, false, 'context', result);\n\n  return result;\n};\n\nNode.prototype._encodeChoice = function encodeChoice(data, reporter) {\n  const state = this._baseState;\n\n  const node = state.choice[data.type];\n  if (!node) {\n    assert(\n      false,\n      data.type + ' not found in ' +\n            JSON.stringify(Object.keys(state.choice)));\n  }\n  return node._encode(data.value, reporter);\n};\n\nNode.prototype._encodePrimitive = function encodePrimitive(tag, data) {\n  const state = this._baseState;\n\n  if (/str$/.test(tag))\n    return this._encodeStr(data, tag);\n  else if (tag === 'objid' && state.args)\n    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);\n  else if (tag === 'objid')\n    return this._encodeObjid(data, null, null);\n  else if (tag === 'gentime' || tag === 'utctime')\n    return this._encodeTime(data, tag);\n  else if (tag === 'null_')\n    return this._encodeNull();\n  else if (tag === 'int' || tag === 'enum')\n    return this._encodeInt(data, state.args && state.reverseArgs[0]);\n  else if (tag === 'bool')\n    return this._encodeBool(data);\n  else if (tag === 'objDesc')\n    return this._encodeStr(data, tag);\n  else\n    throw new Error('Unsupported tag: ' + tag);\n};\n\nNode.prototype._isNumstr = function isNumstr(str) {\n  return /^[0-9 ]*$/.test(str);\n};\n\nNode.prototype._isPrintstr = function isPrintstr(str) {\n  return /^[A-Za-z0-9 '()+,-./:=?]*$/.test(str);\n};\n","'use strict';\n\n// Helper\nfunction reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n}\n\nexports.tagClass = {\n  0: 'universal',\n  1: 'application',\n  2: 'context',\n  3: 'private'\n};\nexports.tagClassByName = reverse(exports.tagClass);\n\nexports.tag = {\n  0x00: 'end',\n  0x01: 'bool',\n  0x02: 'int',\n  0x03: 'bitstr',\n  0x04: 'octstr',\n  0x05: 'null_',\n  0x06: 'objid',\n  0x07: 'objDesc',\n  0x08: 'external',\n  0x09: 'real',\n  0x0a: 'enum',\n  0x0b: 'embed',\n  0x0c: 'utf8str',\n  0x0d: 'relativeOid',\n  0x10: 'seq',\n  0x11: 'set',\n  0x12: 'numstr',\n  0x13: 'printstr',\n  0x14: 't61str',\n  0x15: 'videostr',\n  0x16: 'ia5str',\n  0x17: 'utctime',\n  0x18: 'gentime',\n  0x19: 'graphstr',\n  0x1a: 'iso646str',\n  0x1b: 'genstr',\n  0x1c: 'unistr',\n  0x1d: 'charstr',\n  0x1e: 'bmpstr'\n};\nexports.tagByName = reverse(exports.tag);\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DEREncoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DEREncoder;\n\nDEREncoder.prototype.encode = function encode(data, reporter) {\n  return this.tree._encode(data, reporter).join();\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._encodeComposite = function encodeComposite(tag,\n  primitive,\n  cls,\n  content) {\n  const encodedTag = encodeTag(tag, primitive, cls, this.reporter);\n\n  // Short form\n  if (content.length < 0x80) {\n    const header = Buffer.alloc(2);\n    header[0] = encodedTag;\n    header[1] = content.length;\n    return this._createEncoderBuffer([ header, content ]);\n  }\n\n  // Long form\n  // Count octets required to store length\n  let lenOctets = 1;\n  for (let i = content.length; i >= 0x100; i >>= 8)\n    lenOctets++;\n\n  const header = Buffer.alloc(1 + 1 + lenOctets);\n  header[0] = encodedTag;\n  header[1] = 0x80 | lenOctets;\n\n  for (let i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)\n    header[i] = j & 0xff;\n\n  return this._createEncoderBuffer([ header, content ]);\n};\n\nDERNode.prototype._encodeStr = function encodeStr(str, tag) {\n  if (tag === 'bitstr') {\n    return this._createEncoderBuffer([ str.unused | 0, str.data ]);\n  } else if (tag === 'bmpstr') {\n    const buf = Buffer.alloc(str.length * 2);\n    for (let i = 0; i < str.length; i++) {\n      buf.writeUInt16BE(str.charCodeAt(i), i * 2);\n    }\n    return this._createEncoderBuffer(buf);\n  } else if (tag === 'numstr') {\n    if (!this._isNumstr(str)) {\n      return this.reporter.error('Encoding of string type: numstr supports ' +\n                                 'only digits and space');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'printstr') {\n    if (!this._isPrintstr(str)) {\n      return this.reporter.error('Encoding of string type: printstr supports ' +\n                                 'only latin upper and lower case letters, ' +\n                                 'digits, space, apostrophe, left and rigth ' +\n                                 'parenthesis, plus sign, comma, hyphen, ' +\n                                 'dot, slash, colon, equal sign, ' +\n                                 'question mark');\n    }\n    return this._createEncoderBuffer(str);\n  } else if (/str$/.test(tag)) {\n    return this._createEncoderBuffer(str);\n  } else if (tag === 'objDesc') {\n    return this._createEncoderBuffer(str);\n  } else {\n    return this.reporter.error('Encoding of string type: ' + tag +\n                               ' unsupported');\n  }\n};\n\nDERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {\n  if (typeof id === 'string') {\n    if (!values)\n      return this.reporter.error('string objid given, but no values map found');\n    if (!values.hasOwnProperty(id))\n      return this.reporter.error('objid not found in values map');\n    id = values[id].split(/[\\s.]+/g);\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  } else if (Array.isArray(id)) {\n    id = id.slice();\n    for (let i = 0; i < id.length; i++)\n      id[i] |= 0;\n  }\n\n  if (!Array.isArray(id)) {\n    return this.reporter.error('objid() should be either array or string, ' +\n                               'got: ' + JSON.stringify(id));\n  }\n\n  if (!relative) {\n    if (id[1] >= 40)\n      return this.reporter.error('Second objid identifier OOB');\n    id.splice(0, 2, id[0] * 40 + id[1]);\n  }\n\n  // Count number of octets\n  let size = 0;\n  for (let i = 0; i < id.length; i++) {\n    let ident = id[i];\n    for (size++; ident >= 0x80; ident >>= 7)\n      size++;\n  }\n\n  const objid = Buffer.alloc(size);\n  let offset = objid.length - 1;\n  for (let i = id.length - 1; i >= 0; i--) {\n    let ident = id[i];\n    objid[offset--] = ident & 0x7f;\n    while ((ident >>= 7) > 0)\n      objid[offset--] = 0x80 | (ident & 0x7f);\n  }\n\n  return this._createEncoderBuffer(objid);\n};\n\nfunction two(num) {\n  if (num < 10)\n    return '0' + num;\n  else\n    return num;\n}\n\nDERNode.prototype._encodeTime = function encodeTime(time, tag) {\n  let str;\n  const date = new Date(time);\n\n  if (tag === 'gentime') {\n    str = [\n      two(date.getUTCFullYear()),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else if (tag === 'utctime') {\n    str = [\n      two(date.getUTCFullYear() % 100),\n      two(date.getUTCMonth() + 1),\n      two(date.getUTCDate()),\n      two(date.getUTCHours()),\n      two(date.getUTCMinutes()),\n      two(date.getUTCSeconds()),\n      'Z'\n    ].join('');\n  } else {\n    this.reporter.error('Encoding ' + tag + ' time is not supported yet');\n  }\n\n  return this._encodeStr(str, 'octstr');\n};\n\nDERNode.prototype._encodeNull = function encodeNull() {\n  return this._createEncoderBuffer('');\n};\n\nDERNode.prototype._encodeInt = function encodeInt(num, values) {\n  if (typeof num === 'string') {\n    if (!values)\n      return this.reporter.error('String int or enum given, but no values map');\n    if (!values.hasOwnProperty(num)) {\n      return this.reporter.error('Values map doesn\\'t contain: ' +\n                                 JSON.stringify(num));\n    }\n    num = values[num];\n  }\n\n  // Bignum, assume big endian\n  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {\n    const numArray = num.toArray();\n    if (!num.sign && numArray[0] & 0x80) {\n      numArray.unshift(0);\n    }\n    num = Buffer.from(numArray);\n  }\n\n  if (Buffer.isBuffer(num)) {\n    let size = num.length;\n    if (num.length === 0)\n      size++;\n\n    const out = Buffer.alloc(size);\n    num.copy(out);\n    if (num.length === 0)\n      out[0] = 0;\n    return this._createEncoderBuffer(out);\n  }\n\n  if (num < 0x80)\n    return this._createEncoderBuffer(num);\n\n  if (num < 0x100)\n    return this._createEncoderBuffer([0, num]);\n\n  let size = 1;\n  for (let i = num; i >= 0x100; i >>= 8)\n    size++;\n\n  const out = new Array(size);\n  for (let i = out.length - 1; i >= 0; i--) {\n    out[i] = num & 0xff;\n    num >>= 8;\n  }\n  if(out[0] & 0x80) {\n    out.unshift(0);\n  }\n\n  return this._createEncoderBuffer(Buffer.from(out));\n};\n\nDERNode.prototype._encodeBool = function encodeBool(value) {\n  return this._createEncoderBuffer(value ? 0xff : 0);\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getEncoder('der').tree;\n};\n\nDERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {\n  const state = this._baseState;\n  let i;\n  if (state['default'] === null)\n    return false;\n\n  const data = dataBuffer.join();\n  if (state.defaultBuffer === undefined)\n    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();\n\n  if (data.length !== state.defaultBuffer.length)\n    return false;\n\n  for (i=0; i < data.length; i++)\n    if (data[i] !== state.defaultBuffer[i])\n      return false;\n\n  return true;\n};\n\n// Utility methods\n\nfunction encodeTag(tag, primitive, cls, reporter) {\n  let res;\n\n  if (tag === 'seqof')\n    tag = 'seq';\n  else if (tag === 'setof')\n    tag = 'set';\n\n  if (der.tagByName.hasOwnProperty(tag))\n    res = der.tagByName[tag];\n  else if (typeof tag === 'number' && (tag | 0) === tag)\n    res = tag;\n  else\n    return reporter.error('Unknown tag: ' + tag);\n\n  if (res >= 0x1f)\n    return reporter.error('Multi-octet tag encoding unsupported');\n\n  if (!primitive)\n    res |= 0x20;\n\n  res |= (der.tagClassByName[cls || 'universal'] << 6);\n\n  return res;\n}\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst DEREncoder = require('./der');\n\nfunction PEMEncoder(entity) {\n  DEREncoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMEncoder, DEREncoder);\nmodule.exports = PEMEncoder;\n\nPEMEncoder.prototype.encode = function encode(data, options) {\n  const buf = DEREncoder.prototype.encode.call(this, data);\n\n  const p = buf.toString('base64');\n  const out = [ '-----BEGIN ' + options.label + '-----' ];\n  for (let i = 0; i < p.length; i += 64)\n    out.push(p.slice(i, i + 64));\n  out.push('-----END ' + options.label + '-----');\n  return out.join('\\n');\n};\n","'use strict';\n\nconst encoders = exports;\n\nencoders.der = require('./der');\nencoders.pem = require('./pem');\n","'use strict';\n\nconst inherits = require('inherits');\n\nconst bignum = require('bn.js');\nconst DecoderBuffer = require('../base/buffer').DecoderBuffer;\nconst Node = require('../base/node');\n\n// Import DER constants\nconst der = require('../constants/der');\n\nfunction DERDecoder(entity) {\n  this.enc = 'der';\n  this.name = entity.name;\n  this.entity = entity;\n\n  // Construct base tree\n  this.tree = new DERNode();\n  this.tree._init(entity.body);\n}\nmodule.exports = DERDecoder;\n\nDERDecoder.prototype.decode = function decode(data, options) {\n  if (!DecoderBuffer.isDecoderBuffer(data)) {\n    data = new DecoderBuffer(data, options);\n  }\n\n  return this.tree._decode(data, options);\n};\n\n// Tree methods\n\nfunction DERNode(parent) {\n  Node.call(this, 'der', parent);\n}\ninherits(DERNode, Node);\n\nDERNode.prototype._peekTag = function peekTag(buffer, tag, any) {\n  if (buffer.isEmpty())\n    return false;\n\n  const state = buffer.save();\n  const decodedTag = derDecodeTag(buffer, 'Failed to peek tag: \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  buffer.restore(state);\n\n  return decodedTag.tag === tag || decodedTag.tagStr === tag ||\n    (decodedTag.tagStr + 'of') === tag || any;\n};\n\nDERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {\n  const decodedTag = derDecodeTag(buffer,\n    'Failed to decode tag of \"' + tag + '\"');\n  if (buffer.isError(decodedTag))\n    return decodedTag;\n\n  let len = derDecodeLen(buffer,\n    decodedTag.primitive,\n    'Failed to get length of \"' + tag + '\"');\n\n  // Failure\n  if (buffer.isError(len))\n    return len;\n\n  if (!any &&\n      decodedTag.tag !== tag &&\n      decodedTag.tagStr !== tag &&\n      decodedTag.tagStr + 'of' !== tag) {\n    return buffer.error('Failed to match tag: \"' + tag + '\"');\n  }\n\n  if (decodedTag.primitive || len !== null)\n    return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n\n  // Indefinite length... find END tag\n  const state = buffer.save();\n  const res = this._skipUntilEnd(\n    buffer,\n    'Failed to skip indefinite length body: \"' + this.tag + '\"');\n  if (buffer.isError(res))\n    return res;\n\n  len = buffer.offset - state.offset;\n  buffer.restore(state);\n  return buffer.skip(len, 'Failed to match body of: \"' + tag + '\"');\n};\n\nDERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {\n  for (;;) {\n    const tag = derDecodeTag(buffer, fail);\n    if (buffer.isError(tag))\n      return tag;\n    const len = derDecodeLen(buffer, tag.primitive, fail);\n    if (buffer.isError(len))\n      return len;\n\n    let res;\n    if (tag.primitive || len !== null)\n      res = buffer.skip(len);\n    else\n      res = this._skipUntilEnd(buffer, fail);\n\n    // Failure\n    if (buffer.isError(res))\n      return res;\n\n    if (tag.tagStr === 'end')\n      break;\n  }\n};\n\nDERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,\n  options) {\n  const result = [];\n  while (!buffer.isEmpty()) {\n    const possibleEnd = this._peekTag(buffer, 'end');\n    if (buffer.isError(possibleEnd))\n      return possibleEnd;\n\n    const res = decoder.decode(buffer, 'der', options);\n    if (buffer.isError(res) && possibleEnd)\n      break;\n    result.push(res);\n  }\n  return result;\n};\n\nDERNode.prototype._decodeStr = function decodeStr(buffer, tag) {\n  if (tag === 'bitstr') {\n    const unused = buffer.readUInt8();\n    if (buffer.isError(unused))\n      return unused;\n    return { unused: unused, data: buffer.raw() };\n  } else if (tag === 'bmpstr') {\n    const raw = buffer.raw();\n    if (raw.length % 2 === 1)\n      return buffer.error('Decoding of string type: bmpstr length mismatch');\n\n    let str = '';\n    for (let i = 0; i < raw.length / 2; i++) {\n      str += String.fromCharCode(raw.readUInt16BE(i * 2));\n    }\n    return str;\n  } else if (tag === 'numstr') {\n    const numstr = buffer.raw().toString('ascii');\n    if (!this._isNumstr(numstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'numstr unsupported characters');\n    }\n    return numstr;\n  } else if (tag === 'octstr') {\n    return buffer.raw();\n  } else if (tag === 'objDesc') {\n    return buffer.raw();\n  } else if (tag === 'printstr') {\n    const printstr = buffer.raw().toString('ascii');\n    if (!this._isPrintstr(printstr)) {\n      return buffer.error('Decoding of string type: ' +\n                          'printstr unsupported characters');\n    }\n    return printstr;\n  } else if (/str$/.test(tag)) {\n    return buffer.raw().toString();\n  } else {\n    return buffer.error('Decoding of string type: ' + tag + ' unsupported');\n  }\n};\n\nDERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {\n  let result;\n  const identifiers = [];\n  let ident = 0;\n  let subident = 0;\n  while (!buffer.isEmpty()) {\n    subident = buffer.readUInt8();\n    ident <<= 7;\n    ident |= subident & 0x7f;\n    if ((subident & 0x80) === 0) {\n      identifiers.push(ident);\n      ident = 0;\n    }\n  }\n  if (subident & 0x80)\n    identifiers.push(ident);\n\n  const first = (identifiers[0] / 40) | 0;\n  const second = identifiers[0] % 40;\n\n  if (relative)\n    result = identifiers;\n  else\n    result = [first, second].concat(identifiers.slice(1));\n\n  if (values) {\n    let tmp = values[result.join(' ')];\n    if (tmp === undefined)\n      tmp = values[result.join('.')];\n    if (tmp !== undefined)\n      result = tmp;\n  }\n\n  return result;\n};\n\nDERNode.prototype._decodeTime = function decodeTime(buffer, tag) {\n  const str = buffer.raw().toString();\n\n  let year;\n  let mon;\n  let day;\n  let hour;\n  let min;\n  let sec;\n  if (tag === 'gentime') {\n    year = str.slice(0, 4) | 0;\n    mon = str.slice(4, 6) | 0;\n    day = str.slice(6, 8) | 0;\n    hour = str.slice(8, 10) | 0;\n    min = str.slice(10, 12) | 0;\n    sec = str.slice(12, 14) | 0;\n  } else if (tag === 'utctime') {\n    year = str.slice(0, 2) | 0;\n    mon = str.slice(2, 4) | 0;\n    day = str.slice(4, 6) | 0;\n    hour = str.slice(6, 8) | 0;\n    min = str.slice(8, 10) | 0;\n    sec = str.slice(10, 12) | 0;\n    if (year < 70)\n      year = 2000 + year;\n    else\n      year = 1900 + year;\n  } else {\n    return buffer.error('Decoding ' + tag + ' time is not supported yet');\n  }\n\n  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);\n};\n\nDERNode.prototype._decodeNull = function decodeNull() {\n  return null;\n};\n\nDERNode.prototype._decodeBool = function decodeBool(buffer) {\n  const res = buffer.readUInt8();\n  if (buffer.isError(res))\n    return res;\n  else\n    return res !== 0;\n};\n\nDERNode.prototype._decodeInt = function decodeInt(buffer, values) {\n  // Bigint, return as it is (assume big endian)\n  const raw = buffer.raw();\n  let res = new bignum(raw);\n\n  if (values)\n    res = values[res.toString(10)] || res;\n\n  return res;\n};\n\nDERNode.prototype._use = function use(entity, obj) {\n  if (typeof entity === 'function')\n    entity = entity(obj);\n  return entity._getDecoder('der').tree;\n};\n\n// Utility methods\n\nfunction derDecodeTag(buf, fail) {\n  let tag = buf.readUInt8(fail);\n  if (buf.isError(tag))\n    return tag;\n\n  const cls = der.tagClass[tag >> 6];\n  const primitive = (tag & 0x20) === 0;\n\n  // Multi-octet tag - load\n  if ((tag & 0x1f) === 0x1f) {\n    let oct = tag;\n    tag = 0;\n    while ((oct & 0x80) === 0x80) {\n      oct = buf.readUInt8(fail);\n      if (buf.isError(oct))\n        return oct;\n\n      tag <<= 7;\n      tag |= oct & 0x7f;\n    }\n  } else {\n    tag &= 0x1f;\n  }\n  const tagStr = der.tag[tag];\n\n  return {\n    cls: cls,\n    primitive: primitive,\n    tag: tag,\n    tagStr: tagStr\n  };\n}\n\nfunction derDecodeLen(buf, primitive, fail) {\n  let len = buf.readUInt8(fail);\n  if (buf.isError(len))\n    return len;\n\n  // Indefinite form\n  if (!primitive && len === 0x80)\n    return null;\n\n  // Definite form\n  if ((len & 0x80) === 0) {\n    // Short form\n    return len;\n  }\n\n  // Long form\n  const num = len & 0x7f;\n  if (num > 4)\n    return buf.error('length octect is too long');\n\n  len = 0;\n  for (let i = 0; i < num; i++) {\n    len <<= 8;\n    const j = buf.readUInt8(fail);\n    if (buf.isError(j))\n      return j;\n    len |= j;\n  }\n\n  return len;\n}\n","'use strict';\n\nconst inherits = require('inherits');\nconst Buffer = require('safer-buffer').Buffer;\n\nconst DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n}\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  const lines = data.toString().split(/[\\r\\n]+/g);\n\n  const label = options.label.toUpperCase();\n\n  const re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  let start = -1;\n  let end = -1;\n  for (let i = 0; i < lines.length; i++) {\n    const match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  const base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9+/=]+/gi, '');\n\n  const input = Buffer.from(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","'use strict';\n\nconst decoders = exports;\n\ndecoders.der = require('./der');\ndecoders.pem = require('./pem');\n","'use strict';\n\nconst encoders = require('./encoders');\nconst decoders = require('./decoders');\nconst inherits = require('inherits');\n\nconst api = exports;\n\napi.define = function define(name, body) {\n  return new Entity(name, body);\n};\n\nfunction Entity(name, body) {\n  this.name = name;\n  this.body = body;\n\n  this.decoders = {};\n  this.encoders = {};\n}\n\nEntity.prototype._createNamed = function createNamed(Base) {\n  const name = this.name;\n\n  function Generated(entity) {\n    this._initNamed(entity, name);\n  }\n  inherits(Generated, Base);\n  Generated.prototype._initNamed = function _initNamed(entity, name) {\n    Base.call(this, entity, name);\n  };\n\n  return new Generated(this);\n};\n\nEntity.prototype._getDecoder = function _getDecoder(enc) {\n  enc = enc || 'der';\n  // Lazily create decoder\n  if (!this.decoders.hasOwnProperty(enc))\n    this.decoders[enc] = this._createNamed(decoders[enc]);\n  return this.decoders[enc];\n};\n\nEntity.prototype.decode = function decode(data, enc, options) {\n  return this._getDecoder(enc).decode(data, options);\n};\n\nEntity.prototype._getEncoder = function _getEncoder(enc) {\n  enc = enc || 'der';\n  // Lazily create encoder\n  if (!this.encoders.hasOwnProperty(enc))\n    this.encoders[enc] = this._createNamed(encoders[enc]);\n  return this.encoders[enc];\n};\n\nEntity.prototype.encode = function encode(data, enc, /* internal */ reporter) {\n  return this._getEncoder(enc).encode(data, reporter);\n};\n","'use strict';\n\nconst base = exports;\n\nbase.Reporter = require('./reporter').Reporter;\nbase.DecoderBuffer = require('./buffer').DecoderBuffer;\nbase.EncoderBuffer = require('./buffer').EncoderBuffer;\nbase.Node = require('./node');\n","'use strict';\n\nconst constants = exports;\n\n// Helper\nconstants._reverse = function reverse(map) {\n  const res = {};\n\n  Object.keys(map).forEach(function(key) {\n    // Convert key to integer if it is stringified\n    if ((key | 0) == key)\n      key = key | 0;\n\n    const value = map[key];\n    res[value] = key;\n  });\n\n  return res;\n};\n\nconstants.der = require('./der');\n","'use strict';\n\nconst asn1 = exports;\n\nasn1.bignum = require('bn.js');\n\nasn1.define = require('./asn1/api').define;\nasn1.base = require('./asn1/base');\nasn1.constants = require('./asn1/constants');\nasn1.decoders = require('./asn1/decoders');\nasn1.encoders = require('./asn1/encoders');\n","// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js\n// thanks to @Rantanen\n\n'use strict'\n\nvar asn = require('asn1.js')\n\nvar Time = asn.define('Time', function () {\n  this.choice({\n    utcTime: this.utctime(),\n    generalTime: this.gentime()\n  })\n})\n\nvar AttributeTypeValue = asn.define('AttributeTypeValue', function () {\n  this.seq().obj(\n    this.key('type').objid(),\n    this.key('value').any()\n  )\n})\n\nvar AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('parameters').optional(),\n    this.key('curve').objid().optional()\n  )\n})\n\nvar SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\n\nvar RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {\n  this.setof(AttributeTypeValue)\n})\n\nvar RDNSequence = asn.define('RDNSequence', function () {\n  this.seqof(RelativeDistinguishedName)\n})\n\nvar Name = asn.define('Name', function () {\n  this.choice({\n    rdnSequence: this.use(RDNSequence)\n  })\n})\n\nvar Validity = asn.define('Validity', function () {\n  this.seq().obj(\n    this.key('notBefore').use(Time),\n    this.key('notAfter').use(Time)\n  )\n})\n\nvar Extension = asn.define('Extension', function () {\n  this.seq().obj(\n    this.key('extnID').objid(),\n    this.key('critical').bool().def(false),\n    this.key('extnValue').octstr()\n  )\n})\n\nvar TBSCertificate = asn.define('TBSCertificate', function () {\n  this.seq().obj(\n    this.key('version').explicit(0).int().optional(),\n    this.key('serialNumber').int(),\n    this.key('signature').use(AlgorithmIdentifier),\n    this.key('issuer').use(Name),\n    this.key('validity').use(Validity),\n    this.key('subject').use(Name),\n    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),\n    this.key('issuerUniqueID').implicit(1).bitstr().optional(),\n    this.key('subjectUniqueID').implicit(2).bitstr().optional(),\n    this.key('extensions').explicit(3).seqof(Extension).optional()\n  )\n})\n\nvar X509Certificate = asn.define('X509Certificate', function () {\n  this.seq().obj(\n    this.key('tbsCertificate').use(TBSCertificate),\n    this.key('signatureAlgorithm').use(AlgorithmIdentifier),\n    this.key('signatureValue').bitstr()\n  )\n})\n\nmodule.exports = X509Certificate\n","// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js\n// Fedor, you are amazing.\n'use strict'\n\nvar asn1 = require('asn1.js')\n\nexports.certificate = require('./certificate')\n\nvar RSAPrivateKey = asn1.define('RSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('modulus').int(),\n    this.key('publicExponent').int(),\n    this.key('privateExponent').int(),\n    this.key('prime1').int(),\n    this.key('prime2').int(),\n    this.key('exponent1').int(),\n    this.key('exponent2').int(),\n    this.key('coefficient').int()\n  )\n})\nexports.RSAPrivateKey = RSAPrivateKey\n\nvar RSAPublicKey = asn1.define('RSAPublicKey', function () {\n  this.seq().obj(\n    this.key('modulus').int(),\n    this.key('publicExponent').int()\n  )\n})\nexports.RSAPublicKey = RSAPublicKey\n\nvar PublicKey = asn1.define('SubjectPublicKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPublicKey').bitstr()\n  )\n})\nexports.PublicKey = PublicKey\n\nvar AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {\n  this.seq().obj(\n    this.key('algorithm').objid(),\n    this.key('none').null_().optional(),\n    this.key('curve').objid().optional(),\n    this.key('params').seq().obj(\n      this.key('p').int(),\n      this.key('q').int(),\n      this.key('g').int()\n    ).optional()\n  )\n})\n\nvar PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('algorithm').use(AlgorithmIdentifier),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\nexports.PrivateKey = PrivateKeyInfo\nvar EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {\n  this.seq().obj(\n    this.key('algorithm').seq().obj(\n      this.key('id').objid(),\n      this.key('decrypt').seq().obj(\n        this.key('kde').seq().obj(\n          this.key('id').objid(),\n          this.key('kdeparams').seq().obj(\n            this.key('salt').octstr(),\n            this.key('iters').int()\n          )\n        ),\n        this.key('cipher').seq().obj(\n          this.key('algo').objid(),\n          this.key('iv').octstr()\n        )\n      )\n    ),\n    this.key('subjectPrivateKey').octstr()\n  )\n})\n\nexports.EncryptedPrivateKey = EncryptedPrivateKeyInfo\n\nvar DSAPrivateKey = asn1.define('DSAPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('p').int(),\n    this.key('q').int(),\n    this.key('g').int(),\n    this.key('pub_key').int(),\n    this.key('priv_key').int()\n  )\n})\nexports.DSAPrivateKey = DSAPrivateKey\n\nexports.DSAparam = asn1.define('DSAparam', function () {\n  this.int()\n})\n\nvar ECPrivateKey = asn1.define('ECPrivateKey', function () {\n  this.seq().obj(\n    this.key('version').int(),\n    this.key('privateKey').octstr(),\n    this.key('parameters').optional().explicit(0).use(ECParameters),\n    this.key('publicKey').optional().explicit(1).bitstr()\n  )\n})\nexports.ECPrivateKey = ECPrivateKey\n\nvar ECParameters = asn1.define('ECParameters', function () {\n  this.choice({\n    namedCurve: this.objid()\n  })\n})\n\nexports.signature = asn1.define('signature', function () {\n  this.seq().obj(\n    this.key('r').int(),\n    this.key('s').int()\n  )\n})\n","module.exports = {\"2.16.840.1.101.3.4.1.1\": \"aes-128-ecb\",\n\"2.16.840.1.101.3.4.1.2\": \"aes-128-cbc\",\n\"2.16.840.1.101.3.4.1.3\": \"aes-128-ofb\",\n\"2.16.840.1.101.3.4.1.4\": \"aes-128-cfb\",\n\"2.16.840.1.101.3.4.1.21\": \"aes-192-ecb\",\n\"2.16.840.1.101.3.4.1.22\": \"aes-192-cbc\",\n\"2.16.840.1.101.3.4.1.23\": \"aes-192-ofb\",\n\"2.16.840.1.101.3.4.1.24\": \"aes-192-cfb\",\n\"2.16.840.1.101.3.4.1.41\": \"aes-256-ecb\",\n\"2.16.840.1.101.3.4.1.42\": \"aes-256-cbc\",\n\"2.16.840.1.101.3.4.1.43\": \"aes-256-ofb\",\n\"2.16.840.1.101.3.4.1.44\": \"aes-256-cfb\"\n};","// adapted from https://github.com/apatil/pemstrip\nvar findProc = /Proc-Type: 4,ENCRYPTED[\\n\\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\\n\\r]+([0-9A-z\\n\\r+/=]+)[\\n\\r]+/m\nvar startRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----/m\nvar fullRegex = /^-----BEGIN ((?:.*? KEY)|CERTIFICATE)-----([0-9A-z\\n\\r+/=]+)-----END \\1-----$/m\nvar evp = require('evp_bytestokey')\nvar ciphers = require('browserify-aes')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = function (okey, password) {\n  var key = okey.toString()\n  var match = key.match(findProc)\n  var decrypted\n  if (!match) {\n    var match2 = key.match(fullRegex)\n    decrypted = Buffer.from(match2[2].replace(/[\\r\\n]/g, ''), 'base64')\n  } else {\n    var suite = 'aes' + match[1]\n    var iv = Buffer.from(match[2], 'hex')\n    var cipherText = Buffer.from(match[3].replace(/[\\r\\n]/g, ''), 'base64')\n    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key\n    var out = []\n    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)\n    out.push(cipher.update(cipherText))\n    out.push(cipher.final())\n    decrypted = Buffer.concat(out)\n  }\n  var tag = key.match(startRegex)[1]\n  return {\n    tag: tag,\n    data: decrypted\n  }\n}\n","var asn1 = require('./asn1')\nvar aesid = require('./aesid.json')\nvar fixProc = require('./fixProc')\nvar ciphers = require('browserify-aes')\nvar compat = require('pbkdf2')\nvar Buffer = require('safe-buffer').Buffer\nmodule.exports = parseKeys\n\nfunction parseKeys (buffer) {\n  var password\n  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {\n    password = buffer.passphrase\n    buffer = buffer.key\n  }\n  if (typeof buffer === 'string') {\n    buffer = Buffer.from(buffer)\n  }\n\n  var stripped = fixProc(buffer, password)\n\n  var type = stripped.tag\n  var data = stripped.data\n  var subtype, ndata\n  switch (type) {\n    case 'CERTIFICATE':\n      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo\n      // falls through\n    case 'PUBLIC KEY':\n      if (!ndata) {\n        ndata = asn1.PublicKey.decode(data, 'der')\n      }\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')\n        case '1.2.840.10045.2.1':\n          ndata.subjectPrivateKey = ndata.subjectPublicKey\n          return {\n            type: 'ec',\n            data: ndata\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')\n          return {\n            type: 'dsa',\n            data: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'ENCRYPTED PRIVATE KEY':\n      data = asn1.EncryptedPrivateKey.decode(data, 'der')\n      data = decrypt(data, password)\n      // falls through\n    case 'PRIVATE KEY':\n      ndata = asn1.PrivateKey.decode(data, 'der')\n      subtype = ndata.algorithm.algorithm.join('.')\n      switch (subtype) {\n        case '1.2.840.113549.1.1.1':\n          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')\n        case '1.2.840.10045.2.1':\n          return {\n            curve: ndata.algorithm.curve,\n            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey\n          }\n        case '1.2.840.10040.4.1':\n          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')\n          return {\n            type: 'dsa',\n            params: ndata.algorithm.params\n          }\n        default: throw new Error('unknown key id ' + subtype)\n      }\n      // throw new Error('unknown key type ' + type)\n    case 'RSA PUBLIC KEY':\n      return asn1.RSAPublicKey.decode(data, 'der')\n    case 'RSA PRIVATE KEY':\n      return asn1.RSAPrivateKey.decode(data, 'der')\n    case 'DSA PRIVATE KEY':\n      return {\n        type: 'dsa',\n        params: asn1.DSAPrivateKey.decode(data, 'der')\n      }\n    case 'EC PRIVATE KEY':\n      data = asn1.ECPrivateKey.decode(data, 'der')\n      return {\n        curve: data.parameters.value,\n        privateKey: data.privateKey\n      }\n    default: throw new Error('unknown key type ' + type)\n  }\n}\nparseKeys.signature = asn1.signature\nfunction decrypt (data, password) {\n  var salt = data.algorithm.decrypt.kde.kdeparams.salt\n  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)\n  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]\n  var iv = data.algorithm.decrypt.cipher.iv\n  var cipherText = data.subjectPrivateKey\n  var keylen = parseInt(algo.split('-')[1], 10) / 8\n  var key = compat.pbkdf2Sync(password, salt, iters, keylen, 'sha1')\n  var cipher = ciphers.createDecipheriv(algo, key, iv)\n  var out = []\n  out.push(cipher.update(cipherText))\n  out.push(cipher.final())\n  return Buffer.concat(out)\n}\n","module.exports = {\n  \"1.3.132.0.10\": \"secp256k1\",\n  \"1.3.132.0.33\": \"p224\",\n  \"1.2.840.10045.3.1.1\": \"p192\",\n  \"1.2.840.10045.3.1.7\": \"p256\",\n  \"1.3.132.0.34\": \"p384\",\n  \"1.3.132.0.35\": \"p521\"\n}\n;","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar createHmac = require('create-hmac')\nvar crt = require('browserify-rsa')\nvar EC = require('elliptic').ec\nvar BN = require('bn.js')\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction sign (hash, key, hashType, signType, tag) {\n  var priv = parseKeys(key)\n  if (priv.curve) {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n    return ecSign(hash, priv)\n  } else if (priv.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong private key type')\n    return dsaSign(hash, priv, hashType)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = priv.modulus.byteLength()\n  var pad = [0, 1]\n  while (hash.length + pad.length + 1 < len) pad.push(0xff)\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) pad.push(hash[i])\n\n  var out = crt(pad, priv)\n  return out\n}\n\nfunction ecSign (hash, priv) {\n  var curveId = curves[priv.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var key = curve.keyFromPrivate(priv.privateKey)\n  var out = key.sign(hash)\n\n  return Buffer.from(out.toDER())\n}\n\nfunction dsaSign (hash, priv, algo) {\n  var x = priv.params.priv_key\n  var p = priv.params.p\n  var q = priv.params.q\n  var g = priv.params.g\n  var r = new BN(0)\n  var k\n  var H = bits2int(hash, q).mod(q)\n  var s = false\n  var kv = getKey(x, q, hash, algo)\n  while (s === false) {\n    k = makeKey(q, kv, algo)\n    r = makeR(g, k, p, q)\n    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)\n    if (s.cmpn(0) === 0) {\n      s = false\n      r = new BN(0)\n    }\n  }\n  return toDER(r, s)\n}\n\nfunction toDER (r, s) {\n  r = r.toArray()\n  s = s.toArray()\n\n  // Pad values\n  if (r[0] & 0x80) r = [0].concat(r)\n  if (s[0] & 0x80) s = [0].concat(s)\n\n  var total = r.length + s.length + 4\n  var res = [0x30, total, 0x02, r.length]\n  res = res.concat(r, [0x02, s.length], s)\n  return Buffer.from(res)\n}\n\nfunction getKey (x, q, hash, algo) {\n  x = Buffer.from(x.toArray())\n  if (x.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - x.length)\n    x = Buffer.concat([zeros, x])\n  }\n  var hlen = hash.length\n  var hbits = bits2octets(hash, q)\n  var v = Buffer.alloc(hlen)\n  v.fill(1)\n  var k = Buffer.alloc(hlen)\n  k = createHmac(algo, k).update(v).update(Buffer.from([0])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  k = createHmac(algo, k).update(v).update(Buffer.from([1])).update(x).update(hbits).digest()\n  v = createHmac(algo, k).update(v).digest()\n  return { k: k, v: v }\n}\n\nfunction bits2int (obits, q) {\n  var bits = new BN(obits)\n  var shift = (obits.length << 3) - q.bitLength()\n  if (shift > 0) bits.ishrn(shift)\n  return bits\n}\n\nfunction bits2octets (bits, q) {\n  bits = bits2int(bits, q)\n  bits = bits.mod(q)\n  var out = Buffer.from(bits.toArray())\n  if (out.length < q.byteLength()) {\n    var zeros = Buffer.alloc(q.byteLength() - out.length)\n    out = Buffer.concat([zeros, out])\n  }\n  return out\n}\n\nfunction makeKey (q, kv, algo) {\n  var t\n  var k\n\n  do {\n    t = Buffer.alloc(0)\n\n    while (t.length * 8 < q.bitLength()) {\n      kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n      t = Buffer.concat([t, kv.v])\n    }\n\n    k = bits2int(t, q)\n    kv.k = createHmac(algo, kv.k).update(kv.v).update(Buffer.from([0])).digest()\n    kv.v = createHmac(algo, kv.k).update(kv.v).digest()\n  } while (k.cmp(q) !== -1)\n\n  return k\n}\n\nfunction makeR (g, k, p, q) {\n  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)\n}\n\nmodule.exports = sign\nmodule.exports.getKey = getKey\nmodule.exports.makeKey = makeKey\n","// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js\nvar Buffer = require('safe-buffer').Buffer\nvar BN = require('bn.js')\nvar EC = require('elliptic').ec\nvar parseKeys = require('parse-asn1')\nvar curves = require('./curves.json')\n\nfunction verify (sig, hash, key, signType, tag) {\n  var pub = parseKeys(key)\n  if (pub.type === 'ec') {\n    // rsa keys can be interpreted as ecdsa ones in openssl\n    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n    return ecVerify(sig, hash, pub)\n  } else if (pub.type === 'dsa') {\n    if (signType !== 'dsa') throw new Error('wrong public key type')\n    return dsaVerify(sig, hash, pub)\n  } else {\n    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')\n  }\n  hash = Buffer.concat([tag, hash])\n  var len = pub.modulus.byteLength()\n  var pad = [1]\n  var padNum = 0\n  while (hash.length + pad.length + 2 < len) {\n    pad.push(0xff)\n    padNum++\n  }\n  pad.push(0x00)\n  var i = -1\n  while (++i < hash.length) {\n    pad.push(hash[i])\n  }\n  pad = Buffer.from(pad)\n  var red = BN.mont(pub.modulus)\n  sig = new BN(sig).toRed(red)\n\n  sig = sig.redPow(new BN(pub.publicExponent))\n  sig = Buffer.from(sig.fromRed().toArray())\n  var out = padNum < 8 ? 1 : 0\n  len = Math.min(sig.length, pad.length)\n  if (sig.length !== pad.length) out = 1\n\n  i = -1\n  while (++i < len) out |= sig[i] ^ pad[i]\n  return out === 0\n}\n\nfunction ecVerify (sig, hash, pub) {\n  var curveId = curves[pub.data.algorithm.curve.join('.')]\n  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))\n\n  var curve = new EC(curveId)\n  var pubkey = pub.data.subjectPrivateKey.data\n\n  return curve.verify(hash, sig, pubkey)\n}\n\nfunction dsaVerify (sig, hash, pub) {\n  var p = pub.data.p\n  var q = pub.data.q\n  var g = pub.data.g\n  var y = pub.data.pub_key\n  var unpacked = parseKeys.signature.decode(sig, 'der')\n  var s = unpacked.s\n  var r = unpacked.r\n  checkValue(s, q)\n  checkValue(r, q)\n  var montp = BN.mont(p)\n  var w = s.invm(q)\n  var v = g.toRed(montp)\n    .redPow(new BN(hash).mul(w).mod(q))\n    .fromRed()\n    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())\n    .mod(p)\n    .mod(q)\n  return v.cmp(r) === 0\n}\n\nfunction checkValue (b, q) {\n  if (b.cmpn(0) <= 0) throw new Error('invalid sig')\n  if (b.cmp(q) >= q) throw new Error('invalid sig')\n}\n\nmodule.exports = verify\n","var Buffer = require('safe-buffer').Buffer\nvar createHash = require('create-hash')\nvar stream = require('readable-stream')\nvar inherits = require('inherits')\nvar sign = require('./sign')\nvar verify = require('./verify')\n\nvar algorithms = require('./algorithms.json')\nObject.keys(algorithms).forEach(function (key) {\n  algorithms[key].id = Buffer.from(algorithms[key].id, 'hex')\n  algorithms[key.toLowerCase()] = algorithms[key]\n})\n\nfunction Sign (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hashType = data.hash\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Sign, stream.Writable)\n\nSign.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nSign.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nSign.prototype.sign = function signMethod (key, enc) {\n  this.end()\n  var hash = this._hash.digest()\n  var sig = sign(hash, key, this._hashType, this._signType, this._tag)\n\n  return enc ? sig.toString(enc) : sig\n}\n\nfunction Verify (algorithm) {\n  stream.Writable.call(this)\n\n  var data = algorithms[algorithm]\n  if (!data) throw new Error('Unknown message digest')\n\n  this._hash = createHash(data.hash)\n  this._tag = data.id\n  this._signType = data.sign\n}\ninherits(Verify, stream.Writable)\n\nVerify.prototype._write = function _write (data, _, done) {\n  this._hash.update(data)\n  done()\n}\n\nVerify.prototype.update = function update (data, enc) {\n  if (typeof data === 'string') data = Buffer.from(data, enc)\n\n  this._hash.update(data)\n  return this\n}\n\nVerify.prototype.verify = function verifyMethod (key, sig, enc) {\n  if (typeof sig === 'string') sig = Buffer.from(sig, enc)\n\n  this.end()\n  var hash = this._hash.digest()\n  return verify(sig, hash, key, this._signType, this._tag)\n}\n\nfunction createSign (algorithm) {\n  return new Sign(algorithm)\n}\n\nfunction createVerify (algorithm) {\n  return new Verify(algorithm)\n}\n\nmodule.exports = {\n  Sign: createSign,\n  Verify: createVerify,\n  createSign: createSign,\n  createVerify: createVerify\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var elliptic = require('elliptic')\nvar BN = require('bn.js')\n\nmodule.exports = function createECDH (curve) {\n  return new ECDH(curve)\n}\n\nvar aliases = {\n  secp256k1: {\n    name: 'secp256k1',\n    byteLength: 32\n  },\n  secp224r1: {\n    name: 'p224',\n    byteLength: 28\n  },\n  prime256v1: {\n    name: 'p256',\n    byteLength: 32\n  },\n  prime192v1: {\n    name: 'p192',\n    byteLength: 24\n  },\n  ed25519: {\n    name: 'ed25519',\n    byteLength: 32\n  },\n  secp384r1: {\n    name: 'p384',\n    byteLength: 48\n  },\n  secp521r1: {\n    name: 'p521',\n    byteLength: 66\n  }\n}\n\naliases.p224 = aliases.secp224r1\naliases.p256 = aliases.secp256r1 = aliases.prime256v1\naliases.p192 = aliases.secp192r1 = aliases.prime192v1\naliases.p384 = aliases.secp384r1\naliases.p521 = aliases.secp521r1\n\nfunction ECDH (curve) {\n  this.curveType = aliases[curve]\n  if (!this.curveType) {\n    this.curveType = {\n      name: curve\n    }\n  }\n  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap\n  this.keys = void 0\n}\n\nECDH.prototype.generateKeys = function (enc, format) {\n  this.keys = this.curve.genKeyPair()\n  return this.getPublicKey(enc, format)\n}\n\nECDH.prototype.computeSecret = function (other, inenc, enc) {\n  inenc = inenc || 'utf8'\n  if (!Buffer.isBuffer(other)) {\n    other = new Buffer(other, inenc)\n  }\n  var otherPub = this.curve.keyFromPublic(other).getPublic()\n  var out = otherPub.mul(this.keys.getPrivate()).getX()\n  return formatReturnValue(out, enc, this.curveType.byteLength)\n}\n\nECDH.prototype.getPublicKey = function (enc, format) {\n  var key = this.keys.getPublic(format === 'compressed', true)\n  if (format === 'hybrid') {\n    if (key[key.length - 1] % 2) {\n      key[0] = 7\n    } else {\n      key[0] = 6\n    }\n  }\n  return formatReturnValue(key, enc)\n}\n\nECDH.prototype.getPrivateKey = function (enc) {\n  return formatReturnValue(this.keys.getPrivate(), enc)\n}\n\nECDH.prototype.setPublicKey = function (pub, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(pub)) {\n    pub = new Buffer(pub, enc)\n  }\n  this.keys._importPublic(pub)\n  return this\n}\n\nECDH.prototype.setPrivateKey = function (priv, enc) {\n  enc = enc || 'utf8'\n  if (!Buffer.isBuffer(priv)) {\n    priv = new Buffer(priv, enc)\n  }\n\n  var _priv = new BN(priv)\n  _priv = _priv.toString(16)\n  this.keys = this.curve.genKeyPair()\n  this.keys._importPrivate(_priv)\n  return this\n}\n\nfunction formatReturnValue (bn, enc, len) {\n  if (!Array.isArray(bn)) {\n    bn = bn.toArray()\n  }\n  var buf = new Buffer(bn)\n  if (len && buf.length < len) {\n    var zeros = new Buffer(len - buf.length)\n    zeros.fill(0)\n    buf = Buffer.concat([zeros, buf])\n  }\n  if (!enc) {\n    return buf\n  } else {\n    return buf.toString(enc)\n  }\n}\n","var createHash = require('create-hash')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (seed, len) {\n  var t = Buffer.alloc(0)\n  var i = 0\n  var c\n  while (t.length < len) {\n    c = i2ops(i++)\n    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()])\n  }\n  return t.slice(0, len)\n}\n\nfunction i2ops (c) {\n  var out = Buffer.allocUnsafe(4)\n  out.writeUInt32BE(c, 0)\n  return out\n}\n","module.exports = function xor (a, b) {\n  var len = a.length\n  var i = -1\n  while (++i < len) {\n    a[i] ^= b[i]\n  }\n  return a\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this.strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        r |= c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        r |= c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r |= c & 0xf;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","var BN = require('bn.js')\nvar Buffer = require('safe-buffer').Buffer\n\nfunction withPublic (paddedMsg, key) {\n  return Buffer.from(paddedMsg\n    .toRed(BN.mont(key.modulus))\n    .redPow(new BN(key.publicExponent))\n    .fromRed()\n    .toArray())\n}\n\nmodule.exports = withPublic\n","var parseKeys = require('parse-asn1')\nvar randomBytes = require('randombytes')\nvar createHash = require('create-hash')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar withPublic = require('./withPublic')\nvar crt = require('browserify-rsa')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function publicEncrypt (publicKey, msg, reverse) {\n  var padding\n  if (publicKey.padding) {\n    padding = publicKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n  var key = parseKeys(publicKey)\n  var paddedMsg\n  if (padding === 4) {\n    paddedMsg = oaep(key, msg)\n  } else if (padding === 1) {\n    paddedMsg = pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    paddedMsg = new BN(msg)\n    if (paddedMsg.cmp(key.modulus) >= 0) {\n      throw new Error('data too long for modulus')\n    }\n  } else {\n    throw new Error('unknown padding')\n  }\n  if (reverse) {\n    return crt(paddedMsg, key)\n  } else {\n    return withPublic(paddedMsg, key)\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var mLen = msg.length\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  var hLen2 = 2 * hLen\n  if (mLen > k - hLen2 - 2) {\n    throw new Error('message too long')\n  }\n  var ps = Buffer.alloc(k - mLen - hLen2 - 2)\n  var dblen = k - hLen - 1\n  var seed = randomBytes(hLen)\n  var maskedDb = xor(Buffer.concat([iHash, ps, Buffer.alloc(1, 1), msg], dblen), mgf(seed, dblen))\n  var maskedSeed = xor(seed, mgf(maskedDb, hLen))\n  return new BN(Buffer.concat([Buffer.alloc(1), maskedSeed, maskedDb], k))\n}\nfunction pkcs1 (key, msg, reverse) {\n  var mLen = msg.length\n  var k = key.modulus.byteLength()\n  if (mLen > k - 11) {\n    throw new Error('message too long')\n  }\n  var ps\n  if (reverse) {\n    ps = Buffer.alloc(k - mLen - 3, 0xff)\n  } else {\n    ps = nonZero(k - mLen - 3)\n  }\n  return new BN(Buffer.concat([Buffer.from([0, reverse ? 1 : 2]), ps, Buffer.alloc(1), msg], k))\n}\nfunction nonZero (len) {\n  var out = Buffer.allocUnsafe(len)\n  var i = 0\n  var cache = randomBytes(len * 2)\n  var cur = 0\n  var num\n  while (i < len) {\n    if (cur === cache.length) {\n      cache = randomBytes(len * 2)\n      cur = 0\n    }\n    num = cache[cur++]\n    if (num) {\n      out[i++] = num\n    }\n  }\n  return out\n}\n","var parseKeys = require('parse-asn1')\nvar mgf = require('./mgf')\nvar xor = require('./xor')\nvar BN = require('bn.js')\nvar crt = require('browserify-rsa')\nvar createHash = require('create-hash')\nvar withPublic = require('./withPublic')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function privateDecrypt (privateKey, enc, reverse) {\n  var padding\n  if (privateKey.padding) {\n    padding = privateKey.padding\n  } else if (reverse) {\n    padding = 1\n  } else {\n    padding = 4\n  }\n\n  var key = parseKeys(privateKey)\n  var k = key.modulus.byteLength()\n  if (enc.length > k || new BN(enc).cmp(key.modulus) >= 0) {\n    throw new Error('decryption error')\n  }\n  var msg\n  if (reverse) {\n    msg = withPublic(new BN(enc), key)\n  } else {\n    msg = crt(enc, key)\n  }\n  var zBuffer = Buffer.alloc(k - msg.length)\n  msg = Buffer.concat([zBuffer, msg], k)\n  if (padding === 4) {\n    return oaep(key, msg)\n  } else if (padding === 1) {\n    return pkcs1(key, msg, reverse)\n  } else if (padding === 3) {\n    return msg\n  } else {\n    throw new Error('unknown padding')\n  }\n}\n\nfunction oaep (key, msg) {\n  var k = key.modulus.byteLength()\n  var iHash = createHash('sha1').update(Buffer.alloc(0)).digest()\n  var hLen = iHash.length\n  if (msg[0] !== 0) {\n    throw new Error('decryption error')\n  }\n  var maskedSeed = msg.slice(1, hLen + 1)\n  var maskedDb = msg.slice(hLen + 1)\n  var seed = xor(maskedSeed, mgf(maskedDb, hLen))\n  var db = xor(maskedDb, mgf(seed, k - hLen - 1))\n  if (compare(iHash, db.slice(0, hLen))) {\n    throw new Error('decryption error')\n  }\n  var i = hLen\n  while (db[i] === 0) {\n    i++\n  }\n  if (db[i++] !== 1) {\n    throw new Error('decryption error')\n  }\n  return db.slice(i)\n}\n\nfunction pkcs1 (key, msg, reverse) {\n  var p1 = msg.slice(0, 2)\n  var i = 2\n  var status = 0\n  while (msg[i++] !== 0) {\n    if (i >= msg.length) {\n      status++\n      break\n    }\n  }\n  var ps = msg.slice(2, i - 1)\n\n  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)) {\n    status++\n  }\n  if (ps.length < 8) {\n    status++\n  }\n  if (status) {\n    throw new Error('decryption error')\n  }\n  return msg.slice(i)\n}\nfunction compare (a, b) {\n  a = Buffer.from(a)\n  b = Buffer.from(b)\n  var dif = 0\n  var len = a.length\n  if (a.length !== b.length) {\n    dif++\n    len = Math.min(a.length, b.length)\n  }\n  var i = -1\n  while (++i < len) {\n    dif += (a[i] ^ b[i])\n  }\n  return dif\n}\n","exports.publicEncrypt = require('./publicEncrypt')\nexports.privateDecrypt = require('./privateDecrypt')\n\nexports.privateEncrypt = function privateEncrypt (key, buf) {\n  return exports.publicEncrypt(key, buf, true)\n}\n\nexports.publicDecrypt = function publicDecrypt (key, buf) {\n  return exports.privateDecrypt(key, buf, true)\n}\n","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\nvar safeBuffer = require('safe-buffer')\nvar randombytes = require('randombytes')\nvar Buffer = safeBuffer.Buffer\nvar kBufferMaxLength = safeBuffer.kMaxLength\nvar crypto = global.crypto || global.msCrypto\nvar kMaxUint32 = Math.pow(2, 32) - 1\nfunction assertOffset (offset, length) {\n  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare\n    throw new TypeError('offset must be a number')\n  }\n\n  if (offset > kMaxUint32 || offset < 0) {\n    throw new TypeError('offset must be a uint32')\n  }\n\n  if (offset > kBufferMaxLength || offset > length) {\n    throw new RangeError('offset out of range')\n  }\n}\n\nfunction assertSize (size, offset, length) {\n  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare\n    throw new TypeError('size must be a number')\n  }\n\n  if (size > kMaxUint32 || size < 0) {\n    throw new TypeError('size must be a uint32')\n  }\n\n  if (size + offset > length || size > kBufferMaxLength) {\n    throw new RangeError('buffer too small')\n  }\n}\nif ((crypto && crypto.getRandomValues) || !process.browser) {\n  exports.randomFill = randomFill\n  exports.randomFillSync = randomFillSync\n} else {\n  exports.randomFill = oldBrowser\n  exports.randomFillSync = oldBrowser\n}\nfunction randomFill (buf, offset, size, cb) {\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  if (typeof offset === 'function') {\n    cb = offset\n    offset = 0\n    size = buf.length\n  } else if (typeof size === 'function') {\n    cb = size\n    size = buf.length - offset\n  } else if (typeof cb !== 'function') {\n    throw new TypeError('\"cb\" argument must be a function')\n  }\n  assertOffset(offset, buf.length)\n  assertSize(size, offset, buf.length)\n  return actualFill(buf, offset, size, cb)\n}\n\nfunction actualFill (buf, offset, size, cb) {\n  if (process.browser) {\n    var ourBuf = buf.buffer\n    var uint = new Uint8Array(ourBuf, offset, size)\n    crypto.getRandomValues(uint)\n    if (cb) {\n      process.nextTick(function () {\n        cb(null, buf)\n      })\n      return\n    }\n    return buf\n  }\n  if (cb) {\n    randombytes(size, function (err, bytes) {\n      if (err) {\n        return cb(err)\n      }\n      bytes.copy(buf, offset)\n      cb(null, buf)\n    })\n    return\n  }\n  var bytes = randombytes(size)\n  bytes.copy(buf, offset)\n  return buf\n}\nfunction randomFillSync (buf, offset, size) {\n  if (typeof offset === 'undefined') {\n    offset = 0\n  }\n  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {\n    throw new TypeError('\"buf\" argument must be a Buffer or Uint8Array')\n  }\n\n  assertOffset(offset, buf.length)\n\n  if (size === undefined) size = buf.length - offset\n\n  assertSize(size, offset, buf.length)\n\n  return actualFill(buf, offset, size)\n}\n","'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));",";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));","module.exports = {\n    public_key : 'ddf4636674238849e5422709e17c4863',\n    private_key : '09b155ea7febdbd215169af859ab76c676ae1fec'\n}\n","const md5 = require('crypto-js/md5');\nconst constants = require('../utils/consts');\n\nconst url_comic = 'https://gateway.marvel.com:443/v1/public/comics/';\nconst url_comics = 'https://gateway.marvel.com:443/v1/public/comics?orderBy=-onsaleDate&limit=24&apikey=' + constants.public_key;\n\nconst detail = document.querySelector('#wrapper');\nconst title_wrapper = document.querySelector('#title_wrapper');\nconst breadcrumbs = document.querySelector('#breadcrumbs ul');\n\nfunction outputComic(data) {\n    let item = document.createElement('div');\n    item.setAttribute('class', 'comicDetail container col col-12-np');\n    let code = '';\n    code += '<div class=\"col col-4\">';\n    code += '<div class=\"r-box r-box-1_2\"><img src=\"' + data.thumbnail.path + '.' + data.thumbnail.extension + '\" alt=\"Portada del comic: ' + data.title + '\"></div>';\n    code += '</div>';\n    code += '<div class=\"col col-8\">';\n    title_wrapper.innerHTML = '<h1 class=\"title\"><span>' + data.title + '</span></h1>';\n    if (data.description !== null) {\n        code += '<div>' + data.description + '</div>';\n    }\n    if (data.description !== '') {\n        code += '<p><b>isbn: ' + data.isbn + '</b></p>';\n    }\n    code += '<p><b>Fecha de venta:</b> ' + data.dates[0].date + '</p>';\n    code += '<h2>Precios</h2>';\n    code += '<ul>';\n    data.prices.forEach(price => {\n        let priceName = '';\n        if (price.type === 'printPrice') {\n            priceName = 'Precio de la versión impresa:';\n        } else if (price.type === 'digitalPurchasePrice') {\n            priceName = 'Precio de la versión digital:';\n        }\n        code += '<li>' + priceName + ' ' + price.price + '</li>';\n    })\n    code += '</ul>';\n    code += '<p><b>Serie:</b>' + data.series.name + '</p>';\n    if (data.creators.available > 0) {\n        code += '<h2>Autores</h2>';\n        code += '<ul>';\n        data.creators.items.forEach(element => {\n            code += '<li>' + element.name + ' (' + element.role + ').</li>';\n        }); \n        code += '</ul>';\n    }\n    if (data.characters.available > 0) {\n        code += '<h2>Personajes</h2>';\n        code += '<ul>';\n        data.characters.items.forEach(character => {\n            code += '<li>' + character.name + '</li>';\n        }); \n        code += '</ul>';\n    }\n    code += '<h2>Historias</h2>';\n    code += '<ul>';\n    data.stories.items.forEach(story => {\n        code += '<li>' + story.name + '. Tipo: ' + story.type + '</li>';\n    }); \n    code += '</ul>';\n    code += '</div>';\n    \n    item.innerHTML = code;\n    detail.appendChild(item);\n}\n\nfunction outputComics(data) {\n    let item = document.createElement('div');\n    item.setAttribute('class', 'comicItem col col-3');\n    let code = '';\n    code += '<div class=\"r-box r-box-1_1\"><img src=\"' + data.thumbnail.path + '.' + data.thumbnail.extension + '\" alt=\"Portada del comic: ' + data.title + '\"></div>';\n    code += '<h3>' + data.title + '</h3>';\n    if (data.description !== null) {\n        code += '<p>' + data.description + '</p>';\n    }\n    code += '<a href=\"./comic.html?id=' + data.id + '\">Ver más <span>&gt&gt</span></a>';\n    item.innerHTML = code;\n    detail.appendChild(item);\n}\n\nmodule.exports = {\n    getComic: function(id) {\n        const ts = new Date().getTime();\n        const message = ts+constants.private_key+constants.public_key;\n        const md = md5(message);\n        const hash = md.toString();\n        const url = url_comic + id + '?apikey=' + constants.public_key + '&ts=' + ts + '&hash=' + hash;\n\n        fetch(url).then(response => {\n            return response.json();\n        }).then(data => {\n            if (data.code === 404) {\n                detail.innerHTML = '';\n                title_wrapper.innerHTML = '<h1 class=\"title\"><span>Error</span></h1>';\n                detail.innerHTML = '<p>No ha sido posible obtener los datos del comic seleccionado.</p>';\n            } else {\n                /* Datos de las migas de pan */\n                let characterLi = document.createElement('li');\n                characterLi.innerHTML = '<a href=\"./comic.html\">Comics</a>';\n                breadcrumbs.appendChild(characterLi);\n                let currentLi = document.createElement('li');\n                currentLi.setAttribute('class', 'active');\n                currentLi.innerHTML = data.data.results[0].title;\n                breadcrumbs.appendChild(currentLi);\n\n                /* Datos del comic elegido */\n                detail.innerHTML = '';\n                data.data.results.forEach(element => {\n                    outputComic(element); \n                });\n            }\n        }).catch(error => {\n            console.error(JSON.stringify(error));\n        });\n    },\n    getComicsExtended: function() {\n        const ts = new Date().getTime();\n        const message = ts+constants.private_key+constants.public_key;\n        const md = md5(message);\n        const hash = md.toString();\n        const url = url_comics + '&ts=' + ts + '&hash=' + hash;\n        fetch(url).then(response => {\n            return response.json();\n        }).then(data => {\n            /* Datos de las migas de pan */\n            let currentLi = document.createElement('li');\n            currentLi.setAttribute('class', 'active');\n            currentLi.innerHTML = 'Comics';\n            breadcrumbs.appendChild(currentLi);\n\n            /* Datos del título */\n            title_wrapper.innerHTML = '<h1 class=\"title\"><span>Comics</span></h1>';\n\n            /* Datos de los comics elegido */\n            detail.innerHTML = '';\n            data.data.results.forEach(element => {\n                outputComics(element);\n            });\n        }).catch(error => {\n            console.error(JSON.stringify(error));\n        });\n    }\n}","const comicUtils = require('./comicUtils');\n\nconst queryString = window.location.search;\nconst urlParams = new URLSearchParams(queryString);\nconst id = urlParams.get('id');\n\nif (id !== null && id !== '') {\n    comicUtils.getComic(id);\n} else {\n    comicUtils.getComicsExtended();\n}"]}